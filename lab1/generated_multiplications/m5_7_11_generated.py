# Matrix multiplication: C = A @ B
# A: 5×7, B: 7×11, C: 5×11
# Using 280 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(5)] for _ in range(11)])
	M0 = (A[0][0] + -A[0][2] + -A[0][4] + A[0][6] + A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + -A[2][0] + A[2][1] + A[2][4] + -A[2][5]) * (0.125*B[4][2] + 0.125*B[4][3] + B[4][4] + -0.125*B[4][8] + -0.125*B[4][9] + -B[4][10] + -0.125*B[5][1] + -B[5][4] + 0.125*B[5][5] + 0.125*B[5][7] + B[5][10] + B[6][0] + 0.125*B[6][1] + -0.125*B[6][3] + -B[6][6] + -0.125*B[6][7] + 0.125*B[6][9])
	M1 = (A[0][0] + A[0][2] + -A[0][4] + -A[0][6] + A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + -A[2][0] + -A[2][1] + A[2][4] + A[2][5]) * (0.125*B[4][2] + -0.125*B[4][3] + -B[4][4] + -0.125*B[4][8] + 0.125*B[4][9] + B[4][10] + 0.125*B[5][1] + -B[5][4] + 0.125*B[5][5] + -0.125*B[5][7] + B[5][10] + B[6][0] + -0.125*B[6][1] + -0.125*B[6][3] + -B[6][6] + 0.125*B[6][7] + 0.125*B[6][9])
	M2 = (A[0][0] + A[0][2] + -A[0][4] + -A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6] + A[2][0] + -A[2][1] + -A[2][4] + A[2][5]) * (0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + -0.125*B[4][8] + -0.125*B[4][9] + B[4][10] + -0.125*B[5][1] + B[5][4] + 0.125*B[5][5] + 0.125*B[5][7] + -B[5][10] + B[6][0] + -0.125*B[6][1] + 0.125*B[6][3] + -B[6][6] + 0.125*B[6][7] + -0.125*B[6][9])
	M3 = (A[0][0] + -A[0][2] + -A[0][4] + A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5]) * (-0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + 0.125*B[4][8] + -0.125*B[4][9] + B[4][10] + -0.125*B[5][1] + -B[5][4] + -0.125*B[5][5] + 0.125*B[5][7] + B[5][10] + -B[6][0] + -0.125*B[6][1] + -0.125*B[6][3] + B[6][6] + 0.125*B[6][7] + 0.125*B[6][9])
	M4 = (-A[0][0] + -A[0][2] + A[0][4] + A[0][6] + A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5]) * (B[4][0] + -0.125*B[4][2] + 0.125*B[4][5] + -B[4][6] + 0.125*B[4][8] + B[5][0] + -0.125*B[5][1] + -0.125*B[5][3] + -B[5][6] + 0.125*B[5][7] + 0.125*B[5][9] + 0.125*B[6][1] + -B[6][4] + 0.125*B[6][5] + -0.125*B[6][7] + B[6][10])
	M5 = (-A[0][0] + -A[0][2] + A[0][4] + A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6] + -A[2][0] + A[2][1] + A[2][4] + -A[2][5]) * (B[4][0] + -0.125*B[4][2] + -0.125*B[4][5] + -B[4][6] + 0.125*B[4][8] + -B[5][0] + 0.125*B[5][1] + -0.125*B[5][3] + B[5][6] + -0.125*B[5][7] + 0.125*B[5][9] + 0.125*B[6][1] + -B[6][4] + -0.125*B[6][5] + -0.125*B[6][7] + B[6][10])
	M6 = (-A[0][0] + A[0][2] + A[0][4] + -A[0][6] + A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + A[2][0] + -A[2][1] + -A[2][4] + A[2][5]) * (B[4][0] + 0.125*B[4][2] + 0.125*B[4][5] + -B[4][6] + -0.125*B[4][8] + -B[5][0] + -0.125*B[5][1] + 0.125*B[5][3] + B[5][6] + 0.125*B[5][7] + -0.125*B[5][9] + 0.125*B[6][1] + B[6][4] + -0.125*B[6][5] + -0.125*B[6][7] + -B[6][10])
	M7 = (-A[0][0] + A[0][2] + A[0][4] + -A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6] + -A[2][0] + -A[2][1] + A[2][4] + A[2][5]) * (-B[4][0] + -0.125*B[4][2] + 0.125*B[4][5] + B[4][6] + 0.125*B[4][8] + -B[5][0] + -0.125*B[5][1] + -0.125*B[5][3] + B[5][6] + 0.125*B[5][7] + 0.125*B[5][9] + -0.125*B[6][1] + -B[6][4] + -0.125*B[6][5] + 0.125*B[6][7] + B[6][10])
	M8 = (-A[0][0] + A[0][2] + A[0][4] + -A[0][6] + A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + -A[2][0] + A[2][1] + A[2][4] + -A[2][5]) * (B[4][0] + 0.125*B[4][1] + -0.125*B[4][3] + -B[4][6] + -0.125*B[4][7] + 0.125*B[4][9] + -B[5][0] + -0.125*B[5][2] + -0.125*B[5][5] + B[5][6] + 0.125*B[5][8] + 0.125*B[6][2] + 0.125*B[6][3] + B[6][4] + -0.125*B[6][8] + -0.125*B[6][9] + -B[6][10])
	M9 = (-A[0][0] + -A[0][2] + A[0][4] + A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6] + A[2][0] + -A[2][1] + -A[2][4] + A[2][5]) * (B[4][0] + -0.125*B[4][1] + 0.125*B[4][3] + -B[4][6] + 0.125*B[4][7] + -0.125*B[4][9] + -B[5][0] + 0.125*B[5][2] + 0.125*B[5][5] + B[5][6] + -0.125*B[5][8] + 0.125*B[6][2] + 0.125*B[6][3] + -B[6][4] + -0.125*B[6][8] + -0.125*B[6][9] + B[6][10])
	M10 = (A[0][0] + A[0][2] + -A[0][4] + -A[0][6] + -A[1][1] + A[1][2] + A[1][5] + -A[1][6] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5]) * (B[4][0] + -0.125*B[4][1] + -0.125*B[4][3] + -B[4][6] + 0.125*B[4][7] + 0.125*B[4][9] + B[5][0] + -0.125*B[5][2] + 0.125*B[5][5] + -B[5][6] + 0.125*B[5][8] + 0.125*B[6][2] + -0.125*B[6][3] + -B[6][4] + -0.125*B[6][8] + 0.125*B[6][9] + B[6][10])
	M11 = (-A[0][0] + A[0][2] + A[0][4] + -A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5]) * (-B[4][0] + -0.125*B[4][1] + -0.125*B[4][3] + B[4][6] + 0.125*B[4][7] + 0.125*B[4][9] + -B[5][0] + -0.125*B[5][2] + 0.125*B[5][5] + B[5][6] + 0.125*B[5][8] + -0.125*B[6][2] + 0.125*B[6][3] + -B[6][4] + 0.125*B[6][8] + -0.125*B[6][9] + B[6][10])
	M12 = (A[0][0] + A[0][2] + -A[0][4] + -A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6] + -A[2][0] + A[2][1] + A[2][4] + -A[2][5]) * (0.125*B[4][1] + -B[4][4] + -0.125*B[4][5] + -0.125*B[4][7] + B[4][10] + -0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + 0.125*B[5][8] + 0.125*B[5][9] + -B[5][10] + B[6][0] + -0.125*B[6][2] + -0.125*B[6][5] + -B[6][6] + 0.125*B[6][8])
	M13 = (A[0][0] + A[0][2] + -A[0][4] + -A[0][6] + A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5]) * (-0.125*B[4][1] + B[4][4] + -0.125*B[4][5] + 0.125*B[4][7] + -B[4][10] + -0.125*B[5][2] + 0.125*B[5][3] + B[5][4] + 0.125*B[5][8] + -0.125*B[5][9] + -B[5][10] + -B[6][0] + 0.125*B[6][2] + -0.125*B[6][5] + B[6][6] + -0.125*B[6][8])
	M14 = (-A[0][0] + A[0][2] + A[0][4] + -A[0][6] + -A[1][1] + -A[1][2] + A[1][5] + A[1][6] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5]) * (0.125*B[4][1] + B[4][4] + 0.125*B[4][5] + -0.125*B[4][7] + -B[4][10] + 0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + -0.125*B[5][8] + 0.125*B[5][9] + -B[5][10] + B[6][0] + 0.125*B[6][2] + -0.125*B[6][5] + -B[6][6] + -0.125*B[6][8])
	M15 = (-A[0][0] + A[0][2] + A[0][4] + -A[0][6] + -A[1][1] + A[1][2] + A[1][5] + -A[1][6] + -A[2][0] + A[2][1] + A[2][4] + -A[2][5]) * (0.125*B[4][1] + B[4][4] + -0.125*B[4][5] + -0.125*B[4][7] + -B[4][10] + -0.125*B[5][2] + -0.125*B[5][3] + -B[5][4] + 0.125*B[5][8] + 0.125*B[5][9] + B[5][10] + B[6][0] + 0.125*B[6][2] + 0.125*B[6][5] + -B[6][6] + -0.125*B[6][8])
	M16 = (A[0][0] + A[0][2] + -A[0][4] + -A[0][6] + -A[2][0] + -A[2][2] + A[2][4] + A[2][6]) * (-0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[4][9] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][7] + 0.125*B[5][8] + B[6][0] + -0.125*B[6][1] + -0.125*B[6][2] + -0.125*B[6][3] + B[6][4] + -0.125*B[6][5] + -B[6][6] + 0.125*B[6][7] + 0.125*B[6][8] + 0.125*B[6][9] + -B[6][10])
	M17 = (-A[0][0] + -A[0][2] + A[0][4] + A[0][6] + -A[2][0] + -A[2][2] + A[2][4] + A[2][6]) * (-0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[4][9] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][7] + 0.125*B[5][8] + -B[6][0] + 0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][3] + -B[6][4] + -0.125*B[6][5] + B[6][6] + -0.125*B[6][7] + -0.125*B[6][8] + 0.125*B[6][9] + B[6][10])
	M18 = (A[0][0] + -A[0][2] + -A[0][4] + A[0][6] + A[2][0] + -A[2][2] + -A[2][4] + A[2][6]) * (-0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[4][9] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][7] + 0.125*B[5][8] + B[6][0] + 0.125*B[6][1] + 0.125*B[6][2] + 0.125*B[6][3] + B[6][4] + 0.125*B[6][5] + -B[6][6] + -0.125*B[6][7] + -0.125*B[6][8] + -0.125*B[6][9] + -B[6][10])
	M19 = (A[0][0] + -A[0][2] + -A[0][4] + A[0][6] + -A[2][0] + A[2][2] + A[2][4] + -A[2][6]) * (-0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[4][9] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][7] + 0.125*B[5][8] + -B[6][0] + -0.125*B[6][1] + -0.125*B[6][2] + 0.125*B[6][3] + -B[6][4] + 0.125*B[6][5] + B[6][6] + 0.125*B[6][7] + 0.125*B[6][8] + -0.125*B[6][9] + B[6][10])
	M20 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + -A[2][0] + -A[2][1] + A[2][4] + A[2][5]) * (B[4][0] + B[4][4] + -B[4][6] + -B[4][10] + B[5][0] + -0.125*B[5][1] + 0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + -0.125*B[5][5] + -B[5][6] + 0.125*B[5][7] + -0.125*B[5][8] + 0.125*B[5][9] + -B[5][10] + 0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][7] + -0.125*B[6][8])
	M21 = (A[0][0] + -A[0][1] + -A[0][4] + A[0][5] + A[2][0] + -A[2][1] + -A[2][4] + A[2][5]) * (B[4][0] + B[4][4] + -B[4][6] + -B[4][10] + -B[5][0] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][3] + -B[5][4] + -0.125*B[5][5] + B[5][6] + -0.125*B[5][7] + 0.125*B[5][8] + 0.125*B[5][9] + B[5][10] + 0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][7] + -0.125*B[6][8])
	M22 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5]) * (B[4][0] + B[4][4] + -B[4][6] + -B[4][10] + B[5][0] + 0.125*B[5][1] + -0.125*B[5][2] + 0.125*B[5][3] + B[5][4] + 0.125*B[5][5] + -B[5][6] + -0.125*B[5][7] + 0.125*B[5][8] + -0.125*B[5][9] + -B[5][10] + 0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][7] + -0.125*B[6][8])
	M23 = (-A[0][0] + A[0][1] + A[0][4] + -A[0][5] + A[2][0] + -A[2][1] + -A[2][4] + A[2][5]) * (-B[4][0] + -B[4][4] + B[4][6] + B[4][10] + B[5][0] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + -0.125*B[5][5] + -B[5][6] + -0.125*B[5][7] + 0.125*B[5][8] + 0.125*B[5][9] + -B[5][10] + -0.125*B[6][1] + -0.125*B[6][2] + 0.125*B[6][7] + 0.125*B[6][8])
	M24 = (-A[1][0] + -A[1][1] + A[1][4] + A[1][5] + -A[2][0] + -A[2][1] + A[2][4] + A[2][5]) * (B[4][0] + 0.125*B[4][1] + -0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + 0.125*B[4][5] + -B[4][6] + -0.125*B[4][7] + 0.125*B[4][8] + -0.125*B[4][9] + B[4][10] + B[5][0] + -B[5][4] + -B[5][6] + B[5][10] + -0.125*B[6][3] + 0.125*B[6][5] + 0.125*B[6][9])
	M25 = (-A[1][0] + A[1][1] + A[1][4] + -A[1][5] + -A[2][0] + A[2][1] + A[2][4] + -A[2][5]) * (B[4][0] + 0.125*B[4][1] + -0.125*B[4][2] + -0.125*B[4][3] + -B[4][4] + -0.125*B[4][5] + -B[4][6] + -0.125*B[4][7] + 0.125*B[4][8] + 0.125*B[4][9] + B[4][10] + -B[5][0] + B[5][4] + B[5][6] + -B[5][10] + 0.125*B[6][3] + -0.125*B[6][5] + -0.125*B[6][9])
	M26 = (-A[1][0] + A[1][1] + A[1][4] + -A[1][5] + A[2][0] + -A[2][1] + -A[2][4] + A[2][5]) * (B[4][0] + -0.125*B[4][1] + 0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + 0.125*B[4][5] + -B[4][6] + 0.125*B[4][7] + -0.125*B[4][8] + -0.125*B[4][9] + B[4][10] + -B[5][0] + B[5][4] + B[5][6] + -B[5][10] + 0.125*B[6][3] + -0.125*B[6][5] + -0.125*B[6][9])
	M27 = (-A[1][0] + -A[1][1] + A[1][4] + A[1][5] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5]) * (-B[4][0] + 0.125*B[4][1] + -0.125*B[4][2] + 0.125*B[4][3] + B[4][4] + 0.125*B[4][5] + B[4][6] + -0.125*B[4][7] + 0.125*B[4][8] + -0.125*B[4][9] + -B[4][10] + -B[5][0] + B[5][4] + B[5][6] + -B[5][10] + 0.125*B[6][3] + -0.125*B[6][5] + -0.125*B[6][9])
	M28 = (-A[1][1] + A[1][2] + A[1][5] + -A[1][6] + -A[2][1] + A[2][2] + A[2][5] + -A[2][6]) * (-0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[4][9] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][7] + 0.125*B[5][8] + -B[6][0] + -0.125*B[6][1] + 0.125*B[6][2] + 0.125*B[6][3] + B[6][4] + -0.125*B[6][5] + B[6][6] + 0.125*B[6][7] + -0.125*B[6][8] + -0.125*B[6][9] + -B[6][10])
	M29 = (-A[1][1] + -A[1][2] + A[1][5] + A[1][6] + -A[2][1] + -A[2][2] + A[2][5] + A[2][6]) * (-0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[4][9] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][7] + 0.125*B[5][8] + B[6][0] + 0.125*B[6][1] + -0.125*B[6][2] + 0.125*B[6][3] + -B[6][4] + -0.125*B[6][5] + -B[6][6] + -0.125*B[6][7] + 0.125*B[6][8] + -0.125*B[6][9] + B[6][10])
	M30 = (-A[1][1] + -A[1][2] + A[1][5] + A[1][6] + A[2][1] + A[2][2] + -A[2][5] + -A[2][6]) * (-0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[4][9] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][7] + 0.125*B[5][8] + -B[6][0] + 0.125*B[6][1] + -0.125*B[6][2] + -0.125*B[6][3] + B[6][4] + 0.125*B[6][5] + B[6][6] + -0.125*B[6][7] + 0.125*B[6][8] + 0.125*B[6][9] + -B[6][10])
	M31 = (A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + -A[2][1] + A[2][2] + A[2][5] + -A[2][6]) * (-0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[4][9] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][7] + 0.125*B[5][8] + B[6][0] + -0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][3] + -B[6][4] + 0.125*B[6][5] + -B[6][6] + 0.125*B[6][7] + -0.125*B[6][8] + 0.125*B[6][9] + B[6][10])
	M32 = (A[0][1] + A[0][2] + -A[0][5] + -A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6]) * (-B[4][0] + -B[4][4] + B[4][6] + B[4][10] + -B[5][0] + -0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + 0.125*B[5][5] + B[5][6] + 0.125*B[5][7] + 0.125*B[5][8] + 0.125*B[5][9] + -B[5][10] + -0.125*B[6][1] + -0.125*B[6][2] + 0.125*B[6][7] + 0.125*B[6][8])
	M33 = (-A[0][1] + A[0][2] + A[0][5] + -A[0][6] + A[1][1] + -A[1][2] + -A[1][5] + A[1][6]) * (B[4][0] + B[4][4] + -B[4][6] + -B[4][10] + -B[5][0] + -0.125*B[5][1] + -0.125*B[5][2] + 0.125*B[5][3] + B[5][4] + -0.125*B[5][5] + B[5][6] + 0.125*B[5][7] + 0.125*B[5][8] + -0.125*B[5][9] + -B[5][10] + 0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][7] + -0.125*B[6][8])
	M34 = (A[0][1] + -A[0][2] + -A[0][5] + A[0][6] + A[1][1] + -A[1][2] + -A[1][5] + A[1][6]) * (B[4][0] + B[4][4] + -B[4][6] + -B[4][10] + B[5][0] + -0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][3] + -B[5][4] + 0.125*B[5][5] + -B[5][6] + 0.125*B[5][7] + 0.125*B[5][8] + 0.125*B[5][9] + B[5][10] + 0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][7] + -0.125*B[6][8])
	M35 = (-A[0][1] + -A[0][2] + A[0][5] + A[0][6] + A[1][1] + A[1][2] + -A[1][5] + -A[1][6]) * (-B[4][0] + -B[4][4] + B[4][6] + B[4][10] + B[5][0] + -0.125*B[5][1] + -0.125*B[5][2] + 0.125*B[5][3] + -B[5][4] + -0.125*B[5][5] + -B[5][6] + 0.125*B[5][7] + 0.125*B[5][8] + -0.125*B[5][9] + B[5][10] + -0.125*B[6][1] + -0.125*B[6][2] + 0.125*B[6][7] + 0.125*B[6][8])
	M36 = (-A[0][0] + A[0][2] + A[0][4] + -A[0][6] + A[1][0] + -A[1][2] + -A[1][4] + A[1][6]) * (-B[4][0] + -0.125*B[4][1] + -0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + -0.125*B[4][5] + B[4][6] + 0.125*B[4][7] + 0.125*B[4][8] + -0.125*B[4][9] + B[4][10] + B[5][0] + -B[5][4] + -B[5][6] + B[5][10] + -0.125*B[6][3] + 0.125*B[6][5] + 0.125*B[6][9])
	M37 = (-A[0][0] + -A[0][2] + A[0][4] + A[0][6] + -A[1][0] + -A[1][2] + A[1][4] + A[1][6]) * (-B[4][0] + 0.125*B[4][1] + 0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + -0.125*B[4][5] + B[4][6] + -0.125*B[4][7] + -0.125*B[4][8] + -0.125*B[4][9] + B[4][10] + -B[5][0] + B[5][4] + B[5][6] + -B[5][10] + 0.125*B[6][3] + -0.125*B[6][5] + -0.125*B[6][9])
	M38 = (A[0][0] + -A[0][2] + -A[0][4] + A[0][6] + A[1][0] + -A[1][2] + -A[1][4] + A[1][6]) * (-B[4][0] + -0.125*B[4][1] + -0.125*B[4][2] + -0.125*B[4][3] + -B[4][4] + 0.125*B[4][5] + B[4][6] + 0.125*B[4][7] + 0.125*B[4][8] + 0.125*B[4][9] + B[4][10] + -B[5][0] + B[5][4] + B[5][6] + -B[5][10] + 0.125*B[6][3] + -0.125*B[6][5] + -0.125*B[6][9])
	M39 = (-A[0][0] + -A[0][2] + A[0][4] + A[0][6] + A[1][0] + A[1][2] + -A[1][4] + -A[1][6]) * (B[4][0] + -0.125*B[4][1] + -0.125*B[4][2] + 0.125*B[4][3] + B[4][4] + -0.125*B[4][5] + -B[4][6] + 0.125*B[4][7] + 0.125*B[4][8] + -0.125*B[4][9] + -B[4][10] + -B[5][0] + B[5][4] + B[5][6] + -B[5][10] + 0.125*B[6][3] + -0.125*B[6][5] + -0.125*B[6][9])
	M40 = (A[1][2] + -A[1][6] + A[4][2] + -A[4][6]) * (-B[0][4] + B[1][2] + B[1][4] + B[2][0] + B[2][2] + B[2][3] + B[2][5] + -B[3][0] + -B[3][5])
	M41 = (-A[0][1] + A[0][5] + A[1][1] + -A[1][5] + -A[3][1] + A[3][5] + A[4][1] + -A[4][5]) * (B[0][3] + -B[0][4] + -B[1][0] + B[1][1] + -B[1][3] + B[1][4] + B[2][1] + B[2][5] + -B[3][5])
	M42 = (-A[0][3] + A[1][3] + -A[3][3] + A[4][3]) * (2.0*B[0][4] + -2.0*B[1][4] + -B[2][3] + -B[2][4] + B[3][1] + -B[3][3] + B[3][4])
	M43 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + -A[1][0] + -A[1][1] + -A[1][2] + -A[1][3] + A[1][4] + A[1][5] + A[1][6] + A[3][0] + A[3][1] + -A[3][4] + -A[3][5] + -A[4][0] + -A[4][1] + -A[4][2] + -A[4][3] + A[4][4] + A[4][5] + A[4][6]) * (-B[0][4] + B[1][4] + B[1][5] + B[2][4] + B[2][5] + -B[3][5])
	M44 = (-A[0][0] + A[0][4] + A[1][0] + -A[1][4] + -A[3][0] + A[3][4] + A[4][0] + -A[4][4]) * (-B[0][0] + B[0][1] + -B[2][0] + -B[2][5] + 2.0*B[3][0] + B[3][5])
	M45 = (A[0][2] + A[0][3] + -A[0][6] + A[3][2] + A[3][3] + -A[3][6]) * (-B[0][4] + -B[0][5] + B[1][4] + B[1][5] + B[2][4] + B[2][5])
	M46 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + A[3][0] + A[3][1] + -A[3][4] + -A[3][5]) * (B[1][4] + B[1][5] + B[2][4] + B[2][5] + -B[3][4] + -B[3][5])
	M47 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + A[1][3] + A[3][0] + A[3][1] + -A[3][4] + -A[3][5] + A[4][3]) * (B[0][3] + -B[0][4] + B[1][4] + B[2][4] + -B[3][4])
	M48 = (A[1][3] + A[4][3]) * (-B[0][4] + -B[1][3] + B[1][4] + B[3][2] + B[3][3])
	M49 = (A[1][0] + -A[1][4] + A[4][0] + -A[4][4]) * (B[0][0] + B[0][2] + B[0][5] + -B[1][0] + -B[1][5])
	M50 = (-A[0][1] + A[0][5] + -A[1][3] + -A[3][1] + A[3][5] + -A[4][3]) * (B[0][3] + -B[0][4] + -B[1][3] + B[1][4] + B[3][1])
	M51 = (A[0][0] + A[0][2] + A[0][3] + -A[0][4] + -A[0][6] + -A[1][0] + A[1][4] + A[3][0] + A[3][2] + A[3][3] + -A[3][4] + -A[3][6] + -A[4][0] + A[4][4]) * (B[0][5] + -B[1][5] + -B[2][5] + B[3][0] + B[3][5])
	M52 = (A[0][0] + -A[0][2] + -A[0][4] + A[0][6] + -A[1][0] + A[1][4] + A[3][0] + -A[3][2] + -A[3][4] + A[3][6] + -A[4][0] + A[4][4]) * (B[0][2] + -B[2][0] + -B[2][5] + B[3][0] + B[3][5])
	M53 = (-A[0][1] + A[0][5] + -A[1][0] + A[1][4] + -A[3][1] + A[3][5] + -A[4][0] + A[4][4]) * (B[0][1] + -B[1][0] + B[2][5] + -B[3][5])
	M54 = (A[0][2] + -A[0][6] + A[3][2] + -A[3][6]) * (B[0][2] + B[2][1] + B[2][2] + B[3][2])
	M55 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + -A[1][0] + -A[1][1] + A[1][4] + A[1][5] + A[3][0] + A[3][1] + -A[3][4] + -A[3][5] + -A[4][0] + -A[4][1] + A[4][4] + A[4][5]) * (B[0][3] + -2.0*B[0][4] + B[1][4] + B[2][4])
	M56 = (A[0][1] + -A[0][5] + A[3][1] + -A[3][5]) * (-B[0][1] + B[1][1] + B[1][2] + -B[3][1])
	M57 = (-A[0][0] + -A[0][1] + -A[0][3] + A[0][4] + A[0][5] + -A[3][0] + -A[3][1] + -A[3][3] + A[3][4] + A[3][5]) * (B[2][4] + -B[2][5] + -B[3][4] + B[3][5])
	M58 = (-A[0][2] + A[0][3] + A[0][6] + -A[1][3] + -A[3][2] + A[3][3] + A[3][6] + -A[4][3]) * (B[0][4] + -B[1][4] + -B[2][3] + B[3][2])
	M59 = (A[0][0] + A[0][2] + A[0][3] + -A[0][4] + -A[0][6] + A[3][0] + A[3][2] + A[3][3] + -A[3][4] + -A[3][6]) * (-B[0][4] + B[0][5] + B[1][4] + -B[1][5])
	M60 = (-A[1][1] + -A[1][3] + A[1][5] + -A[4][1] + -A[4][3] + A[4][5]) * (B[0][3] + -B[0][4] + -B[1][3] + B[1][4])
	M61 = (A[1][2] + A[1][3] + -A[1][6] + A[4][2] + A[4][3] + -A[4][6]) * (-B[1][5] + -B[2][5] + B[3][0] + 2.0*B[3][5])
	M62 = (A[0][0] + -A[0][2] + -A[0][4] + A[0][6] + -A[1][0] + A[1][2] + A[1][4] + -A[1][6] + A[3][0] + -A[3][2] + -A[3][4] + A[3][6] + -A[4][0] + A[4][2] + A[4][4] + -A[4][6]) * (-B[2][0] + -B[2][5] + B[3][0] + B[3][5])
	M63 = (-A[0][0] + -A[0][2] + -A[0][3] + A[0][4] + A[0][6] + -A[1][1] + A[1][2] + A[1][5] + -A[1][6] + -A[3][0] + -A[3][2] + -A[3][3] + A[3][4] + A[3][6] + -A[4][1] + A[4][2] + A[4][5] + -A[4][6]) * (-B[0][4] + B[1][4] + B[2][5] + -B[3][5])
	M64 = (A[0][2] + -A[0][3] + -A[0][6] + -A[1][2] + A[1][3] + A[1][6] + A[3][2] + -A[3][3] + -A[3][6] + -A[4][2] + A[4][3] + A[4][6]) * (-B[0][4] + B[1][4] + B[2][3])
	M65 = (A[1][0] + A[1][1] + -A[1][4] + -A[1][5] + A[4][0] + A[4][1] + -A[4][4] + -A[4][5]) * (B[1][0] + -B[2][5] + B[3][5])
	M66 = (-A[1][0] + -A[1][1] + -A[1][2] + -A[1][3] + A[1][4] + A[1][5] + A[1][6] + -A[4][0] + -A[4][1] + -A[4][2] + -A[4][3] + A[4][4] + A[4][5] + A[4][6]) * (-B[1][5] + -B[2][5] + B[3][5])
	M67 = (-A[0][0] + -A[0][1] + -A[0][2] + -A[0][3] + A[0][4] + A[0][5] + A[0][6] + A[1][0] + A[1][1] + A[1][2] + A[1][3] + -A[1][4] + -A[1][5] + -A[1][6] + -A[3][0] + -A[3][1] + -A[3][2] + -A[3][3] + A[3][4] + A[3][5] + A[3][6] + A[4][0] + A[4][1] + A[4][2] + A[4][3] + -A[4][4] + -A[4][5] + -A[4][6]) * (-B[0][4] + B[1][4] + B[2][4])
	M68 = (A[0][1] + -A[0][5] + -A[1][1] + A[1][2] + A[1][5] + -A[1][6] + A[3][1] + -A[3][5] + -A[4][1] + A[4][2] + A[4][5] + -A[4][6]) * (B[1][2] + -B[2][1])
	M69 = (A[0][1] + -A[0][2] + -A[0][5] + A[0][6] + -A[1][1] + A[1][2] + A[1][5] + -A[1][6] + A[3][1] + -A[3][2] + -A[3][5] + A[3][6] + -A[4][1] + A[4][2] + A[4][5] + -A[4][6]) * (-B[2][5] + B[3][5])
	M70 = (A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + A[4][1] + -A[4][2] + -A[4][5] + A[4][6]) * (-B[0][4] + B[1][4])
	M71 = (A[0][0] + A[0][2] + A[0][3] + -A[0][4] + -A[0][6] + -A[1][0] + -A[1][2] + -A[1][3] + A[1][4] + A[1][6] + A[3][0] + A[3][2] + A[3][3] + -A[3][4] + -A[3][6] + -A[4][0] + -A[4][2] + -A[4][3] + A[4][4] + A[4][6]) * B[3][0]
	M72 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + A[3][0] + A[3][1] + -A[3][4] + -A[3][5]) * B[0][1]
	M73 = (A[0][1] + -A[0][2] + -A[0][5] + A[0][6] + -A[1][1] + A[1][2] + A[1][5] + -A[1][6] + A[3][1] + -A[3][2] + -A[3][5] + A[3][6] + -A[4][1] + A[4][2] + A[4][5] + -A[4][6]) * B[2][1]
	M74 = (A[0][1] + A[0][3] + -A[0][5] + A[3][1] + A[3][3] + -A[3][5]) * B[3][1]
	M75 = (A[0][0] + -A[0][2] + -A[0][4] + A[0][6] + A[3][0] + -A[3][2] + -A[3][4] + A[3][6]) * B[0][2]
	M76 = (A[1][1] + -A[1][2] + -A[1][5] + A[1][6] + A[4][1] + -A[4][2] + -A[4][5] + A[4][6]) * B[1][2]
	M77 = (-A[0][2] + A[0][3] + A[0][6] + -A[3][2] + A[3][3] + A[3][6]) * B[3][2]
	M78 = (A[1][0] + A[1][1] + A[1][3] + -A[1][4] + -A[1][5] + A[4][0] + A[4][1] + A[4][3] + -A[4][4] + -A[4][5]) * B[0][3]
	M79 = A[4][0] * (B[0][6] + B[2][6])
	M80 = (-A[3][2] + A[4][0] + -A[4][2]) * (-B[0][6] + B[0][10] + -B[2][6])
	M81 = (A[3][0] + -A[3][2] + A[4][0] + -A[4][2]) * (-B[0][6] + B[0][10] + B[3][6])
	M82 = A[3][0] * B[0][10]
	M83 = (A[4][0] + -A[4][2]) * (B[0][8] + -B[2][6])
	M84 = (A[3][0] + -A[3][2] + A[3][3] + A[4][0] + -A[4][2]) * (B[0][8] + B[3][6])
	M85 = (A[3][0] + -A[3][2] + A[3][3] + A[4][0] + -A[4][2] + A[4][3]) * (-B[1][6] + -B[3][6])
	M86 = (A[3][0] + -A[3][2] + A[3][3]) * (B[0][8] + -B[3][9])
	M87 = (A[3][0] + -A[3][2] + A[3][3] + A[4][0] + -A[4][1] + -A[4][2] + A[4][3]) * (-B[1][6] + B[3][9])
	M88 = (A[4][0] + -A[4][1] + -A[4][2] + A[4][3]) * -B[3][9]
	M89 = (A[3][0] + -A[3][1] + -A[3][2] + A[3][3] + A[4][0] + -A[4][1] + -A[4][2] + A[4][3]) * -B[1][6]
	M90 = -A[4][1] * (-B[1][7] + -B[2][7])
	M91 = (A[3][2] + -A[4][1] + A[4][2]) * (-B[1][7] + B[1][10] + -B[2][7])
	M92 = (A[3][1] + -A[3][2] + A[4][1] + -A[4][2]) * (B[0][7] + -B[1][7] + B[1][10] + -B[3][7])
	M93 = (-A[4][1] + A[4][2]) * (-B[1][6] + -B[1][8] + B[2][7] + B[2][9] + B[3][9])
	M94 = (A[3][1] + -A[3][2] + -A[3][3] + A[4][1] + -A[4][2]) * (-B[1][6] + -B[1][8] + B[3][7])
	M95 = (A[3][0] + A[3][1] + -A[3][2] + A[4][1] + -A[4][2]) * (B[0][7] + -B[2][9] + -B[3][9])
	M96 = (A[3][0] + A[3][1] + -A[3][2]) * (-B[2][9] + -B[3][9])
	M97 = (A[3][1] + -A[3][2] + -A[3][3]) * (-B[1][6] + -B[1][8])
	M98 = (A[3][1] + -A[3][2] + -A[3][3] + A[4][1] + -A[4][2] + -A[4][3]) * -B[3][7]
	M99 = (A[3][2] + A[4][2]) * (-B[0][6] + B[0][10] + -B[1][7] + B[1][10] + -B[2][6] + -B[2][7] + B[2][10] + B[3][10])
	M100 = A[3][2] * (B[0][8] + B[1][6] + B[1][8] + B[2][8] + -B[2][10])
	M101 = (A[3][2] + A[4][2] + -A[4][3]) * (B[0][8] + B[1][6] + B[1][8] + B[2][8] + B[3][10])
	M102 = -A[4][3] * (B[0][8] + B[1][6] + B[1][8] + B[2][8] + B[3][6] + B[3][7] + B[3][8])
	M103 = A[3][0] * (B[0][9] + B[2][9])
	M104 = (-A[4][2] + A[4][3]) * (B[0][8] + B[1][6] + B[1][8] + B[2][8])
	M105 = (A[3][0] + A[3][1] + -A[3][2] + A[4][0] + A[4][1] + -A[4][2]) * B[0][7]
	M106 = A[3][1] * (-B[1][6] + -B[1][9] + -B[2][9] + -B[3][9])
	M107 = (A[4][0] + A[4][1]) * (B[0][7] + B[0][9] + -B[3][9])
	M108 = A[3][3] * (B[0][8] + -B[1][6] + -B[1][8] + -B[3][8] + B[3][10])
	M109 = (A[3][2] + -A[3][3] + A[4][2] + -A[4][3]) * B[3][10]
	M110 = -A[4][1] * (B[0][7] + B[0][9] + -B[1][9] + -B[2][9] + -3.0*B[3][9])
	M111 = A[3][1] * -B[1][10]
	M112 = (A[0][2] + -A[0][6] + -A[3][6]) * (-B[1][3] + B[2][3] + -B[5][3] + B[5][9] + B[6][3] + -B[6][9])
	M113 = (-A[2][0] + -A[2][1] + -A[2][2] + -A[2][3] + A[2][4] + A[2][5] + A[2][6]) * (-B[0][2] + B[0][5] + -B[4][2] + B[4][5] + B[4][8])
	M114 = (A[1][0] + A[1][1] + -A[1][4] + -A[1][5] + -A[4][4] + -A[4][5]) * (-B[0][5] + -B[4][5])
	M115 = (-A[1][1] + A[1][5] + A[4][5]) * (-B[0][5] + B[1][5] + -B[2][5] + B[3][5] + -B[4][5] + B[5][5] + -B[6][5])
	M116 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + -A[3][4] + -A[3][5]) * (B[1][4] + -B[2][4] + B[5][4] + -B[5][10] + -B[6][4] + B[6][10])
	M117 = (A[0][0] + A[0][3] + -A[0][4] + -A[3][4]) * (-B[2][4] + -B[3][4] + -B[6][4] + B[6][10])
	M118 = (-A[0][2] + A[0][6] + A[1][1] + -A[1][5] + A[3][6] + -A[4][5]) * (-B[1][3] + B[2][5] + -B[5][3] + B[5][9] + B[6][5])
	M119 = (A[2][2] + A[2][3] + -A[2][6]) * (-B[1][0] + B[2][0] + -B[5][0] + B[5][6] + B[6][0] + -B[6][6])
	M120 = (A[2][1] + -A[2][5]) * (B[1][1] + B[1][3] + -B[2][1] + -B[2][3] + B[5][1] + B[5][3] + -B[5][7] + -B[5][9] + -B[6][1] + -B[6][3] + B[6][7] + B[6][9])
	M121 = (-A[1][0] + -A[1][1] + A[1][4] + A[1][5] + A[2][0] + A[2][1] + A[2][2] + A[2][3] + -A[2][4] + -A[2][5] + -A[2][6] + A[4][4] + A[4][5]) * (B[1][0] + -B[2][0] + -B[3][5] + B[5][0] + -B[5][6] + -B[6][0] + B[6][6])
	M122 = (A[1][1] + A[1][2] + -A[1][5] + -A[1][6] + -A[4][5] + -A[4][6]) * (-B[2][5] + -B[6][5])
	M123 = (A[0][1] + -A[0][3] + -A[0][5] + -A[2][2] + -A[2][3] + A[2][6] + -A[3][5]) * (-B[0][2] + B[0][5] + B[1][0] + -B[2][0] + B[2][2] + B[2][4] + -B[2][5] + -B[3][4] + -B[4][2] + B[4][5] + B[4][8] + B[5][0] + -B[5][6] + -B[6][0] + B[6][2] + B[6][4] + -B[6][5] + B[6][6] + -B[6][8] + -B[6][10])
	M124 = (A[1][0] + A[1][3] + -A[1][4] + -A[4][4]) * (-B[0][3] + -B[4][3] + B[4][9])
	M125 = (A[1][1] + A[1][2] + -A[1][3] + -A[1][5] + -A[1][6] + -A[4][5] + -A[4][6]) * (B[0][0] + -B[1][0] + B[2][0] + -B[3][0] + B[4][0] + -B[4][6] + -B[5][0] + B[5][6] + B[6][0] + -B[6][6])
	M126 = (A[0][1] + A[0][2] + -A[0][5] + -A[0][6] + -A[3][5] + -A[3][6]) * (-B[1][3] + -B[5][3] + B[5][9])
	M127 = (-A[0][0] + -A[0][1] + A[0][4] + A[0][5] + A[2][2] + A[2][3] + -A[2][6] + A[3][4] + A[3][5]) * (-B[0][2] + B[0][5] + -B[3][4] + -B[4][2] + B[4][5] + B[4][8])
	M128 = (A[0][0] + -A[0][4] + -A[1][1] + A[1][5] + -A[3][4] + A[4][5]) * (-B[0][5] + -B[1][4] + B[2][4] + -B[4][5] + -B[5][4] + B[5][10] + B[6][4] + -B[6][10])
	M129 = (-A[1][0] + A[1][1] + A[1][2] + -A[1][3] + A[1][4] + -A[1][5] + -A[1][6] + A[2][0] + A[2][1] + A[2][2] + A[2][3] + -A[2][4] + -A[2][5] + -A[2][6] + A[4][4] + -A[4][5] + -A[4][6]) * (B[0][2] + -B[0][5] + -B[1][0] + 0.5*B[2][0] + -0.5*B[2][5] + -0.5*B[3][0] + 0.5*B[3][5] + B[4][2] + -B[4][5] + -B[4][8] + -B[5][0] + B[5][6] + 0.5*B[6][0] + -0.5*B[6][5] + -0.5*B[6][6])
	M130 = (A[0][3] + A[1][1] + -A[1][5] + -A[4][5]) * (-B[1][0] + B[1][2] + -B[1][5] + B[2][0] + -B[2][2] + B[2][5] + -B[3][5] + -B[5][0] + B[5][2] + -B[5][5] + B[5][6] + -B[5][8] + B[6][0] + -B[6][2] + B[6][5] + -B[6][6] + B[6][8])
	M131 = (A[1][0] + -A[1][1] + -A[1][2] + A[1][3] + -A[1][4] + A[1][5] + A[1][6] + -A[4][4] + A[4][5] + A[4][6]) * (-B[0][0] + B[0][2] + -B[0][5] + -B[4][0] + B[4][2] + -B[4][5] + B[4][6] + -B[4][8])
	M132 = -A[2][3] * -B[3][1]
	M133 = (-A[1][1] + A[1][3] + A[1][5] + A[4][5]) * -B[3][5]
	M134 = (A[2][0] + -A[2][4]) * (-B[0][1] + -B[4][1] + B[4][7])
	M135 = (A[2][1] + A[2][2] + -A[2][5] + -A[2][6]) * (-B[2][5] + B[3][5] + -B[6][5])
	M136 = -A[1][3] * (-B[0][3] + B[3][3] + -B[4][3] + B[4][9])
	M137 = -A[0][3] * (B[0][2] + -B[0][5] + -B[1][2] + B[1][5] + B[2][2] + -B[2][5] + -B[3][2] + B[3][5] + B[4][2] + -B[4][5] + -B[4][8] + -B[5][2] + B[5][5] + B[5][8] + B[6][2] + -B[6][5] + -B[6][8])
	M138 = (A[1][0] + A[1][1] + -A[1][4] + -A[1][5] + -A[2][0] + A[2][4] + -A[4][4] + -A[4][5]) * (B[0][5] + -B[1][1] + -B[1][3] + -B[1][5] + B[2][1] + B[2][3] + B[2][5] + -B[3][5] + B[4][5] + -B[5][1] + -B[5][3] + -B[5][5] + B[5][7] + B[5][9] + B[6][1] + B[6][3] + B[6][5] + -B[6][7] + -B[6][9])
	M139 = (A[0][2] + -A[0][6] + -A[2][1] + A[2][5] + -A[3][6]) * (B[1][3] + -B[2][1] + -B[2][3] + B[5][3] + -B[5][9] + -B[6][1] + -B[6][3] + B[6][7] + B[6][9])
	M140 = (-A[0][0] + A[0][4] + A[3][4]) * (-B[0][4] + B[1][4] + -B[2][4] + B[3][4] + -B[4][4] + B[4][10] + B[5][4] + -B[5][10] + -B[6][4] + B[6][10])
	M141 = (A[0][3] + -A[1][1] + -A[1][2] + A[1][3] + A[1][5] + A[1][6] + A[4][5] + A[4][6]) * (B[0][2] + -B[0][5] + -B[1][0] + B[2][2] + -B[2][5] + -B[3][0] + B[4][2] + -B[4][5] + -B[4][8] + -B[5][0] + B[5][6] + B[6][2] + -B[6][5] + -B[6][8])
	M142 = (-A[0][0] + A[0][4] + A[1][3] + A[3][4]) * (B[0][3] + -B[2][4] + -B[3][4] + B[4][3] + -B[4][9] + -B[6][4] + B[6][10])
	M143 = (A[0][0] + -A[0][4] + A[1][1] + A[1][2] + -A[1][3] + -A[1][5] + -A[1][6] + -A[3][4] + -A[4][5] + -A[4][6]) * (-B[0][0] + B[0][2] + -B[0][5] + -B[2][4] + -B[4][0] + B[4][2] + -B[4][5] + B[4][6] + -B[4][8] + -B[6][4] + B[6][10])
	M144 = (-A[2][1] + -A[2][2] + A[2][5] + A[2][6]) * (B[2][4] + -B[3][4] + B[6][4] + -B[6][10])
	M145 = (A[0][2] + A[0][3] + -A[0][6] + A[2][2] + A[2][3] + -A[2][6] + -A[3][6]) * (-B[2][2] + -B[2][4] + B[2][5] + -B[6][2] + -B[6][4] + B[6][5] + B[6][8] + B[6][10])
	M146 = (-A[0][1] + A[0][3] + A[0][5] + A[3][5]) * (B[1][0] + -B[1][2] + B[1][5] + -B[2][0] + B[2][2] + -B[2][5] + B[5][0] + -B[5][2] + B[5][5] + -B[5][6] + B[5][8] + -B[6][0] + B[6][2] + -B[6][5] + B[6][6] + -B[6][8])
	M147 = (A[1][0] + A[1][1] + A[1][2] + A[1][3] + -A[1][4] + -A[1][5] + -A[1][6] + -A[2][0] + -A[2][1] + -A[2][2] + -A[2][3] + A[2][4] + A[2][5] + A[2][6] + -A[4][4] + -A[4][5] + -A[4][6]) * (-0.5*B[2][0] + -0.5*B[2][5] + -0.5*B[3][0] + -0.5*B[3][5] + -0.5*B[6][0] + -0.5*B[6][5] + 0.5*B[6][6])
	M148 = (-A[1][0] + -A[1][1] + A[1][4] + A[1][5] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5] + A[4][4] + A[4][5]) * (-B[1][0] + -B[1][1] + -B[1][3] + -B[1][5] + B[2][0] + B[2][1] + B[2][3] + B[2][5] + -B[5][0] + -B[5][1] + -B[5][3] + -B[5][5] + B[5][6] + B[5][7] + B[5][9] + B[6][0] + B[6][1] + B[6][3] + B[6][5] + -B[6][6] + -B[6][7] + -B[6][9])
	M149 = (-A[1][0] + A[1][1] + A[1][2] + -A[1][3] + A[1][4] + -A[1][5] + -A[1][6] + A[2][0] + -A[2][4] + A[4][4] + -A[4][5] + -A[4][6]) * (-B[0][0] + B[1][0] + -B[2][0] + -B[2][1] + -B[2][3] + B[3][0] + -B[4][0] + B[4][6] + B[5][0] + -B[5][6] + -B[6][0] + -B[6][1] + -B[6][3] + B[6][6] + B[6][7] + B[6][9])
	M150 = (-A[0][0] + A[0][1] + A[0][2] + -A[0][3] + A[0][4] + -A[0][5] + -A[0][6] + A[3][4] + -A[3][5] + -A[3][6]) * (-B[2][4] + -B[6][4] + B[6][10])
	M151 = (A[2][1] + A[2][2] + -A[2][3] + -A[2][5] + -A[2][6]) * (-B[2][1] + -B[2][3] + -B[6][1] + -B[6][3] + B[6][7] + B[6][9])
	M152 = (A[0][1] + -A[0][5] + A[1][1] + -A[1][5] + -A[3][5] + -A[4][5]) * (B[1][0] + -B[1][2] + B[1][3] + -B[1][4] + -B[2][0] + B[2][2] + B[2][4] + -B[2][5] + B[5][0] + -B[5][2] + B[5][3] + -B[5][4] + -B[5][6] + B[5][8] + -B[5][9] + B[5][10] + -B[6][0] + B[6][2] + B[6][4] + -B[6][5] + B[6][6] + -B[6][8] + -B[6][10])
	M153 = (-A[0][1] + A[0][3] + A[0][5] + -A[2][1] + A[2][5] + A[3][5]) * (-B[0][2] + B[0][5] + B[1][2] + -B[1][5] + -B[2][2] + B[2][5] + -B[3][1] + B[3][2] + -B[3][5] + -B[4][2] + B[4][5] + B[4][8] + B[5][2] + -B[5][5] + -B[5][8] + -B[6][2] + B[6][5] + B[6][8])
	M154 = (-A[0][2] + A[0][6] + -A[2][2] + A[2][6] + A[3][6]) * (-B[2][1] + -B[6][1] + B[6][7])
	M155 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + A[2][1] + -A[2][5] + -A[3][4] + -A[3][5]) * (-B[0][1] + B[0][4] + -B[1][4] + B[2][4] + -B[3][4] + -B[4][1] + B[4][4] + B[4][7] + -B[4][10] + -B[5][4] + B[5][10] + B[6][4] + -B[6][10])
	M156 = (-A[0][2] + A[0][6] + -A[1][2] + A[1][6] + A[3][6] + A[4][6]) * (B[2][3] + -B[2][5] + B[6][3] + -B[6][5] + -B[6][9])
	M157 = (A[1][0] + A[1][3] + -A[1][4] + -A[2][0] + A[2][4] + -A[4][4]) * (B[0][3] + -B[2][1] + -B[2][3] + -B[3][1] + -B[3][3] + B[4][3] + -B[4][9] + -B[6][1] + -B[6][3] + B[6][7] + B[6][9])
	M158 = (A[0][0] + A[0][1] + -A[0][4] + -A[0][5] + A[2][0] + A[2][1] + -A[2][4] + -A[2][5] + -A[3][4] + -A[3][5]) * (B[0][1] + -B[0][2] + -B[0][4] + B[0][5] + B[4][1] + -B[4][2] + -B[4][4] + B[4][5] + -B[4][7] + B[4][8] + B[4][10])
	M159 = (A[0][0] + -A[0][4] + A[1][0] + -A[1][4] + -A[3][4] + -A[4][4]) * (B[0][0] + -B[0][2] + B[0][3] + -B[0][4] + B[4][0] + -B[4][2] + B[4][3] + -B[4][4] + -B[4][6] + B[4][8] + -B[4][9] + B[4][10])
	M160 = (-A[1][0] + -A[1][3] + A[1][4] + A[2][0] + A[2][3] + -A[2][4] + A[4][4]) * (-B[2][1] + -B[2][3] + -B[3][1] + -B[3][3] + -B[6][1] + -B[6][3] + B[6][7] + B[6][9])
	M161 = (-A[0][3] + -A[1][3]) * (-B[2][4] + B[3][3] + -B[3][4] + -B[6][4] + B[6][10])
	M162 = (A[0][1] + -A[0][3] + -A[0][5] + A[2][1] + -A[2][3] + -A[2][5] + -A[3][5]) * (-B[2][2] + -B[2][4] + B[2][5] + -B[3][1] + B[3][2] + B[3][4] + -B[3][5] + -B[6][2] + -B[6][4] + B[6][5] + B[6][8] + B[6][10])
	M163 = (A[0][3] + A[1][3]) * (B[2][0] + -B[2][2] + B[2][5] + B[3][0] + -B[3][2] + B[6][0] + -B[6][2] + B[6][5] + -B[6][6] + B[6][8])
	M164 = (-A[1][0] + A[1][4] + A[2][0] + -A[2][4] + A[4][4]) * (B[0][0] + B[0][1] + B[0][3] + B[0][5] + -B[1][0] + -B[1][1] + -B[1][3] + -B[1][5] + B[2][0] + B[2][1] + B[2][3] + B[2][5] + -B[3][0] + -B[3][1] + -B[3][3] + -B[3][5] + B[4][0] + B[4][1] + B[4][3] + B[4][5] + -B[4][6] + -B[4][7] + -B[4][9] + -B[5][0] + -B[5][1] + -B[5][3] + -B[5][5] + B[5][6] + B[5][7] + B[5][9] + B[6][0] + B[6][1] + B[6][3] + B[6][5] + -B[6][6] + -B[6][7] + -B[6][9])
	M165 = (A[0][1] + -A[0][5] + A[2][1] + -A[2][5] + -A[3][5]) * (B[0][1] + -B[0][2] + -B[0][4] + B[0][5] + -B[1][1] + B[1][2] + B[1][4] + -B[1][5] + -B[2][2] + -B[2][4] + B[2][5] + -B[3][1] + B[3][2] + B[3][4] + -B[3][5] + B[4][1] + -B[4][2] + -B[4][4] + B[4][5] + -B[4][7] + B[4][8] + B[4][10] + -B[5][1] + B[5][2] + B[5][4] + -B[5][5] + B[5][7] + -B[5][8] + -B[5][10] + -B[6][2] + -B[6][4] + B[6][5] + B[6][8] + B[6][10])
	M166 = (A[1][0] + -A[1][1] + -A[1][2] + A[1][3] + -A[1][4] + A[1][5] + A[1][6] + -A[2][0] + A[2][1] + A[2][2] + -A[2][3] + A[2][4] + -A[2][5] + -A[2][6] + -A[4][4] + A[4][5] + A[4][6]) * (-0.5*B[2][0] + -B[2][1] + -B[2][3] + -0.5*B[2][5] + 0.5*B[3][0] + 0.5*B[3][5] + -0.5*B[6][0] + -B[6][1] + -B[6][3] + -0.5*B[6][5] + 0.5*B[6][6] + B[6][7] + B[6][9])
	M167 = (A[0][1] + A[0][2] + -A[0][3] + -A[0][5] + -A[0][6] + A[1][1] + A[1][2] + -A[1][3] + -A[1][5] + -A[1][6] + -A[3][5] + -A[3][6] + -A[4][5] + -A[4][6]) * (-B[2][0] + B[2][2] + B[2][4] + -B[2][5] + -B[6][0] + B[6][2] + B[6][4] + -B[6][5] + B[6][6] + -B[6][8] + -B[6][10])
	M168 = -A[1][1] * (B[1][2] + -B[1][3] + -B[1][4] + -B[1][8] + B[1][9] + B[1][10] + B[5][2] + -B[5][3] + -B[5][4] + -B[5][8] + B[5][9] + B[5][10])
	M169 = (-A[1][1] + -A[2][1] + -A[2][3]) * (B[1][4] + -B[1][10] + -B[3][2] + B[3][8] + B[5][4] + -B[5][10])
	M170 = -A[1][0] * (B[0][2] + -B[0][3] + -B[0][4] + -B[0][8] + B[0][9] + B[0][10] + B[4][2] + -B[4][3] + -B[4][4] + -B[4][8] + B[4][9] + B[4][10])
	M171 = (A[0][0] + A[0][3] + -A[1][0]) * (-B[0][4] + B[0][10] + B[3][2] + -B[3][8] + -B[4][4] + B[4][10])
	M172 = (A[0][0] + -A[0][2] + -A[1][0]) * (B[0][3] + -B[0][9] + B[2][2] + -B[2][8] + B[4][3] + -B[4][9] + B[6][2] + -B[6][8])
	M173 = (A[0][0] + -A[0][2] + -A[1][0] + A[1][1] + A[1][2] + A[2][1] + A[2][2]) * (-B[2][2] + B[2][8] + -B[6][2] + B[6][8])
	M174 = (A[0][0] + A[0][3] + -A[1][0] + -A[1][1] + -A[1][3] + -A[2][1] + -A[2][3]) * (-B[3][2] + B[3][8])
	M175 = -A[0][1] * (-B[0][1] + B[0][7] + -B[1][1] + B[1][3] + B[1][4] + B[1][7] + -B[1][9] + -B[1][10] + -B[4][1] + B[4][7] + -B[5][1] + B[5][3] + B[5][4] + B[5][7] + -B[5][9] + -B[5][10])
	M176 = (-A[0][1] + A[2][1] + A[2][3]) * (B[1][4] + -B[1][10] + -B[3][1] + B[3][3] + B[3][7] + -B[3][9] + B[5][4] + -B[5][10])
	M177 = (A[0][0] + -A[0][1] + -A[1][0]) * (-B[0][1] + B[0][7] + -B[1][1] + -B[1][2] + B[1][3] + B[1][4] + B[1][7] + B[1][8] + -B[1][9] + -B[1][10] + -B[4][1] + B[4][7] + -B[5][1] + -B[5][2] + B[5][3] + B[5][4] + B[5][7] + B[5][8] + -B[5][9] + -B[5][10])
	M178 = (-A[0][1] + A[2][0]) * (-B[0][1] + B[0][7] + -B[1][0] + B[1][6] + -B[4][1] + B[4][7] + -B[5][0] + B[5][6])
	M179 = A[2][0] * (B[0][0] + -B[0][3] + -B[0][4] + -B[0][6] + B[0][9] + B[0][10] + B[1][0] + -B[1][6] + B[4][0] + -B[4][3] + -B[4][4] + -B[4][6] + B[4][9] + B[4][10] + B[5][0] + -B[5][6])
	M180 = (-A[1][1] + A[2][0] + -A[2][1]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][6] + -B[0][8] + B[0][9] + B[0][10] + B[1][0] + -B[1][6] + B[4][0] + B[4][2] + -B[4][3] + -B[4][4] + -B[4][6] + -B[4][8] + B[4][9] + B[4][10] + B[5][0] + -B[5][6])
	M181 = (A[0][0] + -A[0][2] + -A[2][0]) * (B[0][3] + -B[0][9] + B[2][0] + -B[2][4] + -B[2][6] + B[2][10] + B[4][3] + -B[4][9] + B[6][0] + -B[6][4] + -B[6][6] + B[6][10])
	M182 = (A[2][1] + A[2][3]) * (B[1][4] + -B[1][10] + B[5][4] + -B[5][10])
	M183 = (A[0][0] + -A[0][2]) * (B[0][3] + -B[0][9] + B[4][3] + -B[4][9])
	M184 = (A[0][0] + A[0][3]) * (-B[0][4] + B[0][10] + -B[4][4] + B[4][10])
	M185 = (A[0][0] + A[0][3] + -A[2][0]) * (-B[0][4] + B[0][10] + -B[2][4] + B[2][10] + B[3][0] + -B[3][6] + -B[4][4] + B[4][10] + -B[6][4] + B[6][10])
	M186 = (-A[1][1] + -A[2][1] + -A[2][2]) * (B[1][3] + -B[1][9] + -B[2][2] + B[2][8] + B[5][3] + -B[5][9] + -B[6][2] + B[6][8])
	M187 = (-A[0][1] + A[2][1] + A[2][2]) * (B[1][3] + -B[1][9] + -B[2][1] + B[2][7] + -B[3][3] + B[3][9] + B[5][3] + -B[5][9] + -B[6][1] + B[6][7])
	M188 = (-A[0][1] + -A[0][3] + A[2][1] + A[2][3]) * (B[3][1] + -B[3][3] + -B[3][7] + B[3][9])
	M189 = (-A[0][1] + -A[0][3] + A[1][2] + -A[1][3] + A[2][1] + A[2][3]) * (B[2][1] + -B[2][7] + B[3][3] + -B[3][9] + B[6][1] + -B[6][7])
	M190 = (A[1][2] + -A[1][3]) * (-B[2][4] + B[2][10] + -B[6][4] + B[6][10])
	M191 = (-A[1][1] + -A[2][1]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][6] + -B[0][8] + B[0][9] + B[0][10] + B[1][0] + B[1][2] + -B[1][6] + -B[1][8] + -B[2][2] + B[2][8] + -B[3][2] + B[3][8] + B[4][0] + B[4][2] + -B[4][3] + -B[4][4] + -B[4][6] + -B[4][8] + B[4][9] + B[4][10] + B[5][0] + B[5][2] + -B[5][6] + -B[5][8] + -B[6][2] + B[6][8])
	M192 = (-A[1][0] + A[1][1] + -A[2][0] + A[2][1]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][6] + -B[0][8] + B[0][9] + B[0][10] + B[4][0] + B[4][2] + -B[4][3] + -B[4][4] + -B[4][6] + -B[4][8] + B[4][9] + B[4][10])
	M193 = (-A[0][1] + A[2][1]) * (-B[1][0] + B[1][1] + B[1][6] + -B[1][7] + -B[2][1] + B[2][7] + -B[3][1] + B[3][7] + -B[5][0] + B[5][1] + B[5][6] + -B[5][7] + -B[6][1] + B[6][7])
	M194 = (A[0][0] + -A[1][0]) * (-B[0][1] + -B[0][2] + B[0][7] + B[0][8] + -B[1][1] + -B[1][2] + B[1][3] + B[1][4] + B[1][7] + B[1][8] + -B[1][9] + -B[1][10] + -B[2][2] + B[2][8] + B[3][2] + -B[3][8] + -B[4][1] + -B[4][2] + B[4][7] + B[4][8] + -B[5][1] + -B[5][2] + B[5][3] + B[5][4] + B[5][7] + B[5][8] + -B[5][9] + -B[5][10] + -B[6][2] + B[6][8])
	M195 = (-A[0][1] + -A[0][3] + -A[1][3] + A[2][1] + A[2][3]) * (B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + -B[1][7] + -B[1][8] + B[1][9] + B[1][10] + B[2][1] + -B[2][7] + B[3][1] + -B[3][7] + B[5][1] + B[5][2] + -B[5][3] + -B[5][4] + -B[5][7] + -B[5][8] + B[5][9] + B[5][10] + B[6][1] + -B[6][7])
	M196 = (A[0][0] + -A[0][1]) * (-B[0][1] + B[0][7] + -B[4][1] + B[4][7])
	M197 = A[2][2] * (B[1][3] + -B[1][9] + B[2][0] + -B[2][3] + -B[2][4] + -B[2][6] + B[2][9] + B[2][10] + -B[3][3] + B[3][9] + B[5][3] + -B[5][9] + B[6][0] + -B[6][3] + -B[6][4] + -B[6][6] + B[6][9] + B[6][10])
	M198 = (A[0][0] + -A[2][0]) * (B[0][0] + -B[0][1] + -B[0][6] + B[0][7] + B[2][0] + -B[2][6] + -B[3][0] + B[3][6] + B[4][0] + -B[4][1] + -B[4][6] + B[4][7] + B[6][0] + -B[6][6])
	M199 = (A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * (-B[3][3] + B[3][9])
	M200 = A[2][3] * (B[1][4] + -B[1][10] + B[3][0] + -B[3][4] + -B[3][6] + B[3][10] + B[5][4] + -B[5][10])
	M201 = A[0][2] * (B[0][3] + -B[0][9] + -B[2][1] + B[2][3] + B[2][7] + -B[2][9] + B[4][3] + -B[4][9] + -B[6][1] + B[6][3] + B[6][7] + -B[6][9])
	M202 = A[0][3] * (-B[0][4] + B[0][10] + -B[2][4] + B[2][10] + -B[3][1] + B[3][3] + B[3][4] + B[3][7] + -B[3][9] + -B[3][10] + -B[4][4] + B[4][10] + -B[6][4] + B[6][10])
	M203 = (A[2][1] + A[2][2]) * (B[1][3] + -B[1][9] + B[5][3] + -B[5][9])
	M204 = (A[2][2] + -A[2][3]) * (-B[3][3] + B[3][9])
	M205 = (2.0*A[0][0] + -A[0][2] + A[0][3] + -A[1][2] + A[1][3] + -2.0*A[2][0] + A[2][2] + -A[2][3]) * (B[3][0] + -B[3][6])
	M206 = (A[0][0] + -A[0][2] + -A[1][2] + A[1][3] + -A[2][0] + A[2][2]) * (-B[2][4] + B[2][10] + -B[3][0] + B[3][6] + -B[6][4] + B[6][10])
	M207 = (A[0][2] + -A[0][3] + A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * (B[2][1] + -B[2][7] + B[6][1] + -B[6][7])
	M208 = A[1][2] * (-B[2][2] + B[2][3] + B[2][8] + -B[2][9] + B[3][3] + -B[3][9] + -B[6][2] + B[6][3] + B[6][8] + -B[6][9])
	M209 = (A[0][0] + -2.0*A[0][1] + -A[0][3] + -A[1][0] + A[1][1] + -A[1][3] + A[2][1] + A[2][3]) * (B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + -B[1][7] + -B[1][8] + B[1][9] + B[1][10] + B[5][1] + B[5][2] + -B[5][3] + -B[5][4] + -B[5][7] + -B[5][8] + B[5][9] + B[5][10])
	M210 = (A[0][0] + -A[0][2] + -A[1][2] + -A[2][0] + A[2][2]) * (B[2][0] + -B[2][6] + B[3][0] + -B[3][6] + B[6][0] + -B[6][6])
	M211 = A[1][3] * (-B[2][4] + B[2][10] + B[3][2] + -B[3][4] + -B[3][8] + B[3][10] + -B[6][4] + B[6][10])
	M212 = (A[0][0] + -A[0][2] + -A[2][0] + A[2][2]) * (B[2][0] + -B[2][4] + -B[2][6] + B[2][10] + B[6][0] + -B[6][4] + -B[6][6] + B[6][10])
	M213 = (A[0][2] + A[0][3] + -A[1][2] + A[1][3]) * (-B[2][4] + B[2][10] + -B[6][4] + B[6][10])
	M214 = (A[2][0] + -A[2][1]) * (-B[1][0] + B[1][6] + -B[5][0] + B[5][6])
	M215 = (-A[0][4] + A[0][6] + -A[1][5] + A[1][6] + A[2][4] + -A[2][5] + -A[3][4] + A[3][6] + -A[4][5] + A[4][6]) * (0.125*B[0][2] + 0.125*B[0][3] + B[0][4] + -0.125*B[1][1] + -B[1][4] + 0.125*B[1][5] + B[2][0] + 0.125*B[2][1] + -0.125*B[2][3] + 0.125*B[4][2] + 0.125*B[4][3] + B[4][4] + -0.125*B[5][1] + -B[5][4] + 0.125*B[5][5] + B[6][0] + 0.125*B[6][1] + -0.125*B[6][3])
	M216 = (-A[0][4] + -A[0][6] + -A[1][5] + A[1][6] + A[2][4] + A[2][5] + -A[3][4] + -A[3][6] + -A[4][5] + A[4][6]) * (0.125*B[0][2] + -0.125*B[0][3] + -B[0][4] + 0.125*B[1][1] + -B[1][4] + 0.125*B[1][5] + B[2][0] + -0.125*B[2][1] + -0.125*B[2][3] + 0.125*B[4][2] + -0.125*B[4][3] + -B[4][4] + 0.125*B[5][1] + -B[5][4] + 0.125*B[5][5] + B[6][0] + -0.125*B[6][1] + -0.125*B[6][3])
	M217 = (-A[0][4] + -A[0][6] + -A[1][5] + -A[1][6] + -A[2][4] + A[2][5] + -A[3][4] + -A[3][6] + -A[4][5] + -A[4][6]) * (0.125*B[0][2] + 0.125*B[0][3] + -B[0][4] + -0.125*B[1][1] + B[1][4] + 0.125*B[1][5] + B[2][0] + -0.125*B[2][1] + 0.125*B[2][3] + 0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + -0.125*B[5][1] + B[5][4] + 0.125*B[5][5] + B[6][0] + -0.125*B[6][1] + 0.125*B[6][3])
	M218 = (-A[0][4] + A[0][6] + -A[1][5] + -A[1][6] + -A[2][4] + -A[2][5] + -A[3][4] + A[3][6] + -A[4][5] + -A[4][6]) * (-0.125*B[0][2] + 0.125*B[0][3] + -B[0][4] + -0.125*B[1][1] + -B[1][4] + -0.125*B[1][5] + -B[2][0] + -0.125*B[2][1] + -0.125*B[2][3] + -0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + -0.125*B[5][1] + -B[5][4] + -0.125*B[5][5] + -B[6][0] + -0.125*B[6][1] + -0.125*B[6][3])
	M219 = (A[0][4] + A[0][6] + -A[1][5] + A[1][6] + -A[2][4] + -A[2][5] + A[3][4] + A[3][6] + -A[4][5] + A[4][6]) * (B[0][0] + -0.125*B[0][2] + 0.125*B[0][5] + B[1][0] + -0.125*B[1][1] + -0.125*B[1][3] + 0.125*B[2][1] + -B[2][4] + 0.125*B[2][5] + B[4][0] + -0.125*B[4][2] + 0.125*B[4][5] + B[5][0] + -0.125*B[5][1] + -0.125*B[5][3] + 0.125*B[6][1] + -B[6][4] + 0.125*B[6][5])
	M220 = (A[0][4] + A[0][6] + -A[1][5] + -A[1][6] + A[2][4] + -A[2][5] + A[3][4] + A[3][6] + -A[4][5] + -A[4][6]) * (B[0][0] + -0.125*B[0][2] + -0.125*B[0][5] + -B[1][0] + 0.125*B[1][1] + -0.125*B[1][3] + 0.125*B[2][1] + -B[2][4] + -0.125*B[2][5] + B[4][0] + -0.125*B[4][2] + -0.125*B[4][5] + -B[5][0] + 0.125*B[5][1] + -0.125*B[5][3] + 0.125*B[6][1] + -B[6][4] + -0.125*B[6][5])
	M221 = (A[0][4] + -A[0][6] + -A[1][5] + A[1][6] + -A[2][4] + A[2][5] + A[3][4] + -A[3][6] + -A[4][5] + A[4][6]) * (B[0][0] + 0.125*B[0][2] + 0.125*B[0][5] + -B[1][0] + -0.125*B[1][1] + 0.125*B[1][3] + 0.125*B[2][1] + B[2][4] + -0.125*B[2][5] + B[4][0] + 0.125*B[4][2] + 0.125*B[4][5] + -B[5][0] + -0.125*B[5][1] + 0.125*B[5][3] + 0.125*B[6][1] + B[6][4] + -0.125*B[6][5])
	M222 = (A[0][4] + -A[0][6] + -A[1][5] + -A[1][6] + A[2][4] + A[2][5] + A[3][4] + -A[3][6] + -A[4][5] + -A[4][6]) * (-B[0][0] + -0.125*B[0][2] + 0.125*B[0][5] + -B[1][0] + -0.125*B[1][1] + -0.125*B[1][3] + -0.125*B[2][1] + -B[2][4] + -0.125*B[2][5] + -B[4][0] + -0.125*B[4][2] + 0.125*B[4][5] + -B[5][0] + -0.125*B[5][1] + -0.125*B[5][3] + -0.125*B[6][1] + -B[6][4] + -0.125*B[6][5])
	M223 = (A[0][4] + -A[0][6] + -A[1][5] + A[1][6] + A[2][4] + -A[2][5] + A[3][4] + -A[3][6] + -A[4][5] + A[4][6]) * (B[0][0] + 0.125*B[0][1] + -0.125*B[0][3] + -B[1][0] + -0.125*B[1][2] + -0.125*B[1][5] + 0.125*B[2][2] + 0.125*B[2][3] + B[2][4] + B[4][0] + 0.125*B[4][1] + -0.125*B[4][3] + -B[5][0] + -0.125*B[5][2] + -0.125*B[5][5] + 0.125*B[6][2] + 0.125*B[6][3] + B[6][4])
	M224 = (A[0][4] + A[0][6] + -A[1][5] + -A[1][6] + -A[2][4] + A[2][5] + A[3][4] + A[3][6] + -A[4][5] + -A[4][6]) * (B[0][0] + -0.125*B[0][1] + 0.125*B[0][3] + -B[1][0] + 0.125*B[1][2] + 0.125*B[1][5] + 0.125*B[2][2] + 0.125*B[2][3] + -B[2][4] + B[4][0] + -0.125*B[4][1] + 0.125*B[4][3] + -B[5][0] + 0.125*B[5][2] + 0.125*B[5][5] + 0.125*B[6][2] + 0.125*B[6][3] + -B[6][4])
	M225 = (-A[0][4] + -A[0][6] + A[1][5] + -A[1][6] + -A[2][4] + -A[2][5] + -A[3][4] + -A[3][6] + A[4][5] + -A[4][6]) * (B[0][0] + -0.125*B[0][1] + -0.125*B[0][3] + B[1][0] + -0.125*B[1][2] + 0.125*B[1][5] + 0.125*B[2][2] + -0.125*B[2][3] + -B[2][4] + B[4][0] + -0.125*B[4][1] + -0.125*B[4][3] + B[5][0] + -0.125*B[5][2] + 0.125*B[5][5] + 0.125*B[6][2] + -0.125*B[6][3] + -B[6][4])
	M226 = (A[0][4] + -A[0][6] + -A[1][5] + -A[1][6] + -A[2][4] + -A[2][5] + A[3][4] + -A[3][6] + -A[4][5] + -A[4][6]) * (-B[0][0] + -0.125*B[0][1] + -0.125*B[0][3] + -B[1][0] + -0.125*B[1][2] + 0.125*B[1][5] + -0.125*B[2][2] + 0.125*B[2][3] + -B[2][4] + -B[4][0] + -0.125*B[4][1] + -0.125*B[4][3] + -B[5][0] + -0.125*B[5][2] + 0.125*B[5][5] + -0.125*B[6][2] + 0.125*B[6][3] + -B[6][4])
	M227 = (-A[0][4] + -A[0][6] + -A[1][5] + -A[1][6] + A[2][4] + -A[2][5] + -A[3][4] + -A[3][6] + -A[4][5] + -A[4][6]) * (0.125*B[0][1] + -B[0][4] + -0.125*B[0][5] + -0.125*B[1][2] + -0.125*B[1][3] + B[1][4] + B[2][0] + -0.125*B[2][2] + -0.125*B[2][5] + 0.125*B[4][1] + -B[4][4] + -0.125*B[4][5] + -0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + B[6][0] + -0.125*B[6][2] + -0.125*B[6][5])
	M228 = (-A[0][4] + -A[0][6] + -A[1][5] + A[1][6] + -A[2][4] + -A[2][5] + -A[3][4] + -A[3][6] + -A[4][5] + A[4][6]) * (-0.125*B[0][1] + B[0][4] + -0.125*B[0][5] + -0.125*B[1][2] + 0.125*B[1][3] + B[1][4] + -B[2][0] + 0.125*B[2][2] + -0.125*B[2][5] + -0.125*B[4][1] + B[4][4] + -0.125*B[4][5] + -0.125*B[5][2] + 0.125*B[5][3] + B[5][4] + -B[6][0] + 0.125*B[6][2] + -0.125*B[6][5])
	M229 = (A[0][4] + -A[0][6] + A[1][5] + A[1][6] + -A[2][4] + -A[2][5] + A[3][4] + -A[3][6] + A[4][5] + A[4][6]) * (0.125*B[0][1] + B[0][4] + 0.125*B[0][5] + 0.125*B[1][2] + -0.125*B[1][3] + B[1][4] + B[2][0] + 0.125*B[2][2] + -0.125*B[2][5] + 0.125*B[4][1] + B[4][4] + 0.125*B[4][5] + 0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + B[6][0] + 0.125*B[6][2] + -0.125*B[6][5])
	M230 = (A[0][4] + -A[0][6] + A[1][5] + -A[1][6] + A[2][4] + -A[2][5] + A[3][4] + -A[3][6] + A[4][5] + -A[4][6]) * (0.125*B[0][1] + B[0][4] + -0.125*B[0][5] + -0.125*B[1][2] + -0.125*B[1][3] + -B[1][4] + B[2][0] + 0.125*B[2][2] + 0.125*B[2][5] + 0.125*B[4][1] + B[4][4] + -0.125*B[4][5] + -0.125*B[5][2] + -0.125*B[5][3] + -B[5][4] + B[6][0] + 0.125*B[6][2] + 0.125*B[6][5])
	M231 = (-A[0][4] + -A[0][6] + A[2][4] + A[2][6] + -A[3][4] + -A[3][6]) * (-0.125*B[0][3] + -0.125*B[0][5] + 0.125*B[1][1] + -0.125*B[1][2] + B[2][0] + -0.125*B[2][1] + -0.125*B[2][2] + -0.125*B[2][3] + B[2][4] + -0.125*B[2][5] + -0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[5][1] + -0.125*B[5][2] + B[6][0] + -0.125*B[6][1] + -0.125*B[6][2] + -0.125*B[6][3] + B[6][4] + -0.125*B[6][5])
	M232 = (A[0][4] + A[0][6] + A[2][4] + A[2][6] + A[3][4] + A[3][6]) * (-0.125*B[0][3] + -0.125*B[0][5] + 0.125*B[1][1] + -0.125*B[1][2] + -B[2][0] + 0.125*B[2][1] + 0.125*B[2][2] + -0.125*B[2][3] + -B[2][4] + -0.125*B[2][5] + -0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[5][1] + -0.125*B[5][2] + -B[6][0] + 0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][3] + -B[6][4] + -0.125*B[6][5])
	M233 = (-A[0][4] + A[0][6] + -A[2][4] + A[2][6] + -A[3][4] + A[3][6]) * (-0.125*B[0][3] + -0.125*B[0][5] + 0.125*B[1][1] + -0.125*B[1][2] + B[2][0] + 0.125*B[2][1] + 0.125*B[2][2] + 0.125*B[2][3] + B[2][4] + 0.125*B[2][5] + -0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[5][1] + -0.125*B[5][2] + B[6][0] + 0.125*B[6][1] + 0.125*B[6][2] + 0.125*B[6][3] + B[6][4] + 0.125*B[6][5])
	M234 = (-A[0][4] + A[0][6] + A[2][4] + -A[2][6] + -A[3][4] + A[3][6]) * (-0.125*B[0][3] + -0.125*B[0][5] + 0.125*B[1][1] + -0.125*B[1][2] + -B[2][0] + -0.125*B[2][1] + -0.125*B[2][2] + 0.125*B[2][3] + -B[2][4] + 0.125*B[2][5] + -0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[5][1] + -0.125*B[5][2] + -B[6][0] + -0.125*B[6][1] + -0.125*B[6][2] + 0.125*B[6][3] + -B[6][4] + 0.125*B[6][5])
	M235 = (-A[0][4] + -A[0][5] + A[2][4] + A[2][5] + -A[3][4] + -A[3][5]) * (B[0][0] + B[0][4] + B[1][0] + -0.125*B[1][1] + 0.125*B[1][2] + -0.125*B[1][3] + B[1][4] + -0.125*B[1][5] + 0.125*B[2][1] + 0.125*B[2][2] + B[4][0] + B[4][4] + B[5][0] + -0.125*B[5][1] + 0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + -0.125*B[5][5] + 0.125*B[6][1] + 0.125*B[6][2])
	M236 = (-A[0][4] + A[0][5] + -A[2][4] + A[2][5] + -A[3][4] + A[3][5]) * (B[0][0] + B[0][4] + -B[1][0] + 0.125*B[1][1] + -0.125*B[1][2] + -0.125*B[1][3] + -B[1][4] + -0.125*B[1][5] + 0.125*B[2][1] + 0.125*B[2][2] + B[4][0] + B[4][4] + -B[5][0] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][3] + -B[5][4] + -0.125*B[5][5] + 0.125*B[6][1] + 0.125*B[6][2])
	M237 = (-A[0][4] + -A[0][5] + -A[2][4] + -A[2][5] + -A[3][4] + -A[3][5]) * (B[0][0] + B[0][4] + B[1][0] + 0.125*B[1][1] + -0.125*B[1][2] + 0.125*B[1][3] + B[1][4] + 0.125*B[1][5] + 0.125*B[2][1] + 0.125*B[2][2] + B[4][0] + B[4][4] + B[5][0] + 0.125*B[5][1] + -0.125*B[5][2] + 0.125*B[5][3] + B[5][4] + 0.125*B[5][5] + 0.125*B[6][1] + 0.125*B[6][2])
	M238 = (A[0][4] + -A[0][5] + -A[2][4] + A[2][5] + A[3][4] + -A[3][5]) * (-B[0][0] + -B[0][4] + B[1][0] + 0.125*B[1][1] + -0.125*B[1][2] + -0.125*B[1][3] + B[1][4] + -0.125*B[1][5] + -0.125*B[2][1] + -0.125*B[2][2] + -B[4][0] + -B[4][4] + B[5][0] + 0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + -0.125*B[5][5] + -0.125*B[6][1] + -0.125*B[6][2])
	M239 = (A[1][4] + A[1][5] + A[2][4] + A[2][5] + A[4][4] + A[4][5]) * (B[0][0] + 0.125*B[0][1] + -0.125*B[0][2] + 0.125*B[0][3] + -B[0][4] + 0.125*B[0][5] + B[1][0] + -B[1][4] + -0.125*B[2][3] + 0.125*B[2][5] + B[4][0] + 0.125*B[4][1] + -0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + 0.125*B[4][5] + B[5][0] + -B[5][4] + -0.125*B[6][3] + 0.125*B[6][5])
	M240 = (A[1][4] + -A[1][5] + A[2][4] + -A[2][5] + A[4][4] + -A[4][5]) * (B[0][0] + 0.125*B[0][1] + -0.125*B[0][2] + -0.125*B[0][3] + -B[0][4] + -0.125*B[0][5] + -B[1][0] + B[1][4] + 0.125*B[2][3] + -0.125*B[2][5] + B[4][0] + 0.125*B[4][1] + -0.125*B[4][2] + -0.125*B[4][3] + -B[4][4] + -0.125*B[4][5] + -B[5][0] + B[5][4] + 0.125*B[6][3] + -0.125*B[6][5])
	M241 = (A[1][4] + -A[1][5] + -A[2][4] + A[2][5] + A[4][4] + -A[4][5]) * (B[0][0] + -0.125*B[0][1] + 0.125*B[0][2] + 0.125*B[0][3] + -B[0][4] + 0.125*B[0][5] + -B[1][0] + B[1][4] + 0.125*B[2][3] + -0.125*B[2][5] + B[4][0] + -0.125*B[4][1] + 0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + 0.125*B[4][5] + -B[5][0] + B[5][4] + 0.125*B[6][3] + -0.125*B[6][5])
	M242 = (A[1][4] + A[1][5] + -A[2][4] + -A[2][5] + A[4][4] + A[4][5]) * (-B[0][0] + 0.125*B[0][1] + -0.125*B[0][2] + 0.125*B[0][3] + B[0][4] + 0.125*B[0][5] + -B[1][0] + B[1][4] + 0.125*B[2][3] + -0.125*B[2][5] + -B[4][0] + 0.125*B[4][1] + -0.125*B[4][2] + 0.125*B[4][3] + B[4][4] + 0.125*B[4][5] + -B[5][0] + B[5][4] + 0.125*B[6][3] + -0.125*B[6][5])
	M243 = (A[1][5] + -A[1][6] + A[2][5] + -A[2][6] + A[4][5] + -A[4][6]) * (-0.125*B[0][3] + -0.125*B[0][5] + 0.125*B[1][1] + -0.125*B[1][2] + -B[2][0] + -0.125*B[2][1] + 0.125*B[2][2] + 0.125*B[2][3] + B[2][4] + -0.125*B[2][5] + -0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[5][1] + -0.125*B[5][2] + -B[6][0] + -0.125*B[6][1] + 0.125*B[6][2] + 0.125*B[6][3] + B[6][4] + -0.125*B[6][5])
	M244 = (A[1][5] + A[1][6] + A[2][5] + A[2][6] + A[4][5] + A[4][6]) * (-0.125*B[0][3] + -0.125*B[0][5] + 0.125*B[1][1] + -0.125*B[1][2] + B[2][0] + 0.125*B[2][1] + -0.125*B[2][2] + 0.125*B[2][3] + -B[2][4] + -0.125*B[2][5] + -0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[5][1] + -0.125*B[5][2] + B[6][0] + 0.125*B[6][1] + -0.125*B[6][2] + 0.125*B[6][3] + -B[6][4] + -0.125*B[6][5])
	M245 = (A[1][5] + A[1][6] + -A[2][5] + -A[2][6] + A[4][5] + A[4][6]) * (-0.125*B[0][3] + -0.125*B[0][5] + 0.125*B[1][1] + -0.125*B[1][2] + -B[2][0] + 0.125*B[2][1] + -0.125*B[2][2] + -0.125*B[2][3] + B[2][4] + 0.125*B[2][5] + -0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[5][1] + -0.125*B[5][2] + -B[6][0] + 0.125*B[6][1] + -0.125*B[6][2] + -0.125*B[6][3] + B[6][4] + 0.125*B[6][5])
	M246 = (-A[1][5] + A[1][6] + A[2][5] + -A[2][6] + -A[4][5] + A[4][6]) * (-0.125*B[0][3] + -0.125*B[0][5] + 0.125*B[1][1] + -0.125*B[1][2] + B[2][0] + -0.125*B[2][1] + 0.125*B[2][2] + -0.125*B[2][3] + -B[2][4] + 0.125*B[2][5] + -0.125*B[4][3] + -0.125*B[4][5] + 0.125*B[5][1] + -0.125*B[5][2] + B[6][0] + -0.125*B[6][1] + 0.125*B[6][2] + -0.125*B[6][3] + -B[6][4] + 0.125*B[6][5])
	M247 = (-A[0][5] + -A[0][6] + -A[1][5] + -A[1][6] + -A[3][5] + -A[3][6] + -A[4][5] + -A[4][6]) * (-B[0][0] + -B[0][4] + -B[1][0] + -0.125*B[1][1] + -0.125*B[1][2] + -0.125*B[1][3] + B[1][4] + 0.125*B[1][5] + -0.125*B[2][1] + -0.125*B[2][2] + -B[4][0] + -B[4][4] + -B[5][0] + -0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][3] + B[5][4] + 0.125*B[5][5] + -0.125*B[6][1] + -0.125*B[6][2])
	M248 = (A[0][5] + -A[0][6] + -A[1][5] + A[1][6] + A[3][5] + -A[3][6] + -A[4][5] + A[4][6]) * (B[0][0] + B[0][4] + -B[1][0] + -0.125*B[1][1] + -0.125*B[1][2] + 0.125*B[1][3] + B[1][4] + -0.125*B[1][5] + 0.125*B[2][1] + 0.125*B[2][2] + B[4][0] + B[4][4] + -B[5][0] + -0.125*B[5][1] + -0.125*B[5][2] + 0.125*B[5][3] + B[5][4] + -0.125*B[5][5] + 0.125*B[6][1] + 0.125*B[6][2])
	M249 = (-A[0][5] + A[0][6] + -A[1][5] + A[1][6] + -A[3][5] + A[3][6] + -A[4][5] + A[4][6]) * (B[0][0] + B[0][4] + B[1][0] + -0.125*B[1][1] + -0.125*B[1][2] + -0.125*B[1][3] + -B[1][4] + 0.125*B[1][5] + 0.125*B[2][1] + 0.125*B[2][2] + B[4][0] + B[4][4] + B[5][0] + -0.125*B[5][1] + -0.125*B[5][2] + -0.125*B[5][3] + -B[5][4] + 0.125*B[5][5] + 0.125*B[6][1] + 0.125*B[6][2])
	M250 = (A[0][5] + A[0][6] + -A[1][5] + -A[1][6] + A[3][5] + A[3][6] + -A[4][5] + -A[4][6]) * (-B[0][0] + -B[0][4] + B[1][0] + -0.125*B[1][1] + -0.125*B[1][2] + 0.125*B[1][3] + -B[1][4] + -0.125*B[1][5] + -0.125*B[2][1] + -0.125*B[2][2] + -B[4][0] + -B[4][4] + B[5][0] + -0.125*B[5][1] + -0.125*B[5][2] + 0.125*B[5][3] + -B[5][4] + -0.125*B[5][5] + -0.125*B[6][1] + -0.125*B[6][2])
	M251 = (A[0][4] + -A[0][6] + -A[1][4] + A[1][6] + A[3][4] + -A[3][6] + -A[4][4] + A[4][6]) * (-B[0][0] + -0.125*B[0][1] + -0.125*B[0][2] + 0.125*B[0][3] + -B[0][4] + -0.125*B[0][5] + B[1][0] + -B[1][4] + -0.125*B[2][3] + 0.125*B[2][5] + -B[4][0] + -0.125*B[4][1] + -0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + -0.125*B[4][5] + B[5][0] + -B[5][4] + -0.125*B[6][3] + 0.125*B[6][5])
	M252 = (A[0][4] + A[0][6] + A[1][4] + A[1][6] + A[3][4] + A[3][6] + A[4][4] + A[4][6]) * (-B[0][0] + 0.125*B[0][1] + 0.125*B[0][2] + 0.125*B[0][3] + -B[0][4] + -0.125*B[0][5] + -B[1][0] + B[1][4] + 0.125*B[2][3] + -0.125*B[2][5] + -B[4][0] + 0.125*B[4][1] + 0.125*B[4][2] + 0.125*B[4][3] + -B[4][4] + -0.125*B[4][5] + -B[5][0] + B[5][4] + 0.125*B[6][3] + -0.125*B[6][5])
	M253 = (-A[0][4] + A[0][6] + -A[1][4] + A[1][6] + -A[3][4] + A[3][6] + -A[4][4] + A[4][6]) * (-B[0][0] + -0.125*B[0][1] + -0.125*B[0][2] + -0.125*B[0][3] + -B[0][4] + 0.125*B[0][5] + -B[1][0] + B[1][4] + 0.125*B[2][3] + -0.125*B[2][5] + -B[4][0] + -0.125*B[4][1] + -0.125*B[4][2] + -0.125*B[4][3] + -B[4][4] + 0.125*B[4][5] + -B[5][0] + B[5][4] + 0.125*B[6][3] + -0.125*B[6][5])
	M254 = (A[0][4] + A[0][6] + -A[1][4] + -A[1][6] + A[3][4] + A[3][6] + -A[4][4] + -A[4][6]) * (B[0][0] + -0.125*B[0][1] + -0.125*B[0][2] + 0.125*B[0][3] + B[0][4] + -0.125*B[0][5] + -B[1][0] + B[1][4] + 0.125*B[2][3] + -0.125*B[2][5] + B[4][0] + -0.125*B[4][1] + -0.125*B[4][2] + 0.125*B[4][3] + B[4][4] + -0.125*B[4][5] + -B[5][0] + B[5][4] + 0.125*B[6][3] + -0.125*B[6][5])
	M255 = A[4][6] * (B[5][7] + B[6][7])
	M256 = (A[4][5] + -A[4][6]) * B[5][7]
	M257 = (A[3][5] + A[4][5] + -A[4][6]) * (B[5][7] + B[6][6] + B[6][7])
	M258 = A[3][5] * (B[5][6] + -B[5][9])
	M259 = (A[3][5] + A[4][5]) * (B[4][6] + -B[5][6] + -B[5][7] + -B[6][6] + -B[6][7])
	M260 = (A[3][5] + A[4][4] + A[4][5]) * (B[4][6] + -B[5][9])
	M261 = (A[4][4] + A[4][5]) * B[5][9]
	M262 = (A[3][4] + A[3][5] + A[4][4] + A[4][5]) * B[4][6]
	M263 = A[4][4] * B[4][7]
	M264 = A[3][6] * B[6][6]
	M265 = (A[3][5] + -A[3][6] + A[4][5] + -A[4][6]) * (B[4][7] + B[4][8] + -B[6][6] + -B[6][7] + -B[6][8])
	M266 = (A[3][4] + -A[3][5] + A[3][6] + -A[4][5] + A[4][6]) * (B[4][7] + B[4][8] + -B[6][8])
	M267 = (A[3][4] + -A[3][5] + A[3][6] + A[4][4] + -A[4][5] + A[4][6]) * (B[4][7] + B[4][8] + -B[5][8] + -B[5][10] + -B[6][8])
	M268 = (A[3][4] + -A[3][5] + A[3][6] + A[4][4] + A[4][6]) * (B[5][8] + B[5][10] + B[6][8])
	M269 = (A[3][4] + A[3][6] + A[4][4] + A[4][6]) * (B[4][10] + B[5][8] + B[5][10] + B[6][8])
	M270 = (A[3][6] + A[4][4] + A[4][6]) * (B[4][10] + B[6][9] + -B[6][10])
	M271 = (A[3][6] + A[4][6]) * (B[4][10] + -B[6][10])
	M272 = A[4][5] * B[5][10]
	M273 = A[3][4] * (B[4][8] + -B[6][8])
	M274 = A[4][4] * (B[4][9] + -B[4][10] + -B[5][9] + -B[6][9] + B[6][10])
	M275 = A[3][5] * (B[5][8] + B[6][8])
	M276 = (A[4][4] + A[4][6]) * (B[6][9] + -B[6][10])
	M277 = (A[3][4] + -A[3][5] + A[3][6]) * B[6][8]
	M278 = A[3][4] * (B[4][6] + -B[4][8] + -B[4][9] + B[6][8])
	M279 = A[3][6] * B[6][9]

# Assemble result matrix
	C[0][0] = 0.125*M0 + -0.125*M1 + -0.125*M2 + -0.125*M3 + -0.125*M12 + 0.125*M13 + -0.125*M14 + -0.125*M15 + -0.125*M20 + -0.125*M21 + -0.125*M22 + -0.125*M23 + -0.125*M24 + 0.125*M25 + 0.125*M26 + 0.125*M27 + 0.125*M32 + -0.125*M33 + -0.125*M34 + 0.125*M35 + -0.125*M36 + -0.125*M37 + 0.125*M38 + 0.125*M39 + M117 + -M119 + M123 + -M125 + M127 + -M141 + -M143 + -M145 + -M167 + 0.125*M215 + -0.125*M216 + -0.125*M217 + -0.125*M218 + -0.125*M227 + 0.125*M228 + -0.125*M229 + -0.125*M230 + -0.125*M235 + -0.125*M236 + -0.125*M237 + -0.125*M238 + -0.125*M239 + 0.125*M240 + 0.125*M241 + 0.125*M242 + 0.125*M247 + -0.125*M248 + -0.125*M249 + 0.125*M250 + -0.125*M251 + -0.125*M252 + 0.125*M253 + 0.125*M254 + -M258 + M260 + M261 + -M262 + -M264
	C[1][0] = 0.125*M0 + 0.125*M1 + -0.125*M2 + 0.125*M3 + -0.125*M12 + -0.125*M13 + 0.125*M14 + -0.125*M15 + 0.125*M20 + -0.125*M21 + 0.125*M22 + -0.125*M23 + 0.125*M24 + 0.125*M25 + 0.125*M26 + -0.125*M27 + 0.125*M32 + 0.125*M33 + -0.125*M34 + -0.125*M35 + 0.125*M36 + -0.125*M37 + 0.125*M38 + -0.125*M39 + M113 + -M121 + M122 + M125 + -M129 + -M131 + M133 + -M147 + 0.125*M215 + 0.125*M216 + -0.125*M217 + 0.125*M218 + -0.125*M227 + -0.125*M228 + 0.125*M229 + -0.125*M230 + 0.125*M235 + -0.125*M236 + 0.125*M237 + -0.125*M238 + 0.125*M239 + 0.125*M240 + 0.125*M241 + -0.125*M242 + 0.125*M247 + 0.125*M248 + -0.125*M249 + -0.125*M250 + 0.125*M251 + -0.125*M252 + 0.125*M253 + -0.125*M254 + M255 + M257 + M258 + M259 + -M260 + -M261
	C[2][0] = -0.125*M4 + 0.125*M5 + -0.125*M6 + -0.125*M7 + 0.125*M8 + -0.125*M9 + -0.125*M10 + 0.125*M11 + 0.125*M16 + -0.125*M17 + 0.125*M18 + 0.125*M19 + 0.125*M28 + 0.125*M29 + 0.125*M30 + -0.125*M31 + M113 + M119 + -M129 + -M131 + M135 + -M149 + M151 + -M166 + -0.125*M219 + 0.125*M220 + -0.125*M221 + -0.125*M222 + 0.125*M223 + -0.125*M224 + -0.125*M225 + 0.125*M226 + 0.125*M231 + -0.125*M232 + 0.125*M233 + 0.125*M234 + 0.125*M243 + 0.125*M244 + 0.125*M245 + -0.125*M246
	C[3][0] = -0.125*M0 + 0.125*M1 + 0.125*M2 + 0.125*M3 + 0.125*M12 + -0.125*M13 + 0.125*M14 + 0.125*M15 + 0.125*M20 + 0.125*M21 + 0.125*M22 + 0.125*M23 + 0.125*M24 + -0.125*M25 + -0.125*M26 + -0.125*M27 + -0.125*M32 + 0.125*M33 + 0.125*M34 + -0.125*M35 + 0.125*M36 + 0.125*M37 + -0.125*M38 + -0.125*M39 + M44 + M49 + M51 + M52 + M53 + -M59 + -M63 + -M69 + -M70 + M72 + -M75 + -M117 + M119 + -M123 + M125 + -M127 + M141 + M143 + M145 + M167 + M258 + -M260 + -M261 + M262 + M264
	C[4][0] = -0.125*M0 + -0.125*M1 + 0.125*M2 + -0.125*M3 + 0.125*M12 + 0.125*M13 + -0.125*M14 + 0.125*M15 + -0.125*M20 + 0.125*M21 + -0.125*M22 + 0.125*M23 + -0.125*M24 + -0.125*M25 + -0.125*M26 + 0.125*M27 + -0.125*M32 + -0.125*M33 + 0.125*M34 + 0.125*M35 + -0.125*M36 + 0.125*M37 + -0.125*M38 + 0.125*M39 + M49 + M51 + M52 + -M59 + -M62 + -M63 + M65 + -M70 + -M71 + -M75 + -M113 + M121 + -M122 + -M125 + M129 + M131 + -M133 + M147 + -M255 + -M257 + -M258 + -M259 + M260 + M261
	C[5][0] = M8 + -M9 + M10 + -M11 + -M12 + M13 + M14 + M15 + M16 + M17 + M18 + -M19 + M20 + M21 + -M22 + -M23 + M28 + -M29 + M30 + M31 + M32 + -M33 + M34 + -M35 + -M112 + -M120 + M137 + -M139 + M140 + -M153 + -M155 + -M165 + M223 + -M224 + M225 + -M226 + -M227 + M228 + M229 + M230 + M231 + M232 + M233 + -M234 + M235 + M236 + -M237 + -M238 + M243 + -M244 + M245 + M246 + M247 + -M248 + M249 + -M250 + M256 + -M257 + M264 + -M265 + -M266 + M273
	C[6][0] = M0 + -M1 + M2 + M3 + M4 + -M5 + M6 + M7 + M24 + M25 + -M26 + M27 + M36 + M37 + M38 + M39 + M112 + M115 + M118 + M122 + -M125 + -M134 + M136 + -M138 + -M149 + M156 + -M157 + -M164 + M215 + -M216 + M217 + M218 + M219 + -M220 + M221 + M222 + M239 + M240 + -M241 + M242 + M251 + M252 + M253 + M254 + -M255 + -M256 + -M263
	C[7][0] = M8 + M9 + M10 + M11 + M12 + M13 + -M14 + M15 + -M16 + M17 + M18 + M19 + -M20 + M21 + -M22 + M23 + M28 + M29 + -M30 + M31 + -M32 + -M33 + M34 + M35 + M112 + M120 + M132 + -M134 + M139 + M154 + M223 + M224 + M225 + M226 + M227 + M228 + -M229 + M230 + -M231 + M232 + M233 + M234 + -M235 + M236 + -M237 + M238 + M243 + M244 + -M245 + M246 + -M247 + -M248 + M249 + M250
	C[8][0] = -M8 + M9 + -M10 + M11 + M12 + -M13 + -M14 + -M15 + -M16 + -M17 + -M18 + M19 + -M20 + -M21 + M22 + M23 + -M28 + M29 + -M30 + -M31 + -M32 + M33 + -M34 + M35 + M56 + -M68 + M72 + -M73 + M74 + -M76 + M112 + M120 + -M137 + M139 + -M140 + M153 + M155 + M165 + -M256 + M257 + -M264 + M265 + M266 + -M273
	C[9][0] = -M0 + M1 + -M2 + -M3 + -M4 + M5 + -M6 + -M7 + -M24 + -M25 + M26 + -M27 + -M36 + -M37 + -M38 + -M39 + M41 + -M50 + -M53 + M56 + M60 + M65 + -M68 + -M76 + -M112 + -M115 + -M118 + -M122 + M125 + M134 + -M136 + M138 + M149 + -M156 + M157 + M164 + M255 + M256 + M263
	C[10][0] = -M0 + -M1 + -M2 + M3 + -M4 + -M5 + M6 + -M7 + M16 + M17 + M18 + -M19 + -M20 + -M21 + M22 + M23 + M28 + -M29 + M30 + M31 + M32 + -M33 + M34 + -M35 + M115 + -M116 + M117 + -M118 + -M119 + M123 + -M126 + M127 + -M128 + -M130 + M137 + -M145 + M150 + -M152 + -M215 + -M216 + -M217 + M218 + -M219 + -M220 + M221 + -M222 + M231 + M232 + M233 + -M234 + -M235 + -M236 + M237 + M238 + M243 + -M244 + M245 + M246 + M247 + -M248 + M249 + -M250 + -M273 + -M275 + -M277
	C[0][1] = M8 + -M9 + -M10 + M11 + M12 + M13 + M14 + -M15 + -M24 + -M25 + M26 + -M27 + M36 + M37 + M38 + M39 + M113 + -M114 + -M115 + -M121 + -M129 + M130 + M133 + -M137 + -M141 + -M147 + -M163 + M223 + -M224 + -M225 + M226 + M227 + M228 + M229 + -M230 + -M239 + -M240 + M241 + -M242 + M251 + M252 + M253 + M254 + M263 + M266 + -M267 + -M268 + M272 + M277
	C[1][1] = M0 + M1 + -M2 + M3 + M4 + -M5 + -M6 + -M7 + -M16 + M17 + M18 + M19 + M20 + -M21 + M22 + -M23 + -M28 + -M29 + M30 + -M31 + M32 + M33 + -M34 + -M35 + M113 + -M114 + -M120 + -M121 + -M123 + M132 + -M135 + -M138 + M144 + -M146 + -M148 + -M153 + -M162 + M215 + M216 + -M217 + M218 + M219 + -M220 + -M221 + -M222 + -M231 + M232 + M233 + M234 + M235 + -M236 + M237 + -M238 + -M243 + -M244 + M245 + -M246 + M247 + M248 + -M249 + -M250
	C[2][1] = M0 + M1 + M2 + -M3 + M4 + M5 + -M6 + M7 + -M16 + -M17 + -M18 + M19 + M20 + M21 + -M22 + -M23 + -M28 + M29 + -M30 + -M31 + -M32 + M33 + -M34 + M35 + M54 + M68 + M73 + M75 + M76 + M77 + -M115 + M116 + -M117 + M118 + M119 + -M123 + M126 + -M127 + M128 + M130 + -M137 + M145 + -M150 + M152 + M273 + M275 + M277
	C[3][1] = -M8 + M9 + M10 + -M11 + -M12 + -M13 + -M14 + M15 + M24 + M25 + -M26 + M27 + -M36 + -M37 + -M38 + -M39 + M40 + -M52 + -M58 + M62 + M64 + M75 + M76 + M77 + -M113 + M114 + M115 + M121 + M129 + -M130 + -M133 + M137 + M141 + M147 + M163 + -M263 + -M266 + M267 + M268 + -M272 + -M277
	C[4][1] = -M0 + M1 + -M2 + -M3 + -M8 + M9 + M10 + -M11 + M20 + -M21 + -M22 + M23 + M32 + M33 + M34 + M35 + M112 + -M117 + -M126 + M136 + -M142 + -M161 + -M215 + M216 + -M217 + -M218 + -M223 + M224 + M225 + -M226 + M235 + -M236 + -M237 + M238 + M247 + M248 + M249 + M250 + M260 + M261 + -M262 + M273 + M278 + -M279
	C[5][1] = M4 + M5 + -M6 + M7 + M12 + -M13 + -M14 + -M15 + -M16 + -M17 + -M18 + M19 + M24 + -M25 + M26 + M27 + -M28 + M29 + -M30 + -M31 + -M36 + M37 + M38 + -M39 + -M112 + -M118 + -M122 + -M124 + -M136 + -M156 + M219 + M220 + -M221 + M222 + M227 + -M228 + -M229 + -M230 + -M231 + -M232 + -M233 + M234 + M239 + -M240 + M241 + M242 + -M243 + M244 + -M245 + -M246 + -M251 + M252 + M253 + -M254 + -M261 + -M270 + M271 + -M274 + M279
	C[6][1] = M4 + M5 + M6 + -M7 + M12 + -M13 + M14 + M15 + -M16 + -M17 + M18 + -M19 + M24 + -M25 + -M26 + -M27 + -M28 + M29 + M30 + M31 + M36 + M37 + -M38 + -M39 + -M112 + -M124 + -M132 + -M139 + -M151 + -M154 + -M157 + -M160 + M219 + M220 + M221 + -M222 + M227 + -M228 + M229 + M230 + -M231 + -M232 + M233 + -M234 + M239 + -M240 + -M241 + -M242 + -M243 + M244 + M245 + M246 + M251 + M252 + -M253 + -M254
	C[7][1] = M0 + -M1 + M2 + M3 + M8 + -M9 + -M10 + M11 + -M20 + M21 + M22 + -M23 + -M32 + -M33 + -M34 + -M35 + M42 + M47 + M48 + M50 + M57 + M58 + M63 + M69 + M70 + M74 + -M77 + -M112 + M117 + M126 + -M136 + M142 + M161 + -M260 + -M261 + M262 + -M273 + -M278 + M279
	C[8][1] = -M4 + -M5 + M6 + -M7 + -M12 + M13 + M14 + M15 + M16 + M17 + M18 + -M19 + -M24 + M25 + -M26 + -M27 + M28 + -M29 + M30 + M31 + M36 + -M37 + -M38 + M39 + M48 + M58 + M60 + -M64 + M70 + -M77 + M78 + M112 + M118 + M122 + M124 + M136 + M156 + M261 + M270 + -M271 + M274 + -M279
	C[9][1] = -0.125*M4 + -0.125*M5 + -0.125*M6 + 0.125*M7 + -0.125*M8 + -0.125*M9 + 0.125*M10 + 0.125*M11 + -0.125*M20 + -0.125*M21 + -0.125*M22 + -0.125*M23 + -0.125*M24 + 0.125*M25 + 0.125*M26 + 0.125*M27 + -0.125*M32 + 0.125*M33 + 0.125*M34 + -0.125*M35 + -0.125*M36 + -0.125*M37 + 0.125*M38 + 0.125*M39 + M116 + -M117 + M140 + -M150 + -0.125*M219 + -0.125*M220 + -0.125*M221 + 0.125*M222 + -0.125*M223 + -0.125*M224 + 0.125*M225 + 0.125*M226 + -0.125*M235 + -0.125*M236 + -0.125*M237 + -0.125*M238 + -0.125*M239 + 0.125*M240 + 0.125*M241 + 0.125*M242 + -0.125*M247 + 0.125*M248 + 0.125*M249 + -0.125*M250 + -0.125*M251 + -0.125*M252 + 0.125*M253 + 0.125*M254 + M268 + -M269 + M270 + M275 + -M276 + -M279
	C[10][1] = -0.125*M4 + 0.125*M5 + 0.125*M6 + 0.125*M7 + 0.125*M8 + 0.125*M9 + 0.125*M10 + 0.125*M11 + -0.125*M20 + 0.125*M21 + -0.125*M22 + 0.125*M23 + -0.125*M24 + -0.125*M25 + -0.125*M26 + 0.125*M27 + -0.125*M32 + -0.125*M33 + 0.125*M34 + 0.125*M35 + 0.125*M36 + -0.125*M37 + 0.125*M38 + -0.125*M39 + M114 + -M124 + M128 + -M131 + -M140 + -M142 + -M143 + -M159 + -0.125*M219 + 0.125*M220 + 0.125*M221 + 0.125*M222 + 0.125*M223 + 0.125*M224 + 0.125*M225 + 0.125*M226 + -0.125*M235 + 0.125*M236 + -0.125*M237 + 0.125*M238 + -0.125*M239 + -0.125*M240 + -0.125*M241 + 0.125*M242 + -0.125*M247 + -0.125*M248 + 0.125*M249 + 0.125*M250 + 0.125*M251 + -0.125*M252 + 0.125*M253 + -0.125*M254 + -M270 + M271 + -M272 + M276 + M279
	C[0][2] = 0.125*M0 + -0.125*M1 + 0.125*M2 + 0.125*M3 + -0.125*M12 + -0.125*M13 + -0.125*M14 + 0.125*M15 + 0.125*M16 + -0.125*M17 + 0.125*M18 + 0.125*M19 + -0.125*M28 + -0.125*M29 + -0.125*M30 + 0.125*M31 + -M113 + -M116 + -M127 + -M134 + -M144 + -M155 + -M158 + 0.125*M215 + -0.125*M216 + 0.125*M217 + 0.125*M218 + -0.125*M227 + -0.125*M228 + -0.125*M229 + 0.125*M230 + 0.125*M231 + -0.125*M232 + 0.125*M233 + 0.125*M234 + -0.125*M243 + -0.125*M244 + -0.125*M245 + 0.125*M246
	C[1][2] = 0.125*M4 + 0.125*M5 + 0.125*M6 + -0.125*M7 + 0.125*M8 + 0.125*M9 + -0.125*M10 + -0.125*M11 + 0.125*M20 + 0.125*M21 + 0.125*M22 + 0.125*M23 + 0.125*M24 + -0.125*M25 + -0.125*M26 + -0.125*M27 + 0.125*M32 + -0.125*M33 + -0.125*M34 + 0.125*M35 + 0.125*M36 + 0.125*M37 + -0.125*M38 + -0.125*M39 + -M43 + M46 + M57 + M63 + -M66 + -M67 + M69 + M70 + -M116 + M117 + -M140 + M150 + -M268 + M269 + -M270 + -M275 + M276 + M279
	C[2][2] = 0.125*M4 + -0.125*M5 + -0.125*M6 + -0.125*M7 + -0.125*M8 + -0.125*M9 + -0.125*M10 + -0.125*M11 + 0.125*M20 + -0.125*M21 + 0.125*M22 + -0.125*M23 + 0.125*M24 + 0.125*M25 + 0.125*M26 + -0.125*M27 + 0.125*M32 + 0.125*M33 + -0.125*M34 + -0.125*M35 + -0.125*M36 + 0.125*M37 + -0.125*M38 + 0.125*M39 + -M43 + M46 + -M47 + M55 + -M66 + M70 + M78 + -M114 + M124 + -M128 + M131 + M140 + M142 + M143 + M159 + M270 + -M271 + M272 + -M276 + -M279
	C[3][2] = M4 + -M5 + M6 + M7 + M12 + M13 + M14 + -M15 + M20 + -M21 + -M22 + M23 + -M32 + -M33 + -M34 + -M35 + M115 + -M116 + -M118 + -M126 + -M128 + -M130 + -M146 + -M152 + M219 + -M220 + M221 + M222 + M227 + M228 + M229 + -M230 + M235 + -M236 + -M237 + M238 + -M247 + -M248 + -M249 + -M250
	C[4][2] = -M0 + -M1 + -M2 + M3 + M8 + -M9 + M10 + -M11 + M16 + M17 + M18 + -M19 + M24 + -M25 + M26 + M27 + M28 + -M29 + M30 + M31 + M36 + -M37 + -M38 + M39 + -M114 + -M115 + -M122 + -M133 + -M215 + -M216 + -M217 + M218 + M223 + -M224 + M225 + -M226 + M231 + M232 + M233 + -M234 + M239 + -M240 + M241 + M242 + M243 + -M244 + M245 + M246 + M251 + -M252 + -M253 + M254
	C[5][2] = -M0 + M1 + M2 + M3 + M8 + M9 + -M10 + -M11 + -M16 + -M17 + M18 + -M19 + M24 + -M25 + -M26 + -M27 + M28 + -M29 + -M30 + -M31 + M36 + M37 + -M38 + -M39 + -M114 + -M119 + -M120 + -M121 + -M135 + -M138 + -M148 + -M215 + M216 + M217 + M218 + M223 + M224 + -M225 + -M226 + -M231 + -M232 + M233 + -M234 + M239 + -M240 + -M241 + -M242 + M243 + -M244 + -M245 + -M246 + M251 + M252 + -M253 + -M254
	C[6][2] = -M4 + M5 + -M6 + -M7 + -M12 + -M13 + -M14 + M15 + -M20 + M21 + M22 + -M23 + M32 + M33 + M34 + M35 + M43 + M45 + M59 + M63 + M66 + M67 + M69 + M70 + -M115 + M116 + M118 + M126 + M128 + M130 + M146 + M152
	C[7][2] = M0 + M1 + M2 + -M3 + -M8 + M9 + -M10 + M11 + -M16 + -M17 + -M18 + M19 + -M24 + M25 + -M26 + -M27 + -M28 + M29 + -M30 + -M31 + -M36 + M37 + M38 + -M39 + -M51 + M59 + M61 + M63 + M66 + M70 + M71 + M114 + M115 + M122 + M133
	C[8][2] = M117 + -M119 + M123 + -M125 + M127 + -M141 + -M143 + -M145 + -M167 + -M178 + -M179 + M181 + -M183 + M184 + -M185 + M190 + M196 + -M198 + M213 + 0.125*M215 + -0.125*M216 + -0.125*M217 + -0.125*M218 + -0.125*M227 + 0.125*M228 + -0.125*M229 + -0.125*M230 + -0.125*M235 + -0.125*M236 + -0.125*M237 + -0.125*M238 + -0.125*M239 + 0.125*M240 + 0.125*M241 + 0.125*M242 + 0.125*M247 + -0.125*M248 + -0.125*M249 + 0.125*M250 + -0.125*M251 + -0.125*M252 + 0.125*M253 + 0.125*M254 + -M258 + M260 + M261 + -M262 + -M264
	C[9][2] = M113 + -M121 + M122 + M125 + -M129 + -M131 + M133 + -M147 + -M170 + M180 + M190 + M192 + M206 + M210 + -M212 + M214 + 0.125*M215 + 0.125*M216 + -0.125*M217 + 0.125*M218 + -0.125*M227 + -0.125*M228 + 0.125*M229 + -0.125*M230 + 0.125*M235 + -0.125*M236 + 0.125*M237 + -0.125*M238 + 0.125*M239 + 0.125*M240 + 0.125*M241 + -0.125*M242 + 0.125*M247 + 0.125*M248 + -0.125*M249 + -0.125*M250 + 0.125*M251 + -0.125*M252 + 0.125*M253 + -0.125*M254 + M255 + M257 + M258 + M259 + -M260 + -M261
	C[10][2] = M113 + M119 + -M129 + -M131 + M135 + -M149 + M151 + -M166 + -M179 + M181 + -M183 + M184 + -M185 + 2.0*M190 + M205 + M206 + -M212 + M213 + -M214 + -0.125*M219 + 0.125*M220 + -0.125*M221 + -0.125*M222 + 0.125*M223 + -0.125*M224 + -0.125*M225 + 0.125*M226 + 0.125*M231 + -0.125*M232 + 0.125*M233 + 0.125*M234 + 0.125*M243 + 0.125*M244 + 0.125*M245 + -0.125*M246
	C[0][3] = M80 + -M81 + M82 + -M83 + M84 + -M86 + -M87 + -M88 + M89 + M258 + -M260 + -M261 + M262 + M264
	C[1][3] = M79 + M83 + -M84 + -M85 + M86 + M87 + M88 + -M255 + -M257 + -M258 + -M259 + M260 + M261
	C[2][3] = -M112 + -M120 + M137 + -M139 + M140 + -M153 + -M155 + -M165 + -M175 + M176 + -M182 + M187 + M188 + M189 + M196 + M199 + -M203 + -M207 + M223 + -M224 + M225 + -M226 + -M227 + M228 + M229 + M230 + M231 + M232 + M233 + -M234 + M235 + M236 + -M237 + -M238 + M243 + -M244 + M245 + M246 + M247 + -M248 + M249 + -M250 + M256 + -M257 + M264 + -M265 + -M266 + M273
	C[3][3] = M112 + M115 + M118 + M122 + -M125 + -M134 + M136 + -M138 + -M149 + M156 + -M157 + -M164 + -M168 + -M177 + -M188 + -M189 + M195 + M196 + -M199 + -M204 + -M209 + M215 + -M216 + M217 + M218 + M219 + -M220 + M221 + M222 + M239 + M240 + -M241 + M242 + M251 + M252 + M253 + M254 + -M255 + -M256 + -M263
	C[4][3] = M112 + M120 + M132 + -M134 + M139 + M154 + -M175 + M176 + M178 + -M182 + M187 + -M193 + -M203 + -M204 + -M214 + M223 + M224 + M225 + M226 + M227 + M228 + -M229 + M230 + -M231 + M232 + M233 + M234 + -M235 + M236 + -M237 + M238 + M243 + M244 + -M245 + M246 + -M247 + -M248 + M249 + M250
	C[5][3] = -M91 + -M92 + -M93 + -M94 + M95 + -M96 + M97 + -M111 + -M256 + M257 + -M264 + M265 + M266 + -M273
	C[6][3] = M90 + M93 + M94 + -M95 + M96 + -M97 + M98 + M105 + M255 + M256 + M263
	C[7][3] = M115 + -M116 + M117 + -M118 + -M119 + M123 + -M126 + M127 + -M128 + -M130 + M137 + -M145 + M150 + -M152 + M170 + -M171 + M172 + M175 + -M177 + -M183 + M184 + M194 + -M215 + -M216 + -M217 + M218 + -M219 + -M220 + M221 + -M222 + M231 + M232 + M233 + -M234 + -M235 + -M236 + M237 + M238 + M243 + -M244 + M245 + M246 + M247 + -M248 + M249 + -M250 + -M273 + -M275 + -M277
	C[8][3] = M113 + -M114 + -M115 + -M121 + -M129 + M130 + M133 + -M137 + -M141 + -M147 + -M163 + M168 + M169 + M170 + -M171 + M172 + M173 + -M174 + M182 + -M183 + M184 + M186 + M203 + M223 + -M224 + -M225 + M226 + M227 + M228 + M229 + -M230 + -M239 + -M240 + M241 + -M242 + M251 + M252 + M253 + M254 + M263 + M266 + -M267 + -M268 + M272 + M277
	C[9][3] = M113 + -M114 + -M120 + -M121 + -M123 + M132 + -M135 + -M138 + M144 + -M146 + -M148 + -M153 + -M162 + -M168 + -M169 + M179 + -M180 + -M182 + -M186 + M191 + -M203 + M215 + M216 + -M217 + M218 + M219 + -M220 + -M221 + -M222 + -M231 + M232 + M233 + M234 + M235 + -M236 + M237 + -M238 + -M243 + -M244 + M245 + -M246 + M247 + M248 + -M249 + -M250
	C[10][3] = M86 + M87 + M88 + -M89 + -M97 + M101 + M104 + -M108 + -M109 + M273 + M275 + M277
	C[0][4] = M84 + M85 + -M86 + -M87 + -M88 + -M94 + M97 + -M98 + -M102 + -M104 + -M263 + -M266 + M267 + M268 + -M272 + -M277
	C[1][4] = M112 + -M117 + -M126 + M136 + -M142 + -M161 + -M183 + M187 + M189 + M199 + -M201 + -M203 + -M207 + -M215 + M216 + -M217 + -M218 + -M223 + M224 + M225 + -M226 + M235 + -M236 + -M237 + M238 + M247 + M248 + M249 + M250 + M260 + M261 + -M262 + M273 + M278 + -M279
	C[2][4] = -M112 + -M118 + -M122 + -M124 + -M136 + -M156 + M172 + M173 + -M183 + M186 + -M199 + M203 + -M204 + -M208 + M219 + M220 + -M221 + M222 + M227 + -M228 + -M229 + -M230 + -M231 + -M232 + -M233 + M234 + M239 + -M240 + M241 + M242 + -M243 + M244 + -M245 + -M246 + -M251 + M252 + M253 + -M254 + -M261 + -M270 + M271 + -M274 + M279
	C[3][4] = -M112 + -M124 + -M132 + -M139 + -M151 + -M154 + -M157 + -M160 + M181 + -M183 + M197 + -M203 + -M204 + -M212 + M219 + M220 + M221 + -M222 + M227 + -M228 + M229 + M230 + -M231 + -M232 + M233 + -M234 + M239 + -M240 + -M241 + -M242 + -M243 + M244 + M245 + M246 + M251 + M252 + -M253 + -M254
	C[4][4] = M87 + M88 + -M89 + M96 + M103 + -M106 + -M260 + -M261 + M262 + -M273 + -M278 + M279
	C[5][4] = -M88 + M95 + -M96 + -M105 + M107 + M110 + M261 + M270 + -M271 + M274 + -M279
	C[6][4] = M116 + -M117 + M140 + -M150 + M176 + -M182 + M184 + M188 + M190 + -M202 + M213 + -0.125*M219 + -0.125*M220 + -0.125*M221 + 0.125*M222 + -0.125*M223 + -0.125*M224 + 0.125*M225 + 0.125*M226 + -0.125*M235 + -0.125*M236 + -0.125*M237 + -0.125*M238 + -0.125*M239 + 0.125*M240 + 0.125*M241 + 0.125*M242 + -0.125*M247 + 0.125*M248 + 0.125*M249 + -0.125*M250 + -0.125*M251 + -0.125*M252 + 0.125*M253 + 0.125*M254 + M268 + -M269 + M270 + M275 + -M276 + -M279
	C[7][4] = M114 + -M124 + M128 + -M131 + -M140 + -M142 + -M143 + -M159 + M169 + -M171 + -M174 + M182 + M184 + M190 + M211 + -0.125*M219 + 0.125*M220 + 0.125*M221 + 0.125*M222 + 0.125*M223 + 0.125*M224 + 0.125*M225 + 0.125*M226 + -0.125*M235 + 0.125*M236 + -0.125*M237 + 0.125*M238 + -0.125*M239 + -0.125*M240 + -0.125*M241 + 0.125*M242 + -0.125*M247 + -0.125*M248 + 0.125*M249 + 0.125*M250 + 0.125*M251 + -0.125*M252 + 0.125*M253 + -0.125*M254 + -M270 + M271 + -M272 + M276 + M279
	C[8][4] = -M113 + -M116 + -M127 + -M134 + -M144 + -M155 + -M158 + -M182 + M184 + -M185 + 2.0*M190 + M200 + M205 + M206 + M213 + 0.125*M215 + -0.125*M216 + 0.125*M217 + 0.125*M218 + -0.125*M227 + -0.125*M228 + -0.125*M229 + 0.125*M230 + 0.125*M231 + -0.125*M232 + 0.125*M233 + 0.125*M234 + -0.125*M243 + -0.125*M244 + -0.125*M245 + 0.125*M246
	C[9][4] = M82 + -M100 + M101 + M104 + -M109 + -M111 + -M268 + M269 + -M270 + -M275 + M276 + M279
	C[10][4] = M79 + M80 + M90 + -M91 + M99 + M100 + -M101 + -M104 + M270 + -M271 + M272 + -M276 + -M279
	return (C, 280)