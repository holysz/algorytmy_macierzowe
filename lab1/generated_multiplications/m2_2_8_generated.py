# Matrix multiplication: C = A @ B
# A: 2×2, B: 2×8, C: 2×8
# Using 28 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(2)] for _ in range(8)])
	M0 = A[0][0] * (B[0][1] + -B[1][1])
	M1 = (A[0][0] + A[0][1]) * B[1][1]
	M2 = (A[0][0] + A[0][1] + A[1][1]) * (B[0][1] + B[0][3] + -B[1][1])
	M3 = A[1][0] * B[0][3]
	M4 = A[1][1] * B[1][3]
	M5 = A[1][0] * (B[0][0] + -B[1][0])
	M6 = (A[1][0] + A[1][1]) * B[1][0]
	M7 = (A[0][1] + -A[1][0] + -A[1][1]) * (B[0][0] + -B[0][5] + -B[1][0])
	M8 = (A[0][0] + A[0][1] + -A[1][0] + -A[1][1]) * (B[0][0] + -B[0][5])
	M9 = A[0][0] * B[0][5]
	M10 = A[0][1] * B[1][5]
	M11 = A[0][1] * (B[0][6] + -B[1][6])
	M12 = (A[0][1] + A[1][1]) * (B[0][1] + B[0][3] + -B[1][1] + -B[1][3])
	M13 = (A[0][0] + A[0][1]) * B[0][6]
	M14 = (A[0][0] + A[0][1] + A[1][0]) * (B[0][6] + -B[1][6] + -B[1][7])
	M15 = (A[0][0] + A[0][1] + A[1][0] + A[1][1]) * (B[0][1] + B[0][3])
	M16 = A[1][1] * (B[1][2] + -B[1][7])
	M17 = (A[0][0] + A[0][1] + A[1][0] + A[1][1]) * (B[0][1] + B[0][3] + -B[1][6] + -B[1][7])
	M18 = A[0][0] * (B[0][2] + B[0][4] + -2*B[0][5] + -B[1][2] + -B[1][4])
	M19 = (A[0][0] + A[0][1] + -A[1][1]) * (B[0][4] + -B[1][2] + -B[1][4])
	M20 = A[1][0] * B[0][7]
	M21 = (A[0][1] + -A[1][1]) * (B[0][4] + -B[1][4])
	M22 = (A[0][0] + A[0][1]) * (B[1][2] + B[1][4])
	M23 = A[1][1] * B[1][2]
	M24 = (A[0][0] + A[1][0]) * (B[0][6] + B[0][7] + -B[1][6] + -B[1][7])
	M25 = (A[0][1] + -A[1][1]) * (B[0][0] + 2*B[0][4] + -B[0][5] + -B[1][0] + -2*B[1][4] + B[1][5])
	M26 = (A[0][0] + A[0][1] + -A[1][0] + -A[1][1]) * B[0][4]
	M27 = A[1][0] * (B[0][2] + B[0][3])

# Assemble result matrix
	C[0][0] = M6 + -M7 + M8 + M9
	C[1][0] = M5 + M6
	C[2][0] = M0 + M1
	C[3][0] = -M1 + -M2 + -M3 + M15
	C[4][0] = 2*M9 + M18 + -M19 + M21 + M23
	C[5][0] = -M3 + M23 + M27
	C[6][0] = -M0 + M2 + -M4 + -M12
	C[7][0] = M3 + M4
	C[0][1] = M19 + -M21 + M22 + -M23
	C[1][1] = M19 + M22 + -M23 + -M26
	C[2][1] = M9 + M10
	C[3][1] = M5 + M7 + M10 + 2*M21 + -M25
	C[4][1] = -M11 + M13
	C[5][1] = -M13 + M14 + M15 + M16 + -M17 + -M23
	C[6][1] = M11 + -M14 + -M20 + M24
	C[7][1] = -M16 + M20 + M23
	return (C, 28)