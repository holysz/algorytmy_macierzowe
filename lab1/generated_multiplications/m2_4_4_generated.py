# Matrix multiplication: C = A @ B
# A: 2×4, B: 4×4, C: 2×4
# Using 26 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(2)] for _ in range(4)])
	M0 = A[0][2] * (B[1][3] + -B[2][0] + B[2][3])
	M1 = (A[0][1] + -A[0][2]) * B[1][3]
	M2 = (A[0][2] + -A[1][1]) * (B[1][3] + B[2][1])
	M3 = (A[0][2] + -A[1][2]) * (B[2][1] + -B[2][3] + B[3][3])
	M4 = (A[0][2] + -A[1][2] + -A[1][3]) * (B[2][0] + -B[3][3])
	M5 = (A[1][2] + A[1][3]) * (B[0][3] + -B[2][0])
	M6 = (A[1][1] + -A[1][2]) * B[2][1]
	M7 = (A[1][0] + A[1][2] + A[1][3]) * B[0][3]
	M8 = (A[0][0] + A[1][2] + A[1][3]) * (B[0][3] + B[2][2])
	M9 = A[1][1] * (B[0][1] + B[1][0] + B[1][1] + B[2][1])
	M10 = (A[0][0] + -A[1][1]) * (B[0][1] + -B[1][2])
	M11 = (A[0][1] + -A[1][1]) * (B[1][1] + B[1][2] + -B[1][3] + B[3][1])
	M12 = (A[0][1] + -A[0][3] + -A[1][1]) * (B[1][0] + -B[3][1])
	M13 = (A[0][1] + -A[0][3] + -A[1][1] + A[1][3]) * B[3][1]
	M14 = (A[0][1] + -A[0][3]) * B[1][0]
	M15 = (A[0][0] + -A[0][1]) * B[1][2]
	M16 = (A[1][0] + -A[1][1]) * B[0][1]
	M17 = (A[0][2] + A[0][3] + -A[1][2] + -A[1][3]) * (B[2][2] + B[3][3])
	M18 = A[0][0] * (B[0][0] + -B[0][2] + -B[0][3] + -B[1][2] + B[2][2])
	M19 = (A[0][0] + A[0][2] + A[0][3]) * B[2][2]
	M20 = (A[0][0] + -A[1][0]) * (B[0][1] + B[0][2] + B[0][3] + -B[2][2] + B[3][2])
	M21 = (A[0][0] + -A[1][0] + A[1][3]) * (B[0][0] + -B[0][3] + -B[2][2] + B[3][2])
	M22 = (A[1][0] + -A[1][3]) * (B[0][0] + -B[0][3])
	M23 = (A[0][0] + -A[0][3] + -A[1][0] + A[1][3]) * (B[2][2] + -B[3][2])
	M24 = A[1][3] * (B[0][0] + -B[0][3] + -B[2][0] + B[3][0] + B[3][1])
	M25 = A[0][3] * (B[1][0] + B[2][2] + B[3][0] + -B[3][2] + -B[3][3])

# Assemble result matrix
	C[0][0] = M4 + -M5 + M8 + M14 + M17 + -M19 + M21 + M22 + M23 + M25
	C[1][0] = -M5 + M7 + -M12 + -M13 + M14 + M22 + M24
	C[2][0] = M1 + M2 + M9 + M10 + M11 + M12 + -M14 + M15
	C[3][0] = -M6 + M9 + M12 + M13 + -M14 + M16
	C[0][1] = -M15 + -M18 + M19 + M21 + M22 + M23
	C[1][1] = -M7 + M8 + M10 + -M16 + -M18 + -M20 + M21 + M22
	C[2][1] = M0 + M1 + M4 + -M5 + M8 + M17 + -M19
	C[3][1] = M0 + -M2 + M3 + M4 + -M5 + -M6 + M7
	return (C, 26)