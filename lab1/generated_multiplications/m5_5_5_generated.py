# Matrix multiplication: C = A @ B
# A: 5×5, B: 5×5, C: 5×5
# Using 98 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(5)] for _ in range(5)])
	M0 = -A[3][2] * (-B[2][0] + B[2][1] + B[2][4] + -B[4][0])
	M1 = A[3][3] * (B[3][0] + -B[3][1] + -B[3][4] + -B[4][0])
	M2 = (-A[1][1] + -A[1][3] + A[3][3]) * (B[1][0] + -B[3][4])
	M3 = (A[1][0] + A[1][3] + -A[3][3]) * (-B[0][0] + B[3][1])
	M4 = (-A[3][2] + -A[4][4]) * (-B[2][2] + -B[4][0])
	M5 = A[4][4] * (-B[2][2] + -B[4][1] + -B[4][2] + B[4][4])
	M6 = (-A[3][1] + -A[3][4] + -A[4][4]) * (B[1][2] + -B[4][4])
	M7 = (-A[3][2] + -A[4][0] + -A[4][2]) * (-B[0][0] + B[2][1])
	M8 = (A[3][0] + A[3][4] + A[4][4]) * (B[0][2] + B[4][1])
	M9 = (-A[3][2] + -A[4][1] + -A[4][2]) * (B[1][0] + -B[2][4])
	M10 = (-A[1][4] + -A[3][3]) * (B[3][3] + B[4][0])
	M11 = -A[1][4] * (-B[3][3] + -B[4][1] + B[4][3] + B[4][4])
	M12 = (A[3][0] + A[3][4]) * -B[4][1]
	M13 = -A[3][1] * (-B[0][4] + B[1][0] + -B[1][4] + B[4][4])
	M14 = (A[1][3] + A[1][4] + A[4][3]) * (-B[3][3] + -B[4][1] + -B[4][2] + B[4][3] + B[4][4])
	M15 = -A[4][3] * (-B[0][0] + -B[1][0] + B[2][0] + -B[2][2] + B[3][0] + -B[3][1] + -B[3][2] + B[3][4])
	M16 = (A[1][0] + A[1][3] + -A[3][0] + -A[3][2] + -A[3][3] + -A[4][0] + -A[4][2]) * -B[0][0]
	M17 = (A[1][2] + A[4][3]) * (B[0][0] + B[1][0] + -B[2][0] + B[2][2] + -B[3][0])
	M18 = (A[1][0] + A[1][3] + A[4][3]) * (B[0][2] + B[3][1])
	M19 = (-A[1][1] + -A[1][3]) * B[3][4]
	M20 = (-A[3][2] + -A[4][2] + A[4][3]) * (B[0][0] + B[1][0] + -B[2][0] + B[2][2])
	M21 = (A[1][0] + A[1][3] + A[3][0] + A[3][4] + A[4][0] + A[4][3] + A[4][4]) * B[0][2]
	M22 = (A[1][0] + A[1][3]) * -B[3][1]
	M23 = A[1][2] * (B[0][0] + B[1][0] + -B[2][0] + -B[3][0])
	M24 = (A[1][3] + A[4][3]) * (B[0][2] + B[1][2] + -B[3][2] + B[3][3] + B[4][1] + B[4][2] + -B[4][3] + -B[4][4])
	M25 = A[3][3] * (-B[3][2] + B[4][0])
	M26 = (A[1][1] + A[1][3] + -A[3][1] + -A[3][2] + -A[3][3] + -A[4][1] + -A[4][2]) * B[1][0]
	M27 = (-A[3][1] + -A[3][4]) * B[4][4]
	M28 = (A[1][2] + -A[1][3] + A[3][3]) * (-B[0][0] + -B[1][0] + B[3][0] + B[3][3])
	M29 = (-A[1][1] + -A[1][3] + -A[4][3]) * (B[1][2] + -B[3][4])
	M30 = (A[1][2] + -A[1][3] + -A[1][4]) * B[3][3]
	M31 = (A[1][2] + A[4][2] + -A[4][4]) * -B[2][2]
	M32 = A[1][2] * (B[2][1] + -B[2][3] + -B[2][4] + -B[3][3])
	M33 = (A[4][0] + A[4][2]) * B[2][1]
	M34 = (-A[1][1] + -A[1][3] + -A[3][1] + -A[3][4] + -A[4][1] + -A[4][3] + -A[4][4]) * B[1][2]
	M35 = (A[3][4] + A[4][4]) * (B[0][2] + B[1][2] + B[4][0] + -B[4][2])
	M36 = (-A[3][2] + A[3][3] + A[3][4]) * -B[4][0]
	M37 = (-A[4][1] + -A[4][2]) * B[2][4]
	M38 = (A[1][2] + A[4][1] + A[4][2]) * (-B[1][1] + B[1][3] + B[2][4])
	M39 = (A[1][2] + A[4][0] + A[4][2]) * (-B[0][3] + -B[0][4] + B[2][1])
	M40 = -A[1][1] * (-B[1][1] + B[1][3] + B[1][4] + -B[3][4])
	M41 = A[1][0] * (-B[0][1] + B[0][3] + B[0][4] + B[3][1])
	M42 = (-A[1][4] + A[3][1] + A[3][4]) * (-B[0][4] + B[1][1] + -B[1][3] + -B[4][4])
	M43 = (A[1][2] + A[4][2]) * (-B[0][3] + -B[0][4] + B[1][1] + -B[1][3] + -B[2][2] + B[2][3])
	M44 = (-A[1][4] + A[3][0] + A[3][4]) * (-B[0][3] + -B[0][4] + B[1][1] + B[4][1])
	M45 = (-A[1][4] + -A[3][2] + A[3][4]) * (-B[0][3] + -2*B[0][4] + 2*B[1][1] + -B[1][3] + B[4][0] + B[4][3])
	M46 = (-A[1][1] + -A[1][2] + -A[1][4] + A[3][1] + A[3][4] + -A[4][1] + -A[4][2]) * (-B[0][4] + B[1][1] + -B[1][3])
	M47 = (A[1][0] + A[1][2] + A[1][4] + -A[3][0] + -A[3][4] + A[4][0] + A[4][2]) * (-B[0][3] + -B[0][4] + B[1][1])
	M48 = -A[3][2] * (-B[0][3] + -2*B[0][4] + 2*B[1][1] + -B[1][3] + B[2][3] + B[4][3])
	M49 = (A[1][0] + A[1][1] + A[1][2] + A[4][1] + A[4][2]) * -B[0][4]
	M50 = (A[1][0] + A[1][1] + A[1][2] + A[4][0] + A[4][2]) * -B[1][1]
	M51 = (A[1][0] + A[1][1] + A[1][2] + A[4][0] + A[4][1] + A[4][2]) * (-B[0][4] + B[1][1])
	M52 = (A[3][0] + A[3][1]) * (-B[0][4] + B[1][1])
	M53 = (A[1][3] + A[1][4] + A[4][3] + A[4][4]) * (-B[4][1] + -B[4][2] + B[4][3] + B[4][4])
	M54 = A[3][0] * (-B[0][0] + B[0][1] + 2*B[0][4] + -B[1][1] + -B[4][1])
	M55 = -A[4][0] * (-B[0][1] + -B[0][2] + -B[0][4] + B[2][1])
	M56 = A[2][1] * (-B[1][4] + B[3][4])
	M57 = -A[4][1] * (-B[1][1] + B[1][2] + -B[1][4] + B[2][4])
	M58 = (-A[0][3] + -A[2][1] + -A[2][3]) * (B[1][2] + B[1][4] + -B[3][4])
	M59 = (-A[0][1] + -A[0][3] + -A[2][1] + -A[2][3]) * (-B[0][4] + B[1][2] + B[1][4] + B[2][4] + -B[4][4])
	M60 = (A[2][1] + A[2][3]) * (B[1][0] + -B[1][1] + B[1][3] + -B[3][4])
	M61 = (-A[0][1] + A[0][2] + -A[0][3] + -A[2][1] + -A[2][3]) * (B[1][0] + B[2][4])
	M62 = (-A[0][1] + -A[0][3] + -A[0][4] + -A[2][1] + -A[2][3]) * (B[1][3] + -B[4][4])
	M63 = (-A[0][1] + A[0][2] + -A[0][3]) * B[1][0]
	M64 = (-A[0][0] + -A[0][1] + -A[0][3] + -A[2][1] + -A[2][3]) * (-B[0][4] + -B[1][1])
	M65 = (-A[0][0] + -A[0][1] + -A[0][3]) * -B[1][1]
	M66 = (-A[0][1] + -A[0][3] + -A[0][4] + -A[2][1] + -A[2][3] + -A[2][4]) * B[4][4]
	M67 = (-A[0][1] + -A[0][3] + -A[0][4]) * B[1][3]
	M68 = (A[0][3] + -A[2][0] + A[2][3]) * (B[0][2] + B[1][1] + -B[3][1])
	M69 = (-A[0][0] + A[0][3] + -A[2][0] + A[2][3]) * (B[0][2] + B[2][1] + B[4][1])
	M70 = (-A[2][0] + A[2][3]) * (-B[0][0] + -B[0][3] + B[1][1] + -B[3][1])
	M71 = (-A[0][0] + -A[0][2] + A[0][3] + -A[2][0] + A[2][3]) * (-B[0][0] + B[2][1])
	M72 = (A[3][0] + -A[3][1]) * -B[0][4]
	M73 = -A[0][1] * B[1][2]
	M74 = (-A[0][0] + -A[0][2] + A[0][3]) * -B[0][0]
	M75 = (-A[0][1] + A[0][2] + -A[0][3] + -A[2][1] + A[2][2] + -A[2][3]) * B[2][4]
	M76 = (-A[0][0] + A[0][3] + -A[0][4] + -A[2][0] + A[2][3]) * (-B[0][3] + B[4][1])
	M77 = (-A[0][0] + A[0][3] + -A[0][4] + -A[2][0] + A[2][3] + -A[2][4]) * -B[4][1]
	M78 = (-A[0][3] + -A[2][3] + A[2][4]) * (-B[0][3] + B[1][3] + -B[3][3] + B[4][1] + B[4][2])
	M79 = -A[0][0] * (-B[0][1] + -B[0][2] + B[1][1])
	M80 = (-A[0][0] + -A[0][2] + A[0][3] + -A[2][0] + -A[2][2] + A[2][3]) * B[2][1]
	M81 = (-A[0][3] + A[0][4] + -A[2][3] + A[2][4]) * (B[2][3] + -B[4][1] + -B[4][2])
	M82 = (A[2][3] + -A[2][4]) * (-B[0][3] + B[1][3] + -B[3][3] + -B[4][0])
	M83 = -A[0][4] * (-B[0][3] + -B[1][3] + B[4][1] + B[4][2] + B[4][3])
	M84 = A[2][4] * (-B[0][3] + B[1][3] + -B[3][3] + B[4][1] + -B[4][3] + B[4][4])
	M85 = (A[0][2] + A[0][3] + -A[0][4] + A[2][3] + -A[2][4]) * (B[2][3] + B[4][0])
	M86 = (-A[0][3] + A[2][2] + -A[2][3]) * (-B[0][0] + B[1][0] + B[2][1] + B[2][2] + B[2][3] + -B[3][0] + -B[4][0])
	M87 = -A[2][2] * (-B[0][0] + B[1][0] + -B[2][0] + B[2][1] + B[2][3] + B[2][4] + -B[3][0] + -B[4][0])
	M88 = (-A[0][0] + -A[0][1] + -A[0][3] + -A[2][0] + -A[2][1] + -A[2][3]) * -B[0][4]
	M89 = (-A[0][0] + A[0][3] + -A[0][4]) * -B[0][3]
	M90 = (-A[0][3] + -A[2][3]) * (B[0][2] + -B[1][2] + -B[1][4] + B[2][1] + B[2][2] + B[2][3] + B[3][2] + B[3][4] + B[4][1] + B[4][2])
	M91 = (A[0][2] + -A[0][3] + A[2][2] + -A[2][3]) * (B[2][1] + B[2][2] + B[2][3])
	M92 = A[0][2] * (-B[0][0] + B[1][0] + B[2][0] + B[2][1] + B[2][2] + B[2][3] + B[4][0])
	M93 = (-A[2][2] + A[2][3]) * (-B[0][0] + B[1][0] + -B[3][0] + -B[4][0])
	M94 = (A[0][2] + A[0][3] + -A[0][4] + A[2][2] + A[2][3] + -A[2][4]) * B[2][3]
	M95 = -A[2][0] * (-B[0][1] + -B[0][4] + B[1][1] + -B[3][1])
	M96 = (A[0][2] + A[0][3] + -A[0][4]) * -B[4][0]
	M97 = -A[0][3] * (-B[0][0] + -B[0][3] + B[1][0] + B[1][1] + B[1][3] + -B[3][0] + -B[3][1] + -B[3][2] + -B[3][3] + -B[4][0])

# Assemble result matrix
	C[0][0] = -M63 + M74 + M86 + -M91 + M92 + M93 + M96
	C[1][0] = M1 + -M2 + -M3 + -M10 + -M19 + -M22 + -M23 + -M28 + M30
	C[2][0] = -M61 + M63 + M71 + -M74 + M75 + -M80 + -M85 + M87 + -M93 + M94 + -M96
	C[3][0] = M0 + M1 + -M2 + -M3 + -M7 + M9 + M16 + -M19 + -M22 + -M26 + -M33 + -M36 + M37
	C[4][0] = -M0 + M4 + M7 + -M9 + -M17 + M20 + M23 + -M31 + M33 + -M37
	C[0][1] = M65 + -M68 + M69 + M70 + -M71 + M74 + -M76 + M79 + M89
	C[1][1] = -M12 + -M22 + -M33 + M39 + -M41 + -M44 + -M47 + -M50
	C[2][1] = M64 + -M65 + -M70 + M71 + -M74 + M76 + M77 + -M80 + -M88 + -M89 + M95
	C[3][1] = -M3 + -M7 + -M12 + M16 + -M22 + -M33 + M52 + M54 + M72
	C[4][1] = M8 + M12 + M18 + -M21 + M22 + M33 + -M49 + M50 + M51 + M55
	C[0][2] = M68 + -M69 + -M70 + M71 + -M73 + -M74 + M76 + -M78 + -M81 + -M82 + -M85 + -M86 + -M89 + M91 + -M93 + -M96 + M97
	C[1][2] = -M11 + -M14 + -M15 + M17 + M18 + -M19 + M22 + -M23 + -M24 + -M29
	C[2][2] = M56 + -M58 + -M68 + M70 + -M71 + M74 + -M76 + -M77 + M78 + M80 + M82 + M85 + M86 + M89 + -M90 + M93 + -M94 + M96 + -M97
	C[3][2] = M4 + M5 + -M6 + M8 + M12 + -M25 + -M27 + -M35 + -M36
	C[4][2] = -M5 + M6 + -M8 + -M12 + M15 + -M17 + -M18 + M19 + M21 + -M22 + M23 + M27 + M29 + -M31 + -M34
	C[0][3] = -M67 + M78 + M81 + M82 + -M83 + M85 + M89 + M96
	C[1][3] = -M11 + -M12 + M27 + -M30 + -M32 + -M33 + -M37 + -M38 + M39 + -M42 + -M44 + M46 + -M47 + M49 + -M50
	C[2][3] = -M62 + -M66 + M67 + M76 + M77 + -M82 + -M84 + -M85 + -M89 + M94 + -M96
	C[3][3] = -M10 + -M11 + -M12 + M27 + M36 + -M42 + -M44 + M45 + -M48 + M52
	C[4][3] = -M5 + -M14 + M30 + -M31 + M32 + M33 + M37 + M38 + -M39 + M43 + -M49 + M50 + M51 + M53
	C[0][4] = M58 + -M59 + M60 + M61 + M62 + -M63 + M64 + -M65 + -M67 + M73
	C[1][4] = -M19 + -M27 + M37 + M38 + -M40 + M42 + -M46 + -M49
	C[2][4] = -M56 + -M60 + -M61 + -M62 + M63 + -M64 + M65 + -M66 + M67 + M75 + M88
	C[3][4] = -M2 + M9 + M13 + -M19 + -M26 + -M27 + M37 + -M72
	C[4][4] = M6 + M19 + M27 + M29 + -M34 + -M37 + M49 + -M50 + -M51 + M57
	return (C, 98)