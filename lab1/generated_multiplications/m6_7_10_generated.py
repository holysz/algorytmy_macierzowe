# Matrix multiplication: C = A @ B
# A: 6×7, B: 7×10, C: 6×10
# Using 296 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(6)] for _ in range(10)])
	M0 = A[2][2] * (B[2][5] + -B[5][5])
	M1 = (A[0][2] + A[1][2]) * (B[0][9] + -B[1][9] + -B[2][9] + -B[3][9] + B[4][9] + B[5][9])
	M2 = (A[0][2] + -A[1][1] + A[1][2]) * (B[0][9] + -B[1][9] + -B[2][5] + -B[2][9] + -B[3][9] + B[4][9] + B[5][5] + B[5][9])
	M3 = (A[0][0] + A[0][2] + -A[1][1] + A[1][2]) * (B[0][9] + B[1][8] + -B[3][9] + -B[4][8])
	M4 = (A[1][0] + A[1][1] + -A[2][0]) * (B[0][9] + -B[1][5] + -B[1][9] + -B[2][5] + -B[2][9] + -B[3][9] + B[4][5] + B[4][9] + B[5][5] + B[5][9])
	M5 = (A[1][0] + -A[2][0]) * (B[0][5] + B[0][9] + -B[1][5] + -B[1][9] + -B[2][5] + -B[2][9] + -B[3][5] + -B[3][9] + B[4][5] + B[4][9] + B[5][5] + B[5][9])
	M6 = (A[1][1] + -A[1][2]) * (B[2][5] + B[2][9] + -B[5][5] + -B[5][9])
	M7 = (A[1][0] + A[1][1] + -A[2][0] + -A[2][2]) * (B[1][6] + B[1][7] + -B[2][5] + -B[2][9] + -B[4][6] + -B[4][7] + B[5][5] + B[5][9])
	M8 = A[0][2] * (B[2][5] + -B[5][5])
	M9 = (A[1][0] + A[1][1] + -A[2][0] + -A[2][1]) * (B[1][5] + B[1][6] + B[1][7] + B[1][9] + -B[4][5] + -B[4][6] + -B[4][7] + -B[4][9])
	M10 = (A[0][1] + -A[0][2] + A[1][1] + -A[1][2]) * (B[1][8] + B[1][9] + -B[4][8] + -B[4][9])
	M11 = (A[0][0] + A[0][1]) * (B[1][8] + -B[4][8])
	M12 = (A[1][0] + A[1][1]) * (B[0][9] + -B[3][9])
	M13 = (A[0][0] + A[0][2] + A[1][0] + A[1][2]) * (B[0][7] + B[0][8] + B[0][9] + -B[3][7] + -B[3][8] + -B[3][9])
	M14 = (A[0][0] + A[0][1] + A[2][1]) * (B[0][5] + B[0][8] + -B[1][8] + -B[2][8] + -B[3][5] + -B[3][8] + B[4][8] + B[5][8])
	M15 = A[0][0] * (B[0][8] + -B[1][8] + -B[2][8] + -B[3][8] + B[4][8] + B[5][8])
	M16 = (A[0][0] + A[0][1] + A[2][1] + -A[2][2]) * (B[0][6] + B[2][8] + -B[3][6] + -B[5][8])
	M17 = A[2][1] * (B[1][5] + -B[4][5])
	M18 = A[2][0] * (B[0][5] + -B[3][5])
	M19 = (A[2][1] + -A[2][2]) * (B[1][6] + B[1][7] + -B[4][6] + -B[4][7])
	M20 = (A[1][0] + -A[2][0] + -A[2][2]) * (B[0][6] + -B[1][6] + -B[1][7] + -B[2][6] + -B[2][7] + -B[3][6] + B[4][6] + B[4][7] + B[5][6] + B[5][7])
	M21 = (A[0][0] + A[0][2] + A[1][2]) * (B[0][7] + B[0][8] + -B[1][8] + -B[2][8] + -B[3][7] + -B[3][8] + B[4][8] + B[5][8])
	M22 = (A[0][1] + A[2][1] + -A[2][2]) * (B[0][6] + -B[1][6] + -B[1][7] + -B[2][6] + -B[3][6] + B[4][6] + B[4][7] + B[5][6])
	M23 = (A[0][1] + A[2][1]) * (2*B[0][5] + -B[0][6] + 2*B[0][8] + -2*B[1][5] + B[1][6] + -2*B[1][8] + B[2][6] + -2*B[2][8] + -2*B[3][5] + B[3][6] + -2*B[3][8] + 2*B[4][5] + -B[4][6] + 2*B[4][8] + -B[5][6] + 2*B[5][8])
	M24 = (A[1][0] + -A[2][0]) * (B[0][6] + B[0][7] + -B[1][6] + -B[1][7] + -B[2][6] + -B[2][7] + -B[3][6] + -B[3][7] + B[4][6] + B[4][7] + B[5][6] + B[5][7])
	M25 = (A[0][0] + A[0][1] + A[2][0] + A[2][1]) * (B[0][5] + B[0][6] + B[0][8] + -B[3][5] + -B[3][6] + -B[3][8])
	M26 = (A[2][0] + A[2][2]) * (B[0][6] + -B[3][6])
	M27 = (A[1][0] + A[1][2] + -A[2][0] + -A[2][2]) * (B[2][5] + B[2][6] + B[2][7] + B[2][9] + -B[5][5] + -B[5][6] + -B[5][7] + -B[5][9])
	M28 = A[1][0] * (B[0][7] + -B[3][7])
	M29 = (A[0][1] + A[2][1]) * (B[0][5] + B[0][8] + -B[1][5] + -B[1][8] + -B[2][8] + -B[3][5] + -B[3][8] + B[4][5] + B[4][8] + B[5][8])
	M30 = (A[0][2] + A[1][2]) * (B[0][7] + B[0][8] + -B[1][8] + -B[2][7] + -B[2][8] + -B[3][7] + -B[3][8] + B[4][8] + B[5][7] + B[5][8])
	M31 = A[1][2] * (B[2][7] + -B[5][7])
	M32 = (A[0][1] + -A[0][2] + A[2][1] + -A[2][2]) * (B[2][6] + B[2][8] + -B[5][6] + -B[5][8])
	M33 = (A[0][0] + A[0][2]) * (B[2][8] + -B[5][8])
	M34 = A[0][1] * (B[1][7] + -B[4][7])
	M35 = A[1][1] * (B[1][7] + -B[4][7])
	M36 = (-A[1][1] + -A[1][4]) * (B[4][7] + -B[4][8] + -B[4][9])
	M37 = (-A[1][1] + -A[1][4] + -A[2][1] + -A[2][4] + -A[2][6]) * (B[4][9] + -B[6][7])
	M38 = (-A[1][0] + -A[1][3]) * (B[3][7] + -B[3][8] + -B[3][9])
	M39 = (A[0][0] + A[0][3] + A[0][6] + -A[1][0] + -A[1][3]) * (-B[3][9] + B[6][7])
	M40 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[1][0] + -A[1][3]) * (B[3][8] + B[5][7])
	M41 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[1][0] + A[1][1] + A[1][2] + -A[1][3] + A[1][4] + A[1][5] + A[2][1] + A[2][2] + A[2][4] + A[2][5]) * -B[5][7]
	M42 = (A[0][0] + A[0][3] + A[0][6] + -A[1][0] + -A[1][1] + -A[1][3] + -A[1][4] + -A[1][6] + -A[2][1] + -A[2][4] + -A[2][6]) * -B[6][7]
	M43 = (-A[0][1] + -A[0][4]) * (-B[3][6] + -B[4][6] + B[4][8] + B[4][9])
	M44 = (-A[0][1] + -A[0][4] + A[2][1] + A[2][4] + A[2][6]) * (B[4][9] + -B[6][6] + B[6][8])
	M45 = (A[0][0] + -A[0][1] + A[0][3] + -A[0][4] + -A[1][0] + -A[1][3]) * (-B[3][6] + -B[4][6] + -B[4][7] + B[4][8] + B[4][9])
	M46 = (-A[0][1] + -A[0][4] + A[2][0] + A[2][3]) * (-B[3][6] + -B[4][5])
	M47 = (A[2][0] + A[2][3]) * (B[3][5] + -B[3][8] + -B[3][9] + B[4][5])
	M48 = (-A[1][1] + -A[1][4] + A[2][0] + -A[2][1] + A[2][3] + -A[2][4]) * (B[3][5] + B[3][7] + -B[3][8] + -B[3][9] + B[4][5])
	M49 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[2][0] + -A[2][3]) * (B[3][8] + B[5][5] + -B[5][9])
	M50 = (A[2][1] + A[2][4] + A[2][6]) * B[4][9]
	M51 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5]) * B[3][8]
	M52 = (A[0][0] + A[0][3] + A[0][6]) * -B[3][9]
	M53 = (A[0][0] + A[0][3] + A[0][6] + -A[2][0] + -A[2][3]) * (-B[3][9] + -B[5][9] + B[6][5])
	M54 = (-A[1][1] + -A[1][4] + -A[2][1] + -A[2][2] + -A[2][4] + -A[2][5]) * (B[4][8] + -B[5][7])
	M55 = (-A[0][1] + -A[0][4] + A[2][1] + A[2][2] + A[2][4] + A[2][5]) * (B[4][8] + -B[5][6] + -B[6][8])
	M56 = (-A[0][1] + -A[0][4] + -A[0][6] + A[2][1] + A[2][4] + A[2][6]) * (B[6][6] + -B[6][8])
	M57 = (-A[0][1] + -A[0][4] + -A[0][6] + A[1][2] + A[1][5] + -A[1][6] + A[2][1] + A[2][4] + A[2][6]) * (B[5][6] + B[6][8])
	M58 = (A[1][2] + A[1][5] + -A[1][6]) * -B[5][9]
	M59 = (-A[1][1] + -A[1][4] + -A[2][1] + -A[2][4]) * (B[3][5] + B[3][7] + -B[3][8] + -B[3][9] + B[4][5] + B[4][7] + -B[5][7] + -B[6][7])
	M60 = (-A[1][0] + A[1][1] + -A[1][3] + A[1][4] + -A[2][0] + A[2][1] + -A[2][3] + A[2][4]) * (B[3][5] + B[3][7] + -B[3][8] + -B[3][9])
	M61 = (-A[0][1] + -A[0][4] + A[2][1] + A[2][4]) * (-B[4][5] + B[4][6] + -B[5][6] + -B[6][6])
	M62 = (A[0][0] + A[0][3] + -A[1][0] + -A[1][3]) * (-B[3][6] + -B[3][7] + -B[4][6] + -B[4][7] + B[4][8] + B[4][9] + -B[5][7] + B[6][7])
	M63 = (-A[0][1] + -A[0][4] + -A[0][6] + -A[1][6] + A[2][1] + A[2][4] + A[2][6]) * (B[4][6] + B[4][7] + -B[4][8] + -B[4][9] + B[5][6] + B[6][6])
	M64 = (A[0][0] + -A[0][1] + A[0][3] + -A[0][4]) * -B[3][6]
	M65 = (A[2][2] + A[2][5]) * (B[4][8] + B[5][5] + -B[5][8] + -B[5][9] + -B[6][8])
	M66 = (A[0][0] + A[0][3] + -A[2][0] + -A[2][3]) * (B[3][5] + -B[3][6] + B[5][5] + -B[6][5])
	M67 = (A[1][2] + A[1][5] + -A[1][6] + -A[2][2] + -A[2][5] + A[2][6]) * -B[6][8]
	M68 = A[2][6] * (B[4][9] + B[6][5] + -B[6][9])
	M69 = (A[0][2] + A[0][5]) * (B[3][8] + -B[5][6] + B[5][8])
	M70 = A[0][6] * (-B[3][9] + -B[5][9] + -B[6][6] + B[6][8] + B[6][9])
	M71 = (A[2][1] + A[2][2] + A[2][4] + A[2][5]) * B[4][8]
	M72 = (A[2][2] + A[2][5] + -A[2][6]) * -B[6][8]
	M73 = (2*A[0][0] + -A[0][2] + 2*A[0][3] + -A[0][5] + A[0][6] + -A[1][2] + -A[1][5] + A[1][6] + -2*A[2][0] + A[2][2] + -2*A[2][3] + A[2][5] + -A[2][6]) * B[6][5]
	M74 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[1][2] + -A[1][5] + A[1][6] + -A[2][0] + A[2][2] + -A[2][3] + A[2][5]) * (-B[5][9] + -B[6][5])
	M75 = (A[0][2] + A[0][5] + -A[0][6] + A[1][2] + A[1][5] + -A[1][6] + -A[2][2] + -A[2][5] + A[2][6]) * B[5][6]
	M76 = (A[1][2] + A[1][5]) * (-B[5][7] + B[5][8] + B[6][8])
	M77 = (A[0][0] + -2*A[0][1] + A[0][3] + -2*A[0][4] + -A[0][6] + -A[1][0] + A[1][1] + -A[1][3] + A[1][4] + -A[1][6] + A[2][1] + A[2][4] + A[2][6]) * (B[4][6] + B[4][7] + -B[4][8] + -B[4][9])
	M78 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[1][2] + -A[1][5] + -A[2][0] + A[2][2] + -A[2][3] + A[2][5]) * (B[5][5] + B[6][5])
	M79 = A[1][6] * (-B[5][9] + B[6][7] + -B[6][9])
	M80 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[2][0] + A[2][2] + -A[2][3] + A[2][5]) * (B[5][5] + -B[5][9])
	M81 = (A[0][2] + A[0][5] + A[0][6] + -A[1][2] + -A[1][5] + A[1][6]) * -B[5][9]
	M82 = (A[2][0] + -A[2][1] + A[2][3] + -A[2][4]) * -B[4][5]
	M83 = (-A[1][1] + -A[1][4] + A[4][4]) * (B[1][2] + -B[1][3] + -B[1][4] + -B[1][7] + B[1][8] + B[1][9] + B[4][7] + -B[4][8] + -B[4][9])
	M84 = (-A[1][1] + -A[1][4] + -A[2][1] + -A[2][4] + -A[2][6] + A[4][4] + A[5][4] + A[5][6]) * (B[1][4] + -B[1][9] + B[4][9] + -B[6][7])
	M85 = (-A[1][0] + -A[1][3] + A[4][3]) * (B[0][2] + -B[0][3] + -B[0][4] + -B[0][7] + B[0][8] + B[0][9] + B[3][7] + -B[3][8] + -B[3][9])
	M86 = (A[0][0] + A[0][3] + A[0][6] + -A[1][0] + -A[1][3] + -A[3][3] + -A[3][6] + A[4][3]) * (-B[0][4] + B[0][9] + -B[3][9] + B[6][7])
	M87 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[1][0] + -A[1][3] + -A[3][3] + A[3][5] + A[4][3]) * (B[0][3] + -B[0][8] + B[2][2] + -B[2][7] + B[3][8] + B[5][7])
	M88 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[1][0] + A[1][1] + A[1][2] + -A[1][3] + A[1][4] + A[1][5] + A[2][1] + A[2][2] + A[2][4] + A[2][5] + -A[3][3] + A[3][5] + A[4][3] + -A[4][4] + -A[4][5] + -A[5][4] + -A[5][5]) * (-B[2][2] + B[2][7] + -B[5][7])
	M89 = (A[0][0] + A[0][3] + A[0][6] + -A[1][0] + -A[1][1] + -A[1][3] + -A[1][4] + -A[1][6] + -A[2][1] + -A[2][4] + -A[2][6] + -A[3][3] + -A[3][6] + A[4][3] + A[4][4] + A[4][6] + A[5][4] + A[5][6]) * -B[6][7]
	M90 = (-A[0][1] + -A[0][4] + A[3][4]) * (-B[0][1] + B[0][6] + -B[1][1] + B[1][3] + B[1][4] + B[1][6] + -B[1][8] + -B[1][9] + -B[3][6] + -B[4][6] + B[4][8] + B[4][9])
	M91 = (-A[0][1] + -A[0][4] + A[2][1] + A[2][4] + A[2][6] + A[3][4] + -A[5][4] + -A[5][6]) * (B[1][4] + -B[1][9] + B[4][9] + -B[6][6] + B[6][8])
	M92 = (A[0][0] + -A[0][1] + A[0][3] + -A[0][4] + -A[1][0] + -A[1][3] + -A[3][3] + A[3][4] + A[4][3]) * (-B[0][1] + B[0][6] + -B[1][1] + -B[1][2] + B[1][3] + B[1][4] + B[1][6] + B[1][7] + -B[1][8] + -B[1][9] + -B[3][6] + -B[4][6] + -B[4][7] + B[4][8] + B[4][9])
	M93 = (-A[0][1] + -A[0][4] + A[2][0] + A[2][3] + A[3][4] + -A[5][3]) * (-B[0][1] + B[0][6] + -B[1][0] + B[1][5] + -B[3][6] + -B[4][5])
	M94 = (A[2][0] + A[2][3] + -A[5][3]) * (B[0][0] + -B[0][3] + -B[0][4] + -B[0][5] + B[0][8] + B[0][9] + B[1][0] + -B[1][5] + B[3][5] + -B[3][8] + -B[3][9] + B[4][5])
	M95 = (-A[1][1] + -A[1][4] + A[2][0] + -A[2][1] + A[2][3] + -A[2][4] + A[4][4] + -A[5][3] + A[5][4]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][5] + -B[0][7] + B[0][8] + B[0][9] + B[1][0] + -B[1][5] + B[3][5] + B[3][7] + -B[3][8] + -B[3][9] + B[4][5])
	M96 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[2][0] + -A[2][3] + -A[3][3] + A[3][5] + A[5][3]) * (B[0][3] + -B[0][8] + B[2][0] + -B[2][4] + -B[2][5] + B[2][9] + B[3][8] + B[5][5] + -B[5][9])
	M97 = (A[2][1] + A[2][4] + A[2][6] + -A[5][4] + -A[5][6]) * (B[1][4] + -B[1][9] + B[4][9])
	M98 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[3][3] + A[3][5]) * (B[0][3] + -B[0][8] + B[3][8])
	M99 = (A[0][0] + A[0][3] + A[0][6] + -A[3][3] + -A[3][6]) * (-B[0][4] + B[0][9] + -B[3][9])
	M100 = (A[0][0] + A[0][3] + A[0][6] + -A[2][0] + -A[2][3] + -A[3][3] + -A[3][6] + A[5][3]) * (-B[0][4] + B[0][9] + -B[2][4] + B[2][9] + -B[3][9] + -B[5][9] + B[6][5])
	M101 = (-A[1][1] + -A[1][4] + -A[2][1] + -A[2][2] + -A[2][4] + -A[2][5] + A[4][4] + A[5][4] + A[5][5]) * (B[1][3] + -B[1][8] + -B[2][2] + B[2][7] + B[4][8] + -B[5][7])
	M102 = (-A[0][1] + -A[0][4] + A[2][1] + A[2][2] + A[2][4] + A[2][5] + A[3][4] + -A[5][4] + -A[5][5]) * (B[1][3] + -B[1][8] + -B[2][1] + B[2][6] + B[4][8] + -B[5][6] + -B[6][8])
	M103 = (-A[0][1] + -A[0][4] + -A[0][6] + A[2][1] + A[2][4] + A[2][6] + A[3][4] + A[3][6] + -A[5][4] + -A[5][6]) * (B[6][6] + -B[6][8])
	M104 = (-A[0][1] + -A[0][4] + -A[0][6] + A[1][2] + A[1][5] + -A[1][6] + A[2][1] + A[2][4] + A[2][6] + A[3][4] + A[3][6] + -A[4][5] + A[4][6] + -A[5][4] + -A[5][6]) * (B[2][1] + -B[2][6] + B[5][6] + B[6][8])
	M105 = (A[1][2] + A[1][5] + -A[1][6] + -A[4][5] + A[4][6]) * (-B[2][4] + B[2][9] + -B[5][9])
	M106 = (-A[1][1] + -A[1][4] + -A[2][1] + -A[2][4] + A[4][4] + A[5][4]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][5] + -B[0][7] + B[0][8] + B[0][9] + B[1][0] + B[1][2] + -B[1][5] + -B[1][7] + -B[2][2] + B[2][7] + B[3][5] + B[3][7] + -B[3][8] + -B[3][9] + B[4][5] + B[4][7] + -B[5][7] + -B[6][7])
	M107 = (-A[1][0] + A[1][1] + -A[1][3] + A[1][4] + -A[2][0] + A[2][1] + -A[2][3] + A[2][4] + A[4][3] + -A[4][4] + A[5][3] + -A[5][4]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][5] + -B[0][7] + B[0][8] + B[0][9] + B[3][5] + B[3][7] + -B[3][8] + -B[3][9])
	M108 = (-A[0][1] + -A[0][4] + A[2][1] + A[2][4] + A[3][4] + -A[5][4]) * (-B[1][0] + B[1][1] + B[1][5] + -B[1][6] + -B[2][1] + B[2][6] + -B[4][5] + B[4][6] + -B[5][6] + -B[6][6])
	M109 = (A[0][0] + A[0][3] + -A[1][0] + -A[1][3] + -A[3][3] + A[4][3]) * (-B[0][1] + -B[0][2] + B[0][6] + B[0][7] + -B[1][1] + -B[1][2] + B[1][3] + B[1][4] + B[1][6] + B[1][7] + -B[1][8] + -B[1][9] + -B[2][2] + B[2][7] + -B[3][6] + -B[3][7] + -B[4][6] + -B[4][7] + B[4][8] + B[4][9] + -B[5][7] + B[6][7])
	M110 = (-A[0][1] + -A[0][4] + -A[0][6] + -A[1][6] + A[2][1] + A[2][4] + A[2][6] + A[3][4] + A[3][6] + A[4][6] + -A[5][4] + -A[5][6]) * (B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + -B[1][6] + -B[1][7] + B[1][8] + B[1][9] + B[2][1] + -B[2][6] + B[4][6] + B[4][7] + -B[4][8] + -B[4][9] + B[5][6] + B[6][6])
	M111 = (A[0][0] + -A[0][1] + A[0][3] + -A[0][4] + -A[3][3] + A[3][4]) * (-B[0][1] + B[0][6] + -B[3][6])
	M112 = (A[2][2] + A[2][5] + -A[5][5]) * (B[1][3] + -B[1][8] + B[2][0] + -B[2][3] + -B[2][4] + -B[2][5] + B[2][8] + B[2][9] + B[4][8] + B[5][5] + -B[5][8] + -B[5][9] + -B[6][8])
	M113 = (A[0][0] + A[0][3] + -A[2][0] + -A[2][3] + -A[3][3] + A[5][3]) * (B[0][0] + -B[0][1] + -B[0][5] + B[0][6] + B[2][0] + -B[2][5] + B[3][5] + -B[3][6] + B[5][5] + -B[6][5])
	M114 = (A[1][2] + A[1][5] + -A[1][6] + -A[2][2] + -A[2][5] + A[2][6] + -A[4][5] + A[4][6] + A[5][5] + -A[5][6]) * -B[6][8]
	M115 = (A[2][6] + -A[5][6]) * (B[1][4] + -B[1][9] + B[4][9] + B[6][5] + -B[6][9])
	M116 = (A[0][2] + A[0][5] + -A[3][5]) * (B[0][3] + -B[0][8] + -B[2][1] + B[2][3] + B[2][6] + -B[2][8] + B[3][8] + -B[5][6] + B[5][8])
	M117 = (A[0][6] + -A[3][6]) * (-B[0][4] + B[0][9] + -B[2][4] + B[2][9] + -B[3][9] + -B[5][9] + -B[6][6] + B[6][8] + B[6][9])
	M118 = (A[2][1] + A[2][2] + A[2][4] + A[2][5] + -A[5][4] + -A[5][5]) * (B[1][3] + -B[1][8] + B[4][8])
	M119 = (A[2][2] + A[2][5] + -A[2][6] + -A[5][5] + A[5][6]) * -B[6][8]
	M120 = (2*A[0][0] + -A[0][2] + 2*A[0][3] + -A[0][5] + A[0][6] + -A[1][2] + -A[1][5] + A[1][6] + -2*A[2][0] + A[2][2] + -2*A[2][3] + A[2][5] + -A[2][6] + -2*A[3][3] + A[3][5] + -A[3][6] + A[4][5] + -A[4][6] + 2*A[5][3] + -A[5][5] + A[5][6]) * B[6][5]
	M121 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[1][2] + -A[1][5] + A[1][6] + -A[2][0] + A[2][2] + -A[2][3] + A[2][5] + -A[3][3] + A[3][5] + A[4][5] + -A[4][6] + A[5][3] + -A[5][5]) * (-B[2][4] + B[2][9] + -B[5][9] + -B[6][5])
	M122 = (A[0][2] + A[0][5] + -A[0][6] + A[1][2] + A[1][5] + -A[1][6] + -A[2][2] + -A[2][5] + A[2][6] + -A[3][5] + A[3][6] + -A[4][5] + A[4][6] + A[5][5] + -A[5][6]) * (B[2][1] + -B[2][6] + B[5][6])
	M123 = (A[1][2] + A[1][5] + -A[4][5]) * (-B[2][2] + B[2][3] + B[2][7] + -B[2][8] + -B[5][7] + B[5][8] + B[6][8])
	M124 = (A[0][0] + -2*A[0][1] + A[0][3] + -2*A[0][4] + -A[0][6] + -A[1][0] + A[1][1] + -A[1][3] + A[1][4] + -A[1][6] + A[2][1] + A[2][4] + A[2][6] + -A[3][3] + 2*A[3][4] + A[3][6] + A[4][3] + -A[4][4] + A[4][6] + -A[5][4] + -A[5][6]) * (B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + -B[1][6] + -B[1][7] + B[1][8] + B[1][9] + B[4][6] + B[4][7] + -B[4][8] + -B[4][9])
	M125 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[1][2] + -A[1][5] + -A[2][0] + A[2][2] + -A[2][3] + A[2][5] + -A[3][3] + A[3][5] + A[4][5] + A[5][3] + -A[5][5]) * (B[2][0] + -B[2][5] + B[5][5] + B[6][5])
	M126 = (A[1][6] + -A[4][6]) * (-B[2][4] + B[2][9] + -B[5][9] + B[6][7] + -B[6][9])
	M127 = (A[0][0] + -A[0][2] + A[0][3] + -A[0][5] + -A[2][0] + A[2][2] + -A[2][3] + A[2][5] + -A[3][3] + A[3][5] + A[5][3] + -A[5][5]) * (B[2][0] + -B[2][4] + -B[2][5] + B[2][9] + B[5][5] + -B[5][9])
	M128 = (A[0][2] + A[0][5] + A[0][6] + -A[1][2] + -A[1][5] + A[1][6] + -A[3][5] + -A[3][6] + A[4][5] + -A[4][6]) * (-B[2][4] + B[2][9] + -B[5][9])
	M129 = (A[2][0] + -A[2][1] + A[2][3] + -A[2][4] + -A[5][3] + A[5][4]) * (-B[1][0] + B[1][5] + -B[4][5])
	M130 = (A[2][2] + A[2][5] + -A[5][2] + -A[5][5]) * (B[2][0] + -B[2][5])
	M131 = (A[0][2] + A[0][5] + A[1][2] + A[1][5] + -A[3][2] + -A[3][5] + -A[4][2] + -A[4][5]) * (B[0][4] + -B[0][9] + -B[1][4] + B[1][9] + -B[2][4] + B[2][9])
	M132 = (A[0][2] + A[0][5] + -A[1][1] + A[1][2] + -A[1][4] + A[1][5] + -A[3][2] + -A[3][5] + A[4][1] + -A[4][2] + A[4][4] + -A[4][5]) * (B[0][4] + -B[0][9] + -B[1][4] + B[1][9] + -B[2][0] + -B[2][4] + B[2][5] + B[2][9])
	M133 = (A[0][0] + A[0][2] + A[0][3] + A[0][5] + -A[1][1] + A[1][2] + -A[1][4] + A[1][5] + -A[3][0] + -A[3][2] + -A[3][3] + -A[3][5] + A[4][1] + -A[4][2] + A[4][4] + -A[4][5]) * (B[0][4] + -B[0][9] + B[1][3] + -B[1][8])
	M134 = (A[1][0] + A[1][1] + A[1][3] + A[1][4] + -A[2][0] + -A[2][3] + -A[4][0] + -A[4][1] + -A[4][3] + -A[4][4] + A[5][0] + A[5][3]) * (B[0][4] + -B[0][9] + -B[1][0] + -B[1][4] + B[1][5] + B[1][9] + -B[2][0] + -B[2][4] + B[2][5] + B[2][9])
	M135 = (A[1][0] + A[1][3] + -A[2][0] + -A[2][3] + -A[4][0] + -A[4][3] + A[5][0] + A[5][3]) * (B[0][0] + B[0][4] + -B[0][5] + -B[0][9] + -B[1][0] + -B[1][4] + B[1][5] + B[1][9] + -B[2][0] + -B[2][4] + B[2][5] + B[2][9])
	M136 = (A[1][1] + -A[1][2] + A[1][4] + -A[1][5] + -A[4][1] + A[4][2] + -A[4][4] + A[4][5]) * (B[2][0] + B[2][4] + -B[2][5] + -B[2][9])
	M137 = (A[1][0] + A[1][1] + A[1][3] + A[1][4] + -A[2][0] + -A[2][2] + -A[2][3] + -A[2][5] + -A[4][0] + -A[4][1] + -A[4][3] + -A[4][4] + A[5][0] + A[5][2] + A[5][3] + A[5][5]) * (B[1][1] + B[1][2] + -B[1][6] + -B[1][7] + -B[2][0] + -B[2][4] + B[2][5] + B[2][9])
	M138 = (A[0][2] + A[0][5] + -A[3][2] + -A[3][5]) * (B[2][0] + -B[2][5])
	M139 = (A[1][0] + A[1][1] + A[1][3] + A[1][4] + -A[2][0] + -A[2][1] + -A[2][3] + -A[2][4] + -A[4][0] + -A[4][1] + -A[4][3] + -A[4][4] + A[5][0] + A[5][1] + A[5][3] + A[5][4]) * (B[1][0] + B[1][1] + B[1][2] + B[1][4] + -B[1][5] + -B[1][6] + -B[1][7] + -B[1][9])
	M140 = (A[0][1] + -A[0][2] + A[0][4] + -A[0][5] + A[1][1] + -A[1][2] + A[1][4] + -A[1][5] + -A[3][1] + A[3][2] + -A[3][4] + A[3][5] + -A[4][1] + A[4][2] + -A[4][4] + A[4][5]) * (B[1][3] + B[1][4] + -B[1][8] + -B[1][9])
	M141 = (A[0][0] + A[0][1] + A[0][3] + A[0][4] + -A[3][0] + -A[3][1] + -A[3][3] + -A[3][4]) * (B[1][3] + -B[1][8])
	M142 = (A[1][0] + A[1][1] + A[1][3] + A[1][4] + -A[4][0] + -A[4][1] + -A[4][3] + -A[4][4]) * (B[0][4] + -B[0][9])
	M143 = (A[0][0] + A[0][2] + A[0][3] + A[0][5] + A[1][0] + A[1][2] + A[1][3] + A[1][5] + -A[3][0] + -A[3][2] + -A[3][3] + -A[3][5] + -A[4][0] + -A[4][2] + -A[4][3] + -A[4][5]) * (B[0][2] + B[0][3] + B[0][4] + -B[0][7] + -B[0][8] + -B[0][9])
	M144 = (A[0][0] + A[0][1] + A[0][3] + A[0][4] + A[2][1] + A[2][4] + -A[3][0] + -A[3][1] + -A[3][3] + -A[3][4] + -A[5][1] + -A[5][4]) * (B[0][0] + B[0][3] + -B[0][5] + -B[0][8] + -B[1][3] + B[1][8] + -B[2][3] + B[2][8])
	M145 = (A[0][0] + A[0][3] + -A[3][0] + -A[3][3]) * (B[0][3] + -B[0][8] + -B[1][3] + B[1][8] + -B[2][3] + B[2][8])
	M146 = (A[0][0] + A[0][1] + A[0][3] + A[0][4] + A[2][1] + -A[2][2] + A[2][4] + -A[2][5] + -A[3][0] + -A[3][1] + -A[3][3] + -A[3][4] + -A[5][1] + A[5][2] + -A[5][4] + A[5][5]) * (B[0][1] + -B[0][6] + B[2][3] + -B[2][8])
	M147 = (A[2][1] + A[2][4] + -A[5][1] + -A[5][4]) * (B[1][0] + -B[1][5])
	M148 = (A[2][0] + A[2][3] + -A[5][0] + -A[5][3]) * (B[0][0] + -B[0][5])
	M149 = (A[2][1] + -A[2][2] + A[2][4] + -A[2][5] + -A[5][1] + A[5][2] + -A[5][4] + A[5][5]) * (B[1][1] + B[1][2] + -B[1][6] + -B[1][7])
	M150 = (A[1][0] + A[1][3] + -A[2][0] + -A[2][2] + -A[2][3] + -A[2][5] + -A[4][0] + -A[4][3] + A[5][0] + A[5][2] + A[5][3] + A[5][5]) * (B[0][1] + -B[0][6] + -B[1][1] + -B[1][2] + B[1][6] + B[1][7] + -B[2][1] + -B[2][2] + B[2][6] + B[2][7])
	M151 = (A[0][0] + A[0][2] + A[0][3] + A[0][5] + A[1][2] + A[1][5] + -A[3][0] + -A[3][2] + -A[3][3] + -A[3][5] + -A[4][2] + -A[4][5]) * (B[0][2] + B[0][3] + -B[0][7] + -B[0][8] + -B[1][3] + B[1][8] + -B[2][3] + B[2][8])
	M152 = (A[0][1] + A[0][4] + A[2][1] + -A[2][2] + A[2][4] + -A[2][5] + -A[3][1] + -A[3][4] + -A[5][1] + A[5][2] + -A[5][4] + A[5][5]) * (B[0][1] + -B[0][6] + -B[1][1] + -B[1][2] + B[1][6] + B[1][7] + -B[2][1] + B[2][6])
	M153 = (A[0][1] + A[0][4] + A[2][1] + A[2][4] + -A[3][1] + -A[3][4] + -A[5][1] + -A[5][4]) * (2*B[0][0] + -B[0][1] + 2*B[0][3] + -2*B[0][5] + B[0][6] + -2*B[0][8] + -2*B[1][0] + B[1][1] + -2*B[1][3] + 2*B[1][5] + -B[1][6] + 2*B[1][8] + B[2][1] + -2*B[2][3] + -B[2][6] + 2*B[2][8])
	M154 = (A[1][0] + A[1][3] + -A[2][0] + -A[2][3] + -A[4][0] + -A[4][3] + A[5][0] + A[5][3]) * (B[0][1] + B[0][2] + -B[0][6] + -B[0][7] + -B[1][1] + -B[1][2] + B[1][6] + B[1][7] + -B[2][1] + -B[2][2] + B[2][6] + B[2][7])
	M155 = (A[0][0] + A[0][1] + A[0][3] + A[0][4] + A[2][0] + A[2][1] + A[2][3] + A[2][4] + -A[3][0] + -A[3][1] + -A[3][3] + -A[3][4] + -A[5][0] + -A[5][1] + -A[5][3] + -A[5][4]) * (B[0][0] + B[0][1] + B[0][3] + -B[0][5] + -B[0][6] + -B[0][8])
	M156 = (A[2][0] + A[2][2] + A[2][3] + A[2][5] + -A[5][0] + -A[5][2] + -A[5][3] + -A[5][5]) * (B[0][1] + -B[0][6])
	M157 = (A[1][0] + A[1][2] + A[1][3] + A[1][5] + -A[2][0] + -A[2][2] + -A[2][3] + -A[2][5] + -A[4][0] + -A[4][2] + -A[4][3] + -A[4][5] + A[5][0] + A[5][2] + A[5][3] + A[5][5]) * (B[2][0] + B[2][1] + B[2][2] + B[2][4] + -B[2][5] + -B[2][6] + -B[2][7] + -B[2][9])
	M158 = (A[1][0] + A[1][3] + -A[4][0] + -A[4][3]) * (B[0][2] + -B[0][7])
	M159 = (A[0][1] + A[0][4] + A[2][1] + A[2][4] + -A[3][1] + -A[3][4] + -A[5][1] + -A[5][4]) * (B[0][0] + B[0][3] + -B[0][5] + -B[0][8] + -B[1][0] + -B[1][3] + B[1][5] + B[1][8] + -B[2][3] + B[2][8])
	M160 = (A[0][2] + A[0][5] + A[1][2] + A[1][5] + -A[3][2] + -A[3][5] + -A[4][2] + -A[4][5]) * (B[0][2] + B[0][3] + -B[0][7] + -B[0][8] + -B[1][3] + B[1][8] + -B[2][2] + -B[2][3] + B[2][7] + B[2][8])
	M161 = (A[1][2] + A[1][5] + -A[4][2] + -A[4][5]) * (B[2][2] + -B[2][7])
	M162 = (A[0][1] + -A[0][2] + A[0][4] + -A[0][5] + A[2][1] + -A[2][2] + A[2][4] + -A[2][5] + -A[3][1] + A[3][2] + -A[3][4] + A[3][5] + -A[5][1] + A[5][2] + -A[5][4] + A[5][5]) * (B[2][1] + B[2][3] + -B[2][6] + -B[2][8])
	M163 = (A[0][0] + A[0][2] + A[0][3] + A[0][5] + -A[3][0] + -A[3][2] + -A[3][3] + -A[3][5]) * (B[2][3] + -B[2][8])
	M164 = (A[0][1] + A[0][4] + -A[3][1] + -A[3][4]) * (B[1][2] + -B[1][7])
	M165 = (A[1][1] + A[1][4] + -A[4][1] + -A[4][4]) * (B[1][2] + -B[1][7])
	M166 = A[5][2] * B[2][0]
	M167 = (A[3][2] + A[4][2]) * (B[0][4] + -B[1][4] + -B[2][4])
	M168 = (A[3][2] + -A[4][1] + A[4][2]) * (B[0][4] + -B[1][4] + -B[2][0] + -B[2][4])
	M169 = (A[3][0] + A[3][2] + -A[4][1] + A[4][2]) * (B[0][4] + B[1][3])
	M170 = (A[4][0] + A[4][1] + -A[5][0]) * (B[0][4] + -B[1][0] + -B[1][4] + -B[2][0] + -B[2][4])
	M171 = (A[4][0] + -A[5][0]) * (B[0][0] + B[0][4] + -B[1][0] + -B[1][4] + -B[2][0] + -B[2][4])
	M172 = (A[4][1] + -A[4][2]) * (B[2][0] + B[2][4])
	M173 = (A[4][0] + A[4][1] + -A[5][0] + -A[5][2]) * (B[1][1] + B[1][2] + -B[2][0] + -B[2][4])
	M174 = A[3][2] * B[2][0]
	M175 = (A[4][0] + A[4][1] + -A[5][0] + -A[5][1]) * (B[1][0] + B[1][1] + B[1][2] + B[1][4])
	M176 = (A[3][1] + -A[3][2] + A[4][1] + -A[4][2]) * (B[1][3] + B[1][4])
	M177 = (A[3][0] + A[3][1]) * B[1][3]
	M178 = (A[4][0] + A[4][1]) * B[0][4]
	M179 = (A[3][0] + A[3][2] + A[4][0] + A[4][2]) * (B[0][2] + B[0][3] + B[0][4])
	M180 = (A[3][0] + A[3][1] + A[5][1]) * (B[0][0] + B[0][3] + -B[1][3] + -B[2][3])
	M181 = A[3][0] * (B[0][3] + -B[1][3] + -B[2][3])
	M182 = (A[3][0] + A[3][1] + A[5][1] + -A[5][2]) * (B[0][1] + B[2][3])
	M183 = A[5][1] * B[1][0]
	M184 = A[5][0] * B[0][0]
	M185 = (A[5][1] + -A[5][2]) * (B[1][1] + B[1][2])
	M186 = (A[4][0] + -A[5][0] + -A[5][2]) * (B[0][1] + -B[1][1] + -B[1][2] + -B[2][1] + -B[2][2])
	M187 = (A[3][0] + A[3][2] + A[4][2]) * (B[0][2] + B[0][3] + -B[1][3] + -B[2][3])
	M188 = (A[3][1] + A[5][1] + -A[5][2]) * (B[0][1] + -B[1][1] + -B[1][2] + -B[2][1])
	M189 = (A[3][1] + A[5][1]) * (2*B[0][0] + -B[0][1] + 2*B[0][3] + -2*B[1][0] + B[1][1] + -2*B[1][3] + B[2][1] + -2*B[2][3])
	M190 = (A[4][0] + -A[5][0]) * (B[0][1] + B[0][2] + -B[1][1] + -B[1][2] + -B[2][1] + -B[2][2])
	M191 = (A[3][0] + A[3][1] + A[5][0] + A[5][1]) * (B[0][0] + B[0][1] + B[0][3])
	M192 = (A[5][0] + A[5][2]) * B[0][1]
	M193 = (A[4][0] + A[4][2] + -A[5][0] + -A[5][2]) * (B[2][0] + B[2][1] + B[2][2] + B[2][4])
	M194 = A[4][0] * B[0][2]
	M195 = (A[3][1] + A[5][1]) * (B[0][0] + B[0][3] + -B[1][0] + -B[1][3] + -B[2][3])
	M196 = (A[3][2] + A[4][2]) * (B[0][2] + B[0][3] + -B[1][3] + -B[2][2] + -B[2][3])
	M197 = A[4][2] * B[2][2]
	M198 = (A[3][1] + -A[3][2] + A[5][1] + -A[5][2]) * (B[2][1] + B[2][3])
	M199 = (A[3][0] + A[3][2]) * B[2][3]
	M200 = A[3][1] * B[1][2]
	M201 = A[4][1] * B[1][2]
	M202 = -A[4][4] * (B[4][2] + -B[4][3] + -B[4][4])
	M203 = (-A[4][4] + -A[5][4] + -A[5][6]) * (B[4][4] + -B[6][2])
	M204 = -A[4][3] * (B[3][2] + -B[3][3] + -B[3][4])
	M205 = (A[3][3] + A[3][6] + -A[4][3]) * (-B[3][4] + B[6][2])
	M206 = (A[3][3] + -A[3][5] + -A[4][3]) * (B[3][3] + B[5][2])
	M207 = (A[3][3] + -A[3][5] + -A[4][3] + A[4][4] + A[4][5] + A[5][4] + A[5][5]) * -B[5][2]
	M208 = (A[3][3] + A[3][6] + -A[4][3] + -A[4][4] + -A[4][6] + -A[5][4] + -A[5][6]) * -B[6][2]
	M209 = -A[3][4] * (-B[3][1] + -B[4][1] + B[4][3] + B[4][4])
	M210 = (-A[3][4] + A[5][4] + A[5][6]) * (B[4][4] + -B[6][1] + B[6][3])
	M211 = (A[3][3] + -A[3][4] + -A[4][3]) * (-B[3][1] + -B[4][1] + -B[4][2] + B[4][3] + B[4][4])
	M212 = (-A[3][4] + A[5][3]) * (-B[3][1] + -B[4][0])
	M213 = A[5][3] * (B[3][0] + -B[3][3] + -B[3][4] + B[4][0])
	M214 = (-A[4][4] + A[5][3] + -A[5][4]) * (B[3][0] + B[3][2] + -B[3][3] + -B[3][4] + B[4][0])
	M215 = (A[3][3] + -A[3][5] + -A[5][3]) * (B[3][3] + B[5][0] + -B[5][4])
	M216 = (A[5][4] + A[5][6]) * B[4][4]
	M217 = (A[3][3] + -A[3][5]) * B[3][3]
	M218 = (A[3][3] + A[3][6]) * -B[3][4]
	M219 = (A[3][3] + A[3][6] + -A[5][3]) * (-B[3][4] + -B[5][4] + B[6][0])
	M220 = (-A[4][4] + -A[5][4] + -A[5][5]) * (B[4][3] + -B[5][2])
	M221 = (-A[3][4] + A[5][4] + A[5][5]) * (B[4][3] + -B[5][1] + -B[6][3])
	M222 = (-A[3][4] + -A[3][6] + A[5][4] + A[5][6]) * (B[6][1] + -B[6][3])
	M223 = (-A[3][4] + -A[3][6] + A[4][5] + -A[4][6] + A[5][4] + A[5][6]) * (B[5][1] + B[6][3])
	M224 = (A[4][5] + -A[4][6]) * -B[5][4]
	M225 = (-A[4][4] + -A[5][4]) * (B[3][0] + B[3][2] + -B[3][3] + -B[3][4] + B[4][0] + B[4][2] + -B[5][2] + -B[6][2])
	M226 = (-A[4][3] + A[4][4] + -A[5][3] + A[5][4]) * (B[3][0] + B[3][2] + -B[3][3] + -B[3][4])
	M227 = (-A[3][4] + A[5][4]) * (-B[4][0] + B[4][1] + -B[5][1] + -B[6][1])
	M228 = (A[3][3] + -A[4][3]) * (-B[3][1] + -B[3][2] + -B[4][1] + -B[4][2] + B[4][3] + B[4][4] + -B[5][2] + B[6][2])
	M229 = (-A[3][4] + -A[3][6] + -A[4][6] + A[5][4] + A[5][6]) * (B[4][1] + B[4][2] + -B[4][3] + -B[4][4] + B[5][1] + B[6][1])
	M230 = (A[3][3] + -A[3][4]) * -B[3][1]
	M231 = A[5][5] * (B[4][3] + B[5][0] + -B[5][3] + -B[5][4] + -B[6][3])
	M232 = (A[3][3] + -A[5][3]) * (B[3][0] + -B[3][1] + B[5][0] + -B[6][0])
	M233 = (A[4][5] + -A[4][6] + -A[5][5] + A[5][6]) * -B[6][3]
	M234 = A[5][6] * (B[4][4] + B[6][0] + -B[6][4])
	M235 = A[3][5] * (B[3][3] + -B[5][1] + B[5][3])
	M236 = A[3][6] * (-B[3][4] + -B[5][4] + -B[6][1] + B[6][3] + B[6][4])
	M237 = (A[5][4] + A[5][5]) * B[4][3]
	M238 = (A[5][5] + -A[5][6]) * -B[6][3]
	M239 = (2*A[3][3] + -A[3][5] + A[3][6] + -A[4][5] + A[4][6] + -2*A[5][3] + A[5][5] + -A[5][6]) * B[6][0]
	M240 = (A[3][3] + -A[3][5] + -A[4][5] + A[4][6] + -A[5][3] + A[5][5]) * (-B[5][4] + -B[6][0])
	M241 = (A[3][5] + -A[3][6] + A[4][5] + -A[4][6] + -A[5][5] + A[5][6]) * B[5][1]
	M242 = A[4][5] * (-B[5][2] + B[5][3] + B[6][3])
	M243 = (A[3][3] + -2*A[3][4] + -A[3][6] + -A[4][3] + A[4][4] + -A[4][6] + A[5][4] + A[5][6]) * (B[4][1] + B[4][2] + -B[4][3] + -B[4][4])
	M244 = (A[3][3] + -A[3][5] + -A[4][5] + -A[5][3] + A[5][5]) * (B[5][0] + B[6][0])
	M245 = A[4][6] * (-B[5][4] + B[6][2] + -B[6][4])
	M246 = (A[3][3] + -A[3][5] + -A[5][3] + A[5][5]) * (B[5][0] + -B[5][4])
	M247 = (A[3][5] + A[3][6] + -A[4][5] + A[4][6]) * -B[5][4]
	M248 = (A[5][3] + -A[5][4]) * -B[4][0]
	M249 = (-A[1][4] + A[4][4]) * (B[1][2] + -B[1][3] + -B[1][4] + -B[1][7] + B[1][8] + B[1][9] + -B[4][2] + B[4][3] + B[4][4] + B[4][7] + -B[4][8] + -B[4][9])
	M250 = (-A[1][4] + -A[2][4] + -A[2][6] + A[4][4] + A[5][4] + A[5][6]) * (B[1][4] + -B[1][9] + -B[4][4] + B[4][9] + B[6][2] + -B[6][7])
	M251 = (-A[1][3] + A[4][3]) * (B[0][2] + -B[0][3] + -B[0][4] + -B[0][7] + B[0][8] + B[0][9] + -B[3][2] + B[3][3] + B[3][4] + B[3][7] + -B[3][8] + -B[3][9])
	M252 = (A[0][3] + A[0][6] + -A[1][3] + -A[3][3] + -A[3][6] + A[4][3]) * (-B[0][4] + B[0][9] + B[3][4] + -B[3][9] + -B[6][2] + B[6][7])
	M253 = (A[0][3] + -A[0][5] + -A[1][3] + -A[3][3] + A[3][5] + A[4][3]) * (B[0][3] + -B[0][8] + B[2][2] + -B[2][7] + -B[3][3] + B[3][8] + -B[5][2] + B[5][7])
	M254 = (A[0][3] + -A[0][5] + -A[1][3] + A[1][4] + A[1][5] + A[2][4] + A[2][5] + -A[3][3] + A[3][5] + A[4][3] + -A[4][4] + -A[4][5] + -A[5][4] + -A[5][5]) * (-B[2][2] + B[2][7] + B[5][2] + -B[5][7])
	M255 = (A[0][3] + A[0][6] + -A[1][3] + -A[1][4] + -A[1][6] + -A[2][4] + -A[2][6] + -A[3][3] + -A[3][6] + A[4][3] + A[4][4] + A[4][6] + A[5][4] + A[5][6]) * (B[6][2] + -B[6][7])
	M256 = (-A[0][4] + A[3][4]) * (-B[0][1] + B[0][6] + -B[1][1] + B[1][3] + B[1][4] + B[1][6] + -B[1][8] + -B[1][9] + B[3][1] + -B[3][6] + B[4][1] + -B[4][3] + -B[4][4] + -B[4][6] + B[4][8] + B[4][9])
	M257 = (-A[0][4] + A[2][4] + A[2][6] + A[3][4] + -A[5][4] + -A[5][6]) * (B[1][4] + -B[1][9] + -B[4][4] + B[4][9] + B[6][1] + -B[6][3] + -B[6][6] + B[6][8])
	M258 = (A[0][3] + -A[0][4] + -A[1][3] + -A[3][3] + A[3][4] + A[4][3]) * (-B[0][1] + B[0][6] + -B[1][1] + -B[1][2] + B[1][3] + B[1][4] + B[1][6] + B[1][7] + -B[1][8] + -B[1][9] + B[3][1] + -B[3][6] + B[4][1] + B[4][2] + -B[4][3] + -B[4][4] + -B[4][6] + -B[4][7] + B[4][8] + B[4][9])
	M259 = (-A[0][4] + A[2][3] + A[3][4] + -A[5][3]) * (-B[0][1] + B[0][6] + -B[1][0] + B[1][5] + B[3][1] + -B[3][6] + B[4][0] + -B[4][5])
	M260 = (A[2][3] + -A[5][3]) * (B[0][0] + -B[0][3] + -B[0][4] + -B[0][5] + B[0][8] + B[0][9] + B[1][0] + -B[1][5] + -B[3][0] + B[3][3] + B[3][4] + B[3][5] + -B[3][8] + -B[3][9] + -B[4][0] + B[4][5])
	M261 = (-A[1][4] + A[2][3] + -A[2][4] + A[4][4] + -A[5][3] + A[5][4]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][5] + -B[0][7] + B[0][8] + B[0][9] + B[1][0] + -B[1][5] + -B[3][0] + -B[3][2] + B[3][3] + B[3][4] + B[3][5] + B[3][7] + -B[3][8] + -B[3][9] + -B[4][0] + B[4][5])
	M262 = (A[0][3] + -A[0][5] + -A[2][3] + -A[3][3] + A[3][5] + A[5][3]) * (B[0][3] + -B[0][8] + B[2][0] + -B[2][4] + -B[2][5] + B[2][9] + -B[3][3] + B[3][8] + -B[5][0] + B[5][4] + B[5][5] + -B[5][9])
	M263 = (A[2][4] + A[2][6] + -A[5][4] + -A[5][6]) * (B[1][4] + -B[1][9] + -B[4][4] + B[4][9])
	M264 = (A[0][3] + -A[0][5] + -A[3][3] + A[3][5]) * (B[0][3] + -B[0][8] + -B[3][3] + B[3][8])
	M265 = (A[0][3] + A[0][6] + -A[3][3] + -A[3][6]) * (-B[0][4] + B[0][9] + B[3][4] + -B[3][9])
	M266 = (A[0][3] + A[0][6] + -A[2][3] + -A[3][3] + -A[3][6] + A[5][3]) * (-B[0][4] + B[0][9] + -B[2][4] + B[2][9] + B[3][4] + -B[3][9] + B[5][4] + -B[5][9] + -B[6][0] + B[6][5])
	M267 = (-A[1][4] + -A[2][4] + -A[2][5] + A[4][4] + A[5][4] + A[5][5]) * (B[1][3] + -B[1][8] + -B[2][2] + B[2][7] + -B[4][3] + B[4][8] + B[5][2] + -B[5][7])
	M268 = (-A[0][4] + A[2][4] + A[2][5] + A[3][4] + -A[5][4] + -A[5][5]) * (B[1][3] + -B[1][8] + -B[2][1] + B[2][6] + -B[4][3] + B[4][8] + B[5][1] + -B[5][6] + B[6][3] + -B[6][8])
	M269 = (-A[0][4] + -A[0][6] + A[2][4] + A[2][6] + A[3][4] + A[3][6] + -A[5][4] + -A[5][6]) * (-B[6][1] + B[6][3] + B[6][6] + -B[6][8])
	M270 = (-A[0][4] + -A[0][6] + A[1][5] + -A[1][6] + A[2][4] + A[2][6] + A[3][4] + A[3][6] + -A[4][5] + A[4][6] + -A[5][4] + -A[5][6]) * (B[2][1] + -B[2][6] + -B[5][1] + B[5][6] + -B[6][3] + B[6][8])
	M271 = (A[1][5] + -A[1][6] + -A[4][5] + A[4][6]) * (-B[2][4] + B[2][9] + B[5][4] + -B[5][9])
	M272 = (-A[1][4] + -A[2][4] + A[4][4] + A[5][4]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][5] + -B[0][7] + B[0][8] + B[0][9] + B[1][0] + B[1][2] + -B[1][5] + -B[1][7] + -B[2][2] + B[2][7] + -B[3][0] + -B[3][2] + B[3][3] + B[3][4] + B[3][5] + B[3][7] + -B[3][8] + -B[3][9] + -B[4][0] + -B[4][2] + B[4][5] + B[4][7] + B[5][2] + -B[5][7] + B[6][2] + -B[6][7])
	M273 = (-A[1][3] + A[1][4] + -A[2][3] + A[2][4] + A[4][3] + -A[4][4] + A[5][3] + -A[5][4]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + -B[0][5] + -B[0][7] + B[0][8] + B[0][9] + -B[3][0] + -B[3][2] + B[3][3] + B[3][4] + B[3][5] + B[3][7] + -B[3][8] + -B[3][9])
	M274 = (-A[0][4] + A[2][4] + A[3][4] + -A[5][4]) * (-B[1][0] + B[1][1] + B[1][5] + -B[1][6] + -B[2][1] + B[2][6] + B[4][0] + -B[4][1] + -B[4][5] + B[4][6] + B[5][1] + -B[5][6] + B[6][1] + -B[6][6])
	M275 = (A[0][3] + -A[1][3] + -A[3][3] + A[4][3]) * (-B[0][1] + -B[0][2] + B[0][6] + B[0][7] + -B[1][1] + -B[1][2] + B[1][3] + B[1][4] + B[1][6] + B[1][7] + -B[1][8] + -B[1][9] + -B[2][2] + B[2][7] + B[3][1] + B[3][2] + -B[3][6] + -B[3][7] + B[4][1] + B[4][2] + -B[4][3] + -B[4][4] + -B[4][6] + -B[4][7] + B[4][8] + B[4][9] + B[5][2] + -B[5][7] + -B[6][2] + B[6][7])
	M276 = (-A[0][4] + -A[0][6] + -A[1][6] + A[2][4] + A[2][6] + A[3][4] + A[3][6] + A[4][6] + -A[5][4] + -A[5][6]) * (B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + -B[1][6] + -B[1][7] + B[1][8] + B[1][9] + B[2][1] + -B[2][6] + -B[4][1] + -B[4][2] + B[4][3] + B[4][4] + B[4][6] + B[4][7] + -B[4][8] + -B[4][9] + -B[5][1] + B[5][6] + -B[6][1] + B[6][6])
	M277 = (A[0][3] + -A[0][4] + -A[3][3] + A[3][4]) * (-B[0][1] + B[0][6] + B[3][1] + -B[3][6])
	M278 = (A[2][5] + -A[5][5]) * (B[1][3] + -B[1][8] + B[2][0] + -B[2][3] + -B[2][4] + -B[2][5] + B[2][8] + B[2][9] + -B[4][3] + B[4][8] + -B[5][0] + B[5][3] + B[5][4] + B[5][5] + -B[5][8] + -B[5][9] + B[6][3] + -B[6][8])
	M279 = (A[0][3] + -A[2][3] + -A[3][3] + A[5][3]) * (B[0][0] + -B[0][1] + -B[0][5] + B[0][6] + B[2][0] + -B[2][5] + -B[3][0] + B[3][1] + B[3][5] + -B[3][6] + -B[5][0] + B[5][5] + B[6][0] + -B[6][5])
	M280 = (A[1][5] + -A[1][6] + -A[2][5] + A[2][6] + -A[4][5] + A[4][6] + A[5][5] + -A[5][6]) * (B[6][3] + -B[6][8])
	M281 = (A[2][6] + -A[5][6]) * (B[1][4] + -B[1][9] + -B[4][4] + B[4][9] + -B[6][0] + B[6][4] + B[6][5] + -B[6][9])
	M282 = (A[0][5] + -A[3][5]) * (B[0][3] + -B[0][8] + -B[2][1] + B[2][3] + B[2][6] + -B[2][8] + -B[3][3] + B[3][8] + B[5][1] + -B[5][3] + -B[5][6] + B[5][8])
	M283 = (A[0][6] + -A[3][6]) * (-B[0][4] + B[0][9] + -B[2][4] + B[2][9] + B[3][4] + -B[3][9] + B[5][4] + -B[5][9] + B[6][1] + -B[6][3] + -B[6][4] + -B[6][6] + B[6][8] + B[6][9])
	M284 = (A[2][4] + A[2][5] + -A[5][4] + -A[5][5]) * (B[1][3] + -B[1][8] + -B[4][3] + B[4][8])
	M285 = (A[2][5] + -A[2][6] + -A[5][5] + A[5][6]) * (B[6][3] + -B[6][8])
	M286 = (2*A[0][3] + -A[0][5] + A[0][6] + -A[1][5] + A[1][6] + -2*A[2][3] + A[2][5] + -A[2][6] + -2*A[3][3] + A[3][5] + -A[3][6] + A[4][5] + -A[4][6] + 2*A[5][3] + -A[5][5] + A[5][6]) * (-B[6][0] + B[6][5])
	M287 = (A[0][3] + -A[0][5] + -A[1][5] + A[1][6] + -A[2][3] + A[2][5] + -A[3][3] + A[3][5] + A[4][5] + -A[4][6] + A[5][3] + -A[5][5]) * (-B[2][4] + B[2][9] + B[5][4] + -B[5][9] + B[6][0] + -B[6][5])
	M288 = (A[0][5] + -A[0][6] + A[1][5] + -A[1][6] + -A[2][5] + A[2][6] + -A[3][5] + A[3][6] + -A[4][5] + A[4][6] + A[5][5] + -A[5][6]) * (B[2][1] + -B[2][6] + -B[5][1] + B[5][6])
	M289 = (A[1][5] + -A[4][5]) * (-B[2][2] + B[2][3] + B[2][7] + -B[2][8] + B[5][2] + -B[5][3] + -B[5][7] + B[5][8] + -B[6][3] + B[6][8])
	M290 = (A[0][3] + -2*A[0][4] + -A[0][6] + -A[1][3] + A[1][4] + -A[1][6] + A[2][4] + A[2][6] + -A[3][3] + 2*A[3][4] + A[3][6] + A[4][3] + -A[4][4] + A[4][6] + -A[5][4] + -A[5][6]) * (B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + -B[1][6] + -B[1][7] + B[1][8] + B[1][9] + -B[4][1] + -B[4][2] + B[4][3] + B[4][4] + B[4][6] + B[4][7] + -B[4][8] + -B[4][9])
	M291 = (A[0][3] + -A[0][5] + -A[1][5] + -A[2][3] + A[2][5] + -A[3][3] + A[3][5] + A[4][5] + A[5][3] + -A[5][5]) * (B[2][0] + -B[2][5] + -B[5][0] + B[5][5] + -B[6][0] + B[6][5])
	M292 = (A[1][6] + -A[4][6]) * (-B[2][4] + B[2][9] + B[5][4] + -B[5][9] + -B[6][2] + B[6][4] + B[6][7] + -B[6][9])
	M293 = (A[0][3] + -A[0][5] + -A[2][3] + A[2][5] + -A[3][3] + A[3][5] + A[5][3] + -A[5][5]) * (B[2][0] + -B[2][4] + -B[2][5] + B[2][9] + -B[5][0] + B[5][4] + B[5][5] + -B[5][9])
	M294 = (A[0][5] + A[0][6] + -A[1][5] + A[1][6] + -A[3][5] + -A[3][6] + A[4][5] + -A[4][6]) * (-B[2][4] + B[2][9] + B[5][4] + -B[5][9])
	M295 = (A[2][3] + -A[2][4] + -A[5][3] + A[5][4]) * (-B[1][0] + B[1][5] + B[4][0] + -B[4][5])

# Assemble result matrix
	C[0][0] = M8 + M14 + -M15 + -M17 + -M29 + M93 + M94 + -M96 + M98 + -M99 + M100 + -M105 + -M111 + M113 + -M128 + M212 + M213 + -M215 + M217 + -M218 + M219 + -M224 + -M230 + M232 + -M247 + -M259 + -M260 + M262 + -M264 + M265 + -M266 + M271 + M277 + -M279 + M294
	C[1][0] = M1 + -M2 + -M4 + M5 + -M8 + M18 + M85 + -M95 + -M105 + -M107 + -M121 + -M125 + M127 + -M129 + M204 + -M214 + -M224 + -M226 + -M240 + -M244 + M246 + -M248 + -M251 + M261 + M271 + M273 + M287 + M291 + -M293 + M295
	C[2][0] = M0 + M17 + M18 + M94 + -M96 + M98 + -M99 + M100 + -2*M105 + -M120 + -M121 + M127 + -M128 + M129 + M213 + -M215 + M217 + -M218 + M219 + -2*M224 + -M239 + -M240 + M246 + -M247 + M248 + -M260 + M262 + -M264 + M265 + -M266 + 2*M271 + M286 + M287 + -M293 + M294 + -M295
	C[3][0] = M174 + M180 + -M181 + -M183 + -M195 + M212 + M213 + -M215 + M217 + -M218 + M219 + -M224 + -M230 + M232 + -M247
	C[4][0] = M167 + -M168 + -M170 + M171 + -M174 + M184 + M204 + -M214 + -M224 + -M226 + -M240 + -M244 + M246 + -M248
	C[5][0] = M166 + M183 + M184 + M213 + -M215 + M217 + -M218 + M219 + -2*M224 + -M239 + -M240 + M246 + -M247 + M248
	C[6][0] = M16 + -M19 + -M22 + -M32 + -M33 + -M34 + M90 + -M91 + M97 + -M102 + -M103 + -M104 + -M111 + -M114 + M118 + M122 + M209 + -M210 + M216 + -M221 + -M222 + -M223 + -M230 + -M233 + M237 + M241 + -M256 + M257 + -M263 + M268 + M269 + M270 + M277 + M280 + -M284 + -M288
	C[7][0] = M6 + M7 + M20 + M26 + M27 + -M31 + -M35 + M83 + M92 + M103 + M104 + -M110 + -M111 + M114 + M119 + M124 + M202 + M211 + M222 + M223 + -M229 + -M230 + M233 + M238 + M243 + -M249 + -M258 + -M269 + -M270 + M276 + M277 + -M280 + -M285 + -M290
	C[8][0] = M19 + M22 + M23 + M26 + -2*M29 + M34 + M90 + -M91 + -M93 + M97 + -M102 + M108 + M118 + M119 + M129 + M209 + -M210 + -M212 + M216 + -M221 + M227 + M237 + M238 + M248 + -M256 + M257 + M259 + -M263 + M268 + -M274 + -M284 + -M285 + -M295
	C[9][0] = M182 + -M185 + -M188 + -M198 + -M199 + -M200 + M209 + -M210 + M216 + -M221 + -M222 + -M223 + -M230 + -M233 + M237 + M241
	C[0][1] = M172 + M173 + M186 + M192 + M193 + -M197 + -M201 + M202 + M211 + M222 + M223 + -M229 + -M230 + M233 + M238 + M243
	C[1][1] = M185 + M188 + M189 + M192 + -2*M195 + M200 + M209 + -M210 + -M212 + M216 + -M221 + M227 + M237 + M238 + M248
	C[2][1] = -M15 + M21 + -M30 + -M31 + M34 + -M85 + M86 + -M87 + -M90 + M92 + M98 + -M99 + -M109 + -M204 + M205 + -M206 + -M209 + M211 + M217 + -M218 + -M228 + M251 + -M252 + M253 + M256 + -M258 + -M264 + M265 + M275
	C[3][1] = M28 + M31 + M35 + -M83 + -M84 + -M85 + M86 + -M87 + -M88 + M89 + -M97 + M98 + -M99 + -M101 + -M118 + -M202 + -M203 + -M204 + M205 + -M206 + -M207 + M208 + -M216 + M217 + -M218 + -M220 + -M237 + M249 + M250 + M251 + -M252 + M253 + M254 + -M255 + M263 + -M264 + M265 + M267 + M284
	C[4][1] = M20 + -M22 + -M23 + -M24 + M28 + 2*M29 + -M34 + M83 + M84 + -M94 + M95 + M97 + M101 + -M106 + M118 + M202 + M203 + -M213 + M214 + M216 + M220 + -M225 + M237 + -M249 + -M250 + M260 + -M261 + -M263 + -M267 + M272 + -M284
	C[5][1] = -M181 + M187 + -M196 + -M197 + M200 + -M204 + M205 + -M206 + -M209 + M211 + M217 + -M218 + -M228
	C[6][1] = M194 + M197 + M201 + -M202 + -M203 + -M204 + M205 + -M206 + -M207 + M208 + -M216 + M217 + -M218 + -M220 + -M237
	C[7][1] = M186 + -M188 + -M189 + -M190 + M194 + 2*M195 + -M200 + M202 + M203 + -M213 + M214 + M216 + M220 + -M225 + M237
	C[8][1] = M11 + M15 + M33 + M98 + -M102 + -M104 + -M114 + M116 + M118 + M122 + M217 + -M221 + -M223 + -M233 + M235 + M237 + M241 + -M264 + M268 + M270 + M280 + -M282 + -M284 + -M288
	C[9][1] = -M3 + -M12 + M13 + -M21 + -M28 + -M33 + -M87 + -M88 + M98 + -M101 + M114 + -M118 + M119 + M123 + -M206 + -M207 + M217 + -M220 + M233 + -M237 + M238 + M242 + M253 + M254 + -M264 + M267 + -M280 + M284 + -M285 + -M289
	C[0][2] = -M11 + -M14 + -M16 + -M18 + M25 + -M26 + -M96 + M98 + -M112 + M118 + M119 + M127 + -M215 + M217 + -M231 + M237 + M238 + M246 + M262 + -M264 + M278 + -M284 + -M285 + -M293
	C[1][2] = M177 + M181 + M199 + M217 + -M221 + -M223 + -M233 + M235 + M237 + M241
	C[2][2] = -M169 + -M178 + M179 + -M187 + -M194 + -M199 + -M206 + -M207 + M217 + -M220 + M233 + -M237 + M238 + M242
	C[3][2] = -M177 + -M180 + -M182 + -M184 + M191 + -M192 + -M215 + M217 + -M231 + M237 + M238 + M246
	C[4][2] = -M2 + M3 + M6 + -M8 + M10 + -M11 + -M91 + M97 + -M99 + -M103 + -M105 + M117 + -M128 + -M210 + M216 + -M218 + -M222 + -M224 + M236 + -M247 + M257 + -M263 + M265 + M269 + M271 + -M283 + M294
	C[5][2] = -M1 + M2 + -M6 + M8 + M12 + -M84 + M86 + M89 + -M97 + -M99 + -M105 + -M126 + -M203 + M205 + M208 + -M216 + -M218 + -M224 + -M245 + M250 + -M252 + -M255 + M263 + M265 + M271 + M292
	C[6][2] = -M0 + -M4 + M7 + -M9 + M12 + -M17 + -M19 + M97 + -M99 + M100 + -2*M105 + -M115 + -M120 + -M121 + -M128 + M216 + -M218 + M219 + -2*M224 + -M234 + -M239 + -M240 + -M247 + -M263 + M265 + -M266 + 2*M271 + M281 + M286 + M287 + M294
	C[7][2] = -M168 + M169 + M172 + -M174 + M176 + -M177 + -M210 + M216 + -M218 + -M222 + -M224 + M236 + -M247
	C[8][2] = -M167 + M168 + -M172 + M174 + M178 + -M203 + M205 + M208 + -M216 + -M218 + -M224 + -M245
	C[9][2] = -M166 + -M170 + M173 + -M175 + M178 + -M183 + -M185 + M216 + -M218 + M219 + -2*M224 + -M234 + -M239 + -M240 + -M247
	C[0][3] = M8 + M14 + -M15 + -M17 + -M29 + M46 + M47 + -M49 + M51 + -M52 + M53 + -M58 + -M64 + M66 + -M81
	C[1][3] = M1 + -M2 + -M4 + M5 + -M8 + M18 + M38 + -M48 + -M58 + -M60 + -M74 + -M78 + M80 + -M82
	C[2][3] = M0 + M17 + M18 + M47 + -M49 + M51 + -M52 + M53 + -2*M58 + -M73 + -M74 + M80 + -M81 + M82
	C[3][3] = M46 + M47 + -M49 + M51 + -M52 + M53 + -M58 + -M64 + M66 + -M81 + -M93 + -M94 + M96 + -M98 + M99 + -M100 + M105 + M111 + -M113 + M128 + M138 + M144 + -M145 + -M147 + -M159 + M174 + M180 + -M181 + -M183 + -M195
	C[4][3] = M38 + -M48 + -M58 + -M60 + -M74 + -M78 + M80 + -M82 + -M85 + M95 + M105 + M107 + M121 + M125 + -M127 + M129 + M131 + -M132 + -M134 + M135 + -M138 + M148 + M167 + -M168 + -M170 + M171 + -M174 + M184
	C[5][3] = M47 + -M49 + M51 + -M52 + M53 + -2*M58 + -M73 + -M74 + M80 + -M81 + M82 + -M94 + M96 + -M98 + M99 + -M100 + 2*M105 + M120 + M121 + -M127 + M128 + -M129 + M130 + M147 + M148 + M166 + M183 + M184
	C[6][3] = M16 + -M19 + -M22 + -M32 + -M33 + -M34 + M43 + -M44 + M50 + -M55 + -M56 + -M57 + -M64 + -M67 + M71 + M75
	C[7][3] = M6 + M7 + M20 + M26 + M27 + -M31 + -M35 + M36 + M45 + M56 + M57 + -M63 + -M64 + M67 + M72 + M77
	C[8][3] = M19 + M22 + M23 + M26 + -2*M29 + M34 + M43 + -M44 + -M46 + M50 + -M55 + M61 + M71 + M72 + M82
	C[9][3] = M43 + -M44 + M50 + -M55 + -M56 + -M57 + -M64 + -M67 + M71 + M75 + -M90 + M91 + -M97 + M102 + M103 + M104 + M111 + M114 + -M118 + -M122 + M146 + -M149 + -M152 + -M162 + -M163 + -M164 + M182 + -M185 + -M188 + -M198 + -M199 + -M200
	C[0][4] = M36 + M45 + M56 + M57 + -M63 + -M64 + M67 + M72 + M77 + -M83 + -M92 + -M103 + -M104 + M110 + M111 + -M114 + -M119 + -M124 + M136 + M137 + M150 + M156 + M157 + -M161 + -M165 + M172 + M173 + M186 + M192 + M193 + -M197 + -M201
	C[1][4] = M43 + -M44 + -M46 + M50 + -M55 + M61 + M71 + M72 + M82 + -M90 + M91 + M93 + -M97 + M102 + -M108 + -M118 + -M119 + -M129 + M149 + M152 + M153 + M156 + -2*M159 + M164 + M185 + M188 + M189 + M192 + -2*M195 + M200
	C[2][4] = -M15 + M21 + -M30 + -M31 + M34 + -M38 + M39 + -M40 + -M43 + M45 + M51 + -M52 + -M62
	C[3][4] = M28 + M31 + M35 + -M36 + -M37 + -M38 + M39 + -M40 + -M41 + M42 + -M50 + M51 + -M52 + -M54 + -M71
	C[4][4] = M20 + -M22 + -M23 + -M24 + M28 + 2*M29 + -M34 + M36 + M37 + -M47 + M48 + M50 + M54 + -M59 + M71
	C[5][4] = -M38 + M39 + -M40 + -M43 + M45 + M51 + -M52 + -M62 + M85 + -M86 + M87 + M90 + -M92 + -M98 + M99 + M109 + -M145 + M151 + -M160 + -M161 + M164 + -M181 + M187 + -M196 + -M197 + M200
	C[6][4] = -M36 + -M37 + -M38 + M39 + -M40 + -M41 + M42 + -M50 + M51 + -M52 + -M54 + -M71 + M83 + M84 + M85 + -M86 + M87 + M88 + -M89 + M97 + -M98 + M99 + M101 + M118 + M158 + M161 + M165 + M194 + M197 + M201
	C[7][4] = M36 + M37 + -M47 + M48 + M50 + M54 + -M59 + M71 + -M83 + -M84 + M94 + -M95 + -M97 + -M101 + M106 + -M118 + M150 + -M152 + -M153 + -M154 + M158 + 2*M159 + -M164 + M186 + -M188 + -M189 + -M190 + M194 + 2*M195 + -M200
	C[8][4] = M11 + M15 + M33 + M51 + -M55 + -M57 + -M67 + M69 + M71 + M75
	C[9][4] = -M3 + -M12 + M13 + -M21 + -M28 + -M33 + -M40 + -M41 + M51 + -M54 + M67 + -M71 + M72 + M76
	C[0][5] = -M11 + -M14 + -M16 + -M18 + M25 + -M26 + -M49 + M51 + -M65 + M71 + M72 + M80
	C[1][5] = M51 + -M55 + -M57 + -M67 + M69 + M71 + M75 + -M98 + M102 + M104 + M114 + -M116 + -M118 + -M122 + M141 + M145 + M163 + M177 + M181 + M199
	C[2][5] = -M40 + -M41 + M51 + -M54 + M67 + -M71 + M72 + M76 + M87 + M88 + -M98 + M101 + -M114 + M118 + -M119 + -M123 + -M133 + -M142 + M143 + -M151 + -M158 + -M163 + -M169 + -M178 + M179 + -M187 + -M194 + -M199
	C[3][5] = -M49 + M51 + -M65 + M71 + M72 + M80 + M96 + -M98 + M112 + -M118 + -M119 + -M127 + -M141 + -M144 + -M146 + -M148 + M155 + -M156 + -M177 + -M180 + -M182 + -M184 + M191 + -M192
	C[4][5] = -M2 + M3 + M6 + -M8 + M10 + -M11 + -M44 + M50 + -M52 + -M56 + -M58 + M70 + -M81
	C[5][5] = -M1 + M2 + -M6 + M8 + M12 + -M37 + M39 + M42 + -M50 + -M52 + -M58 + -M79
	C[6][5] = -M0 + -M4 + M7 + -M9 + M12 + -M17 + -M19 + M50 + -M52 + M53 + -2*M58 + -M68 + -M73 + -M74 + -M81
	C[7][5] = -M44 + M50 + -M52 + -M56 + -M58 + M70 + -M81 + M91 + -M97 + M99 + M103 + M105 + -M117 + M128 + -M132 + M133 + M136 + -M138 + M140 + -M141 + -M168 + M169 + M172 + -M174 + M176 + -M177
	C[8][5] = -M37 + M39 + M42 + -M50 + -M52 + -M58 + -M79 + M84 + -M86 + -M89 + M97 + M99 + M105 + M126 + -M131 + M132 + -M136 + M138 + M142 + -M167 + M168 + -M172 + M174 + M178
	C[9][5] = M50 + -M52 + M53 + -2*M58 + -M68 + -M73 + -M74 + -M81 + -M97 + M99 + -M100 + 2*M105 + M115 + M120 + M121 + M128 + -M130 + -M134 + M137 + -M139 + M142 + -M147 + -M149 + -M166 + -M170 + M173 + -M175 + M178 + -M183 + -M185
	return (C, 296)