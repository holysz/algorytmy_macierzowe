# Matrix multiplication: C = A @ B
# A: 4×4, B: 4×5, C: 4×5
# Using 63 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(4)] for _ in range(5)])
	M0 = A[0][2] * (-B[0][4] + -B[2][4])
	M1 = (-A[0][0] + A[0][2] + -A[3][0]) * (-B[0][4] + B[2][2] + -B[2][4])
	M2 = (-A[0][0] + A[0][2] + -A[2][0]) * (-B[0][4] + -B[2][1] + -B[2][4])
	M3 = (-A[0][0] + A[0][2]) * (-B[0][4] + -B[2][0])
	M4 = (-A[0][0] + A[0][2] + -A[2][0] + A[2][2] + -A[2][3]) * (B[2][0] + B[3][4])
	M5 = A[0][1] * (B[1][0] + -B[1][4])
	M6 = (A[0][1] + A[1][1] + A[1][3]) * (B[1][0] + -B[3][4])
	M7 = (-A[0][0] + -A[0][3] + -A[3][0]) * (-B[0][0] + -B[2][0] + -B[3][2])
	M8 = (-A[0][0] + -A[0][3] + -A[2][0]) * (-B[0][0] + -B[2][0] + B[3][1])
	M9 = (A[1][1] + A[1][3] + A[3][1]) * (B[1][0] + B[3][2])
	M10 = (A[1][1] + A[1][3] + A[2][1]) * (B[1][0] + -B[3][1])
	M11 = (A[1][1] + A[1][3]) * B[1][0]
	M12 = (-A[0][0] + -A[0][3] + -A[1][1] + -A[1][3] + -A[2][0] + -A[2][1] + -A[2][3]) * B[3][1]
	M13 = (-A[0][0] + -A[0][3] + -A[1][1] + -A[1][3] + -A[2][0] + -A[2][1] + -A[2][3] + -A[3][0] + -A[3][1] + -A[3][3]) * (-B[0][0] + B[0][1] + -B[0][2] + -B[2][0])
	M14 = -A[2][3] * (B[2][0] + B[3][0] + -B[3][1])
	M15 = (-A[0][0] + -A[0][1] + A[0][2] + -A[0][3] + -A[1][1] + -A[1][3] + -A[2][0] + A[2][2] + -A[2][3]) * B[3][4]
	M16 = -A[1][0] * (-B[0][0] + -B[0][3] + -B[1][3] + -B[2][0] + -B[2][3])
	M17 = -A[1][3] * (-B[1][0] + B[3][0] + B[3][3])
	M18 = (-A[0][0] + -A[0][3]) * (-B[0][0] + -B[2][0])
	M19 = (-A[0][0] + A[0][2] + -A[2][0] + A[2][1] + A[2][2]) * (-B[2][1] + -B[2][4] + -B[3][4])
	M20 = (A[1][1] + A[2][1]) * (-B[0][0] + B[0][1] + -B[0][3] + B[1][1] + -B[1][3] + -B[2][0] + B[2][1] + -B[2][3] + -B[3][1])
	M21 = -A[2][1] * (B[1][0] + -B[1][1] + -B[1][4] + B[2][1] + B[2][4] + B[3][4])
	M22 = (-A[1][0] + A[1][1] + A[2][1]) * (-B[0][0] + B[0][1] + -B[0][3] + -B[1][3] + -B[2][0] + B[2][1] + -B[2][3])
	M23 = -A[3][1] * (-B[1][0] + -B[1][2] + B[1][4] + B[2][2] + -B[2][4] + -B[3][4])
	M24 = (-A[1][0] + A[1][2] + -A[3][1]) * (B[1][4] + B[2][2] + -B[2][4] + -B[3][4])
	M25 = (-A[0][0] + A[0][2] + -A[3][0] + A[3][1] + A[3][2]) * (B[2][2] + -B[2][4])
	M26 = (-A[1][0] + A[1][2] + -A[2][1]) * (B[1][4] + -B[2][1] + -B[2][4] + -B[3][4])
	M27 = (-A[1][0] + A[1][2]) * (B[1][4] + -B[2][4] + -B[3][4])
	M28 = (A[0][1] + -A[1][0] + A[1][1] + A[1][2]) * (B[1][4] + B[2][0] + B[2][3] + -B[2][4] + -B[3][4])
	M29 = (-A[1][0] + A[1][2] + -A[3][0] + A[3][2]) * (-B[0][0] + -B[0][2] + -B[0][3] + -B[2][0] + -B[3][3])
	M30 = (-A[1][0] + A[1][2] + A[2][2]) * -B[2][1]
	M31 = (-A[0][0] + A[0][2] + -A[2][0] + A[2][2] + -A[2][3] + A[3][1] + A[3][3]) * B[3][4]
	M32 = (-A[1][0] + A[1][2] + A[2][2] + A[3][1] + A[3][2]) * (-B[0][0] + B[0][1] + -B[0][2] + B[1][0] + -B[1][1] + B[1][2] + -B[1][4] + -B[2][0] + -B[2][2] + B[2][4] + B[3][4])
	M33 = (-A[1][0] + A[1][2] + A[2][1] + A[2][2] + A[3][2]) * (-B[0][0] + B[0][1] + -B[0][2] + B[1][0] + -B[1][1] + B[1][2] + -B[1][4] + -B[2][0] + B[2][1] + B[2][4] + B[3][4])
	M34 = (-A[0][0] + -A[1][0]) * (-B[0][3] + B[0][4] + B[2][0] + B[3][3])
	M35 = (-A[1][0] + A[1][1] + A[3][1]) * (-B[0][0] + -B[0][2] + -B[0][3] + -B[1][3] + -B[2][0] + -B[2][2] + -B[2][3])
	M36 = (-A[0][0] + -A[3][0]) * (B[0][2] + -B[0][4] + B[2][2] + -B[2][4] + -B[3][2])
	M37 = A[0][1] * (B[1][0] + B[1][2] + -B[1][4])
	M38 = (-A[0][0] + -A[0][1] + -A[2][0]) * (-B[1][1] + B[1][2])
	M39 = (-A[1][0] + A[1][2] + A[3][2]) * -B[2][2]
	M40 = -A[2][0] * (-B[0][0] + B[0][1] + -B[2][0])
	M41 = (A[0][2] + A[1][0]) * (-B[0][4] + -B[2][0] + -B[2][3])
	M42 = (-A[1][0] + A[1][1] + -A[2][0] + A[2][1]) * (-B[0][0] + B[0][1] + -B[0][3] + -B[2][0] + B[3][3])
	M43 = (-A[2][0] + A[2][2] + -A[2][3]) * B[2][0]
	M44 = (A[1][1] + -A[1][2] + A[2][1] + -A[2][2]) * (-B[2][1] + B[2][3] + B[3][3])
	M45 = A[3][3] * (B[3][0] + B[3][2])
	M46 = (-A[0][0] + -A[0][3] + -A[1][0]) * (-B[0][0] + -B[2][0] + -B[3][3])
	M47 = (-A[0][0] + -A[2][0]) * (B[0][1] + B[0][4] + -B[1][1] + B[1][2] + B[2][1] + B[2][4] + -B[3][1])
	M48 = (-A[0][0] + -A[0][3] + -2*A[1][0] + A[1][2] + -A[1][3] + -A[2][0] + A[2][2] + -A[2][3]) * B[3][3]
	M49 = (A[1][1] + A[3][1]) * (-B[0][0] + -B[0][2] + -B[0][3] + -B[1][2] + -B[1][3] + -B[2][0] + -B[2][2] + -B[2][3] + B[3][2])
	M50 = (-A[0][0] + -A[0][3] + -A[1][1] + -A[1][3] + -A[2][3] + -A[3][0] + -A[3][1] + -A[3][3]) * (-B[0][0] + B[0][1] + -B[0][2] + -B[2][0] + B[3][2])
	M51 = (-A[0][0] + -A[0][3] + -A[1][2] + -A[1][3] + A[3][0] + -A[3][2] + -A[3][3]) * B[3][3]
	M52 = (A[1][1] + -A[1][2] + A[3][1] + -A[3][2]) * (-B[0][0] + -B[0][2] + -B[0][3] + -B[2][0] + -B[2][2] + -B[2][3])
	M53 = (-A[1][0] + A[1][2] + -A[2][0] + A[2][2] + -A[2][3]) * (B[2][0] + -B[3][3])
	M54 = (A[0][1] + A[1][1]) * (-B[1][3] + B[1][4] + B[2][0] + B[2][3] + -B[2][4] + -B[3][4])
	M55 = (A[3][0] + -A[3][2]) * B[2][0]
	M56 = (A[0][1] + A[0][2] + A[1][1] + A[1][2]) * (B[2][0] + B[2][3] + -B[2][4])
	M57 = (-A[0][0] + -A[0][3] + -A[1][1] + -A[1][3] + -A[3][0] + -A[3][1] + -A[3][3]) * B[3][2]
	M58 = (-A[0][0] + -A[0][3] + -A[1][1] + -A[1][3] + -A[2][0] + -A[2][1] + -A[2][3] + -A[3][3]) * (-B[0][0] + B[0][1] + -B[0][2] + -B[2][0] + -B[3][1])
	M59 = (-A[1][0] + A[1][2] + A[2][2] + A[3][2]) * (-B[0][0] + B[0][1] + -B[0][2] + B[1][0] + -B[1][1] + B[1][2] + -B[1][4] + -B[2][0] + B[2][1] + -B[2][2] + B[2][4] + B[3][4])
	M60 = -A[0][3] * (-B[0][0] + -B[2][0] + B[3][0] + -B[3][4])
	M61 = -A[3][0] * (-B[0][0] + -B[0][2] + -B[2][0])
	M62 = (A[0][1] + A[1][0]) * -B[1][3]

# Assemble result matrix
	C[0][0] = M4 + M6 + -M11 + -M15 + M18 + -M43 + -M60
	C[1][0] = M11 + -M17 + -M18 + -M43 + M46 + M48 + M53
	C[2][0] = M8 + M10 + -M11 + -M12 + -M14 + -M18 + M43
	C[3][0] = M7 + M9 + -M11 + -M18 + M45 + -M55 + M57
	C[4][0] = M0 + -M2 + -M5 + -M8 + M18 + M37 + M38 + M40 + -M47
	C[0][1] = -M10 + M11 + M16 + M20 + -M21 + -M22 + -M26 + M27
	C[1][1] = M8 + M10 + -M11 + -M12 + -M18 + M21 + M26 + -M27 + -M30 + -M40
	C[2][1] = M12 + -M13 + M23 + M30 + -M32 + M58 + M59 + M61
	C[3][1] = -M0 + M1 + -M5 + M7 + -M18 + -M36 + M37 + -M61
	C[4][1] = M9 + -M11 + -M16 + -M23 + M24 + -M27 + M35 + -M49
	C[0][2] = M13 + M21 + M33 + M39 + -M40 + -M50 + M57 + -M59
	C[1][2] = -M7 + -M9 + M11 + M18 + M23 + -M24 + M27 + -M39 + -M57 + M61
	C[2][2] = M3 + -M16 + -M18 + M34 + -M41 + M46 + -M62
	C[3][2] = M16 + M18 + -M27 + M28 + M43 + -M46 + -M48 + -M53 + -M54 + M62
	C[4][2] = -M22 + M27 + -M28 + -M30 + -M40 + M42 + -M43 + -M44 + M53 + M54 + -M62
	C[0][3] = M27 + -M28 + M29 + -M35 + M39 + -M43 + M48 + -M51 + M52 + M53 + M54 + -M61 + -M62
	C[1][3] = -M0 + M3 + M4 + -M5 + M6 + -M11 + -M15 + -M43
	C[2][3] = M0 + M5 + -M6 + M11 + -M27 + M28 + -M41 + -M56
	C[3][3] = M2 + -M3 + -M4 + -M19 + -M26 + M27 + M30 + M43
	C[4][3] = M1 + -M3 + -M4 + -M24 + -M25 + M27 + M31 + -M39 + M43
	return (C, 63)