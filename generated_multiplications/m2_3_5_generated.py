# Matrix multiplication: C = A @ B
# A: 2×3, B: 3×5, C: 2×5
# Using 25 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(2)] for _ in range(5)])
	M0 = A[1][2] * (B[1][1] + B[2][1])
	M1 = (A[1][1] + -A[1][2]) * B[1][1]
	M2 = (A[0][1] + A[1][1] + -A[1][2]) * (B[1][1] + B[2][0] + B[2][1])
	M3 = A[0][1] * (B[1][0] + -B[1][3])
	M4 = (A[0][1] + A[1][1]) * (B[0][0] + -B[1][0] + -B[1][1] + -B[2][0] + -B[2][1])
	M5 = (A[0][1] + A[1][0] + A[1][1]) * (B[0][0] + -B[1][3])
	M6 = (A[1][0] + A[1][1]) * B[1][3]
	M7 = (A[0][0] + A[0][1] + A[1][0] + A[1][1]) * B[0][0]
	M8 = A[1][0] * B[0][1]
	M9 = A[0][2] * B[2][0]
	M10 = (A[0][1] + -A[0][2] + A[1][1] + -A[1][2]) * (B[0][1] + B[0][2] + -B[2][0] + -B[2][1] + -B[2][2])
	M11 = (A[0][0] + -A[0][1] + A[0][2] + -A[1][1] + A[1][2]) * (B[0][1] + B[0][2] + -B[2][2])
	M12 = (A[0][0] + -A[0][1] + A[0][2] + A[1][0] + -A[1][1] + A[1][2]) * (B[0][1] + B[0][2] + -B[1][2] + -B[1][4] + -B[2][2])
	M13 = (A[0][0] + -A[0][1] + A[0][2] + A[1][0] + A[1][2]) * (B[1][2] + B[1][4] + B[2][2])
	M14 = (A[0][0] + A[0][2] + A[1][0] + A[1][2]) * (B[0][4] + B[1][2] + B[1][4] + B[2][2])
	M15 = (A[0][2] + A[1][0] + A[1][2]) * (B[0][4] + B[2][3] + -B[2][4])
	M16 = (A[0][2] + A[1][2]) * (B[0][4] + -B[2][4])
	M17 = A[1][1] * B[1][4]
	M18 = A[0][0] * (B[0][2] + -B[2][2])
	M19 = A[1][0] * (B[0][3] + -B[0][4] + -B[1][3] + -B[2][3] + B[2][4])
	M20 = A[0][1] * (B[1][2] + B[2][2])
	M21 = (A[1][0] + A[1][2]) * (B[2][3] + -B[2][4])
	M22 = (A[0][0] + -A[0][1] + A[0][2]) * B[2][2]
	M23 = A[0][0] * (B[0][0] + -B[0][2] + -B[0][3] + B[2][2])
	M24 = A[0][2] * B[2][3]

# Assemble result matrix
	C[0][0] = M3 + -M5 + -M6 + M7 + M9
	C[1][0] = -M0 + -M2 + -M3 + -M4 + M5 + M6
	C[2][0] = -M1 + M2 + -M9 + M10 + M11 + -M18
	C[3][0] = M0 + M1 + M8
	C[4][0] = M18 + M20 + M22
	C[0][1] = -M8 + -M11 + M12 + M13 + -M17 + -M22
	C[1][1] = -M5 + -M6 + M7 + -M18 + -M23 + M24
	C[2][1] = M6 + M15 + -M16 + M19 + -M24
	C[3][1] = -M13 + M14 + -M15 + -M20 + M21 + M24
	C[4][1] = M15 + -M16 + M17 + -M21 + -M24
	return (C, 25)