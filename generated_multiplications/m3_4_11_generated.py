# Matrix multiplication: C = A @ B
# A: 3×4, B: 4×11, C: 3×11
# Using 103 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(3)] for _ in range(11)])
	M0 = -A[1][1] * (-B[1][2] + B[1][3] + B[1][4])
	M1 = (-A[1][1] + -A[2][1] + -A[2][3]) * (-B[1][4] + B[3][2])
	M2 = -A[1][0] * (-B[0][2] + B[0][3] + B[0][4])
	M3 = (A[0][0] + A[0][3] + -A[1][0]) * (B[0][4] + -B[3][2])
	M4 = (A[0][0] + -A[0][2] + -A[1][0]) * (-B[0][3] + -B[2][2])
	M5 = (A[0][0] + -A[0][2] + -A[1][0] + A[1][1] + A[1][2] + A[2][1] + A[2][2]) * B[2][2]
	M6 = (A[0][0] + A[0][3] + -A[1][0] + -A[1][1] + -A[1][3] + -A[2][1] + -A[2][3]) * B[3][2]
	M7 = -A[0][1] * (B[0][1] + B[1][1] + -B[1][3] + -B[1][4])
	M8 = (-A[0][1] + A[2][1] + A[2][3]) * (-B[1][4] + B[3][1] + -B[3][3])
	M9 = (A[0][0] + -A[0][1] + -A[1][0]) * (B[0][1] + B[1][1] + B[1][2] + -B[1][3] + -B[1][4])
	M10 = (-A[0][1] + A[2][0]) * (B[0][1] + B[1][0])
	M11 = A[2][0] * (-B[0][0] + B[0][3] + B[0][4] + -B[1][0])
	M12 = (-A[1][1] + A[2][0] + -A[2][1]) * (-B[0][0] + -B[0][2] + B[0][3] + B[0][4] + -B[1][0])
	M13 = (A[0][0] + -A[0][2] + -A[2][0]) * (-B[0][3] + -B[2][0] + B[2][4])
	M14 = (A[2][1] + A[2][3]) * -B[1][4]
	M15 = (A[0][0] + -A[0][2]) * -B[0][3]
	M16 = (A[0][0] + A[0][3]) * B[0][4]
	M17 = (A[0][0] + A[0][3] + -A[2][0]) * (B[0][4] + B[2][4] + -B[3][0])
	M18 = (-A[1][1] + -A[2][1] + -A[2][2]) * (-B[1][3] + B[2][2])
	M19 = (-A[0][1] + A[2][1] + A[2][2]) * (-B[1][3] + B[2][1] + B[3][3])
	M20 = (-A[0][1] + -A[0][3] + A[2][1] + A[2][3]) * (-B[3][1] + B[3][3])
	M21 = (-A[0][1] + -A[0][3] + A[1][2] + -A[1][3] + A[2][1] + A[2][3]) * (-B[2][1] + -B[3][3])
	M22 = (A[1][2] + -A[1][3]) * B[2][4]
	M23 = (-A[1][1] + -A[2][1]) * (-B[0][0] + -B[0][2] + B[0][3] + B[0][4] + -B[1][0] + -B[1][2] + B[2][2] + B[3][2])
	M24 = (-A[1][0] + A[1][1] + -A[2][0] + A[2][1]) * (-B[0][0] + -B[0][2] + B[0][3] + B[0][4])
	M25 = (-A[0][1] + A[2][1]) * (B[1][0] + -B[1][1] + B[2][1] + B[3][1])
	M26 = (A[0][0] + -A[1][0]) * (B[0][1] + B[0][2] + B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + B[2][2] + -B[3][2])
	M27 = (-A[0][1] + -A[0][3] + -A[1][3] + A[2][1] + A[2][3]) * (-B[1][1] + -B[1][2] + B[1][3] + B[1][4] + -B[2][1] + -B[3][1])
	M28 = (A[0][0] + -A[0][1]) * B[0][1]
	M29 = A[2][2] * (-B[1][3] + -B[2][0] + B[2][3] + B[2][4] + B[3][3])
	M30 = (A[0][0] + -A[2][0]) * (-B[0][0] + B[0][1] + -B[2][0] + B[3][0])
	M31 = (A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * B[3][3]
	M32 = A[2][3] * (-B[1][4] + -B[3][0] + B[3][4])
	M33 = A[0][2] * (-B[0][3] + B[2][1] + -B[2][3])
	M34 = A[0][3] * (B[0][4] + B[2][4] + B[3][1] + -B[3][3] + -B[3][4])
	M35 = (A[2][1] + A[2][2]) * -B[1][3]
	M36 = (A[2][2] + -A[2][3]) * B[3][3]
	M37 = (2.0*A[0][0] + -A[0][2] + A[0][3] + -A[1][2] + A[1][3] + -2.0*A[2][0] + A[2][2] + -A[2][3]) * -B[3][0]
	M38 = (A[0][0] + -A[0][2] + -A[1][2] + A[1][3] + -A[2][0] + A[2][2]) * (B[2][4] + B[3][0])
	M39 = (A[0][2] + -A[0][3] + A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * -B[2][1]
	M40 = A[1][2] * (B[2][2] + -B[2][3] + -B[3][3])
	M41 = (A[0][0] + -2.0*A[0][1] + -A[0][3] + -A[1][0] + A[1][1] + -A[1][3] + A[2][1] + A[2][3]) * (-B[1][1] + -B[1][2] + B[1][3] + B[1][4])
	M42 = (A[0][0] + -A[0][2] + -A[1][2] + -A[2][0] + A[2][2]) * (-B[2][0] + -B[3][0])
	M43 = A[1][3] * (B[2][4] + -B[3][2] + B[3][4])
	M44 = (A[0][0] + -A[0][2] + -A[2][0] + A[2][2]) * (-B[2][0] + B[2][4])
	M45 = (A[0][2] + A[0][3] + -A[1][2] + A[1][3]) * B[2][4]
	M46 = (A[2][0] + -A[2][1]) * B[1][0]
	M47 = A[0][2] * (-B[1][8] + B[2][8])
	M48 = (-A[2][0] + -A[2][1] + -A[2][2] + -A[2][3]) * (-B[0][7] + B[0][10])
	M49 = (A[1][0] + A[1][1]) * -B[0][10]
	M50 = -A[1][1] * (-B[0][10] + B[1][10] + -B[2][10] + B[3][10])
	M51 = (A[0][0] + A[0][1]) * (B[1][9] + -B[2][9])
	M52 = (A[0][0] + A[0][3]) * (-B[2][9] + -B[3][9])
	M53 = (-A[0][2] + A[1][1]) * (-B[1][8] + B[2][10])
	M54 = (A[2][2] + A[2][3]) * (-B[1][5] + B[2][5])
	M55 = A[2][1] * (B[1][6] + B[1][8] + -B[2][6] + -B[2][8])
	M56 = (-A[1][0] + -A[1][1] + A[2][0] + A[2][1] + A[2][2] + A[2][3]) * (B[1][5] + -B[2][5] + -B[3][10])
	M57 = (A[1][1] + A[1][2]) * -B[2][10]
	M58 = (A[0][1] + -A[0][3] + -A[2][2] + -A[2][3]) * (-B[0][7] + B[0][10] + B[1][5] + -B[2][5] + B[2][7] + B[2][9] + -B[2][10] + -B[3][9])
	M59 = (A[1][0] + A[1][3]) * -B[0][8]
	M60 = (A[1][1] + A[1][2] + -A[1][3]) * (B[0][5] + -B[1][5] + B[2][5] + -B[3][5])
	M61 = (A[0][1] + A[0][2]) * -B[1][8]
	M62 = (-A[0][0] + -A[0][1] + A[2][2] + A[2][3]) * (-B[0][7] + B[0][10] + -B[3][9])
	M63 = (A[0][0] + -A[1][1]) * (-B[0][10] + -B[1][9] + B[2][9])
	M64 = (-A[1][0] + A[1][1] + A[1][2] + -A[1][3] + A[2][0] + A[2][1] + A[2][2] + A[2][3]) * (B[0][7] + -B[0][10] + -B[1][5] + 0.5*B[2][5] + -0.5*B[2][10] + -0.5*B[3][5] + 0.5*B[3][10])
	M65 = (A[0][3] + A[1][1]) * (-B[1][5] + B[1][7] + -B[1][10] + B[2][5] + -B[2][7] + B[2][10] + -B[3][10])
	M66 = (A[1][0] + -A[1][1] + -A[1][2] + A[1][3]) * (-B[0][5] + B[0][7] + -B[0][10])
	M67 = -A[2][3] * -B[3][6]
	M68 = (-A[1][1] + A[1][3]) * -B[3][10]
	M69 = A[2][0] * -B[0][6]
	M70 = (A[2][1] + A[2][2]) * (-B[2][10] + B[3][10])
	M71 = -A[1][3] * (-B[0][8] + B[3][8])
	M72 = -A[0][3] * (B[0][7] + -B[0][10] + -B[1][7] + B[1][10] + B[2][7] + -B[2][10] + -B[3][7] + B[3][10])
	M73 = (A[1][0] + A[1][1] + -A[2][0]) * (B[0][10] + -B[1][6] + -B[1][8] + -B[1][10] + B[2][6] + B[2][8] + B[2][10] + -B[3][10])
	M74 = (A[0][2] + -A[2][1]) * (B[1][8] + -B[2][6] + -B[2][8])
	M75 = -A[0][0] * (-B[0][9] + B[1][9] + -B[2][9] + B[3][9])
	M76 = (A[0][3] + -A[1][1] + -A[1][2] + A[1][3]) * (B[0][7] + -B[0][10] + -B[1][5] + B[2][7] + -B[2][10] + -B[3][5])
	M77 = (-A[0][0] + A[1][3]) * (B[0][8] + -B[2][9] + -B[3][9])
	M78 = (A[0][0] + A[1][1] + A[1][2] + -A[1][3]) * (-B[0][5] + B[0][7] + -B[0][10] + -B[2][9])
	M79 = (-A[2][1] + -A[2][2]) * (B[2][9] + -B[3][9])
	M80 = (A[0][2] + A[0][3] + A[2][2] + A[2][3]) * (-B[2][7] + -B[2][9] + B[2][10])
	M81 = (-A[0][1] + A[0][3]) * (B[1][5] + -B[1][7] + B[1][10] + -B[2][5] + B[2][7] + -B[2][10])
	M82 = (A[1][0] + A[1][1] + A[1][2] + A[1][3] + -A[2][0] + -A[2][1] + -A[2][2] + -A[2][3]) * (-0.5*B[2][5] + -0.5*B[2][10] + -0.5*B[3][5] + -0.5*B[3][10])
	M83 = (-A[1][0] + -A[1][1] + A[2][0] + A[2][1]) * (-B[1][5] + -B[1][6] + -B[1][8] + -B[1][10] + B[2][5] + B[2][6] + B[2][8] + B[2][10])
	M84 = (-A[1][0] + A[1][1] + A[1][2] + -A[1][3] + A[2][0]) * (-B[0][5] + B[1][5] + -B[2][5] + -B[2][6] + -B[2][8] + B[3][5])
	M85 = (-A[0][0] + A[0][1] + A[0][2] + -A[0][3]) * -B[2][9]
	M86 = (A[2][1] + A[2][2] + -A[2][3]) * (-B[2][6] + -B[2][8])
	M87 = (A[0][1] + A[1][1]) * (B[1][5] + -B[1][7] + B[1][8] + -B[1][9] + -B[2][5] + B[2][7] + B[2][9] + -B[2][10])
	M88 = (-A[0][1] + A[0][3] + -A[2][1]) * (-B[0][7] + B[0][10] + B[1][7] + -B[1][10] + -B[2][7] + B[2][10] + -B[3][6] + B[3][7] + -B[3][10])
	M89 = (-A[0][2] + -A[2][2]) * -B[2][6]
	M90 = (A[0][0] + A[0][1] + A[2][1]) * (-B[0][6] + B[0][9] + -B[1][9] + B[2][9] + -B[3][9])
	M91 = (-A[0][2] + -A[1][2]) * (B[2][8] + -B[2][10])
	M92 = (A[1][0] + A[1][3] + -A[2][0]) * (B[0][8] + -B[2][6] + -B[2][8] + -B[3][6] + -B[3][8])
	M93 = (A[0][0] + A[0][1] + A[2][0] + A[2][1]) * (B[0][6] + -B[0][7] + -B[0][9] + B[0][10])
	M94 = (A[0][0] + A[1][0]) * (B[0][5] + -B[0][7] + B[0][8] + -B[0][9])
	M95 = (-A[1][0] + -A[1][3] + A[2][0] + A[2][3]) * (-B[2][6] + -B[2][8] + -B[3][6] + -B[3][8])
	M96 = (-A[0][3] + -A[1][3]) * (-B[2][9] + B[3][8] + -B[3][9])
	M97 = (A[0][1] + -A[0][3] + A[2][1] + -A[2][3]) * (-B[2][7] + -B[2][9] + B[2][10] + -B[3][6] + B[3][7] + B[3][9] + -B[3][10])
	M98 = (A[0][3] + A[1][3]) * (B[2][5] + -B[2][7] + B[2][10] + B[3][5] + -B[3][7])
	M99 = (-A[1][0] + A[2][0]) * (B[0][5] + B[0][6] + B[0][8] + B[0][10] + -B[1][5] + -B[1][6] + -B[1][8] + -B[1][10] + B[2][5] + B[2][6] + B[2][8] + B[2][10] + -B[3][5] + -B[3][6] + -B[3][8] + -B[3][10])
	M100 = (A[0][1] + A[2][1]) * (B[0][6] + -B[0][7] + -B[0][9] + B[0][10] + -B[1][6] + B[1][7] + B[1][9] + -B[1][10] + -B[2][7] + -B[2][9] + B[2][10] + -B[3][6] + B[3][7] + B[3][9] + -B[3][10])
	M101 = (A[1][0] + -A[1][1] + -A[1][2] + A[1][3] + -A[2][0] + A[2][1] + A[2][2] + -A[2][3]) * (-0.5*B[2][5] + -B[2][6] + -B[2][8] + -0.5*B[2][10] + 0.5*B[3][5] + 0.5*B[3][10])
	M102 = (A[0][1] + A[0][2] + -A[0][3] + A[1][1] + A[1][2] + -A[1][3]) * (-B[2][5] + B[2][7] + B[2][9] + -B[2][10])

# Assemble result matrix
	C[0][0] = -M10 + -M11 + M13 + -M15 + M16 + -M17 + M22 + M28 + -M30 + M45
	C[1][0] = -M2 + M12 + M22 + M24 + M38 + M42 + -M44 + M46
	C[2][0] = -M11 + M13 + -M15 + M16 + -M17 + 2.0*M22 + M37 + M38 + -M44 + M45 + -M46
	C[3][0] = -M7 + M8 + -M14 + M19 + M20 + M21 + M28 + M31 + -M35 + -M39
	C[4][0] = -M0 + -M9 + -M20 + -M21 + M27 + M28 + -M31 + -M36 + -M41
	C[5][0] = -M7 + M8 + M10 + -M14 + M19 + -M25 + -M35 + -M36 + -M46
	C[6][0] = M2 + -M3 + M4 + M7 + -M9 + -M15 + M16 + M26
	C[7][0] = M0 + M1 + M2 + -M3 + M4 + M5 + -M6 + M14 + -M15 + M16 + M18 + M35
	C[8][0] = -M0 + -M1 + M11 + -M12 + -M14 + -M18 + M23 + -M35
	C[9][0] = -M15 + M19 + M21 + M31 + -M33 + -M35 + -M39
	C[10][0] = M4 + M5 + -M15 + M18 + -M31 + M35 + -M36 + -M40
	C[0][1] = M13 + -M15 + M29 + -M35 + -M36 + -M44
	C[1][1] = M8 + -M14 + M16 + M20 + M22 + -M34 + M45
	C[2][1] = M1 + -M3 + -M6 + M14 + M16 + M22 + M43
	C[3][1] = -M14 + M16 + -M17 + 2.0*M22 + M32 + M37 + M38 + M45
	C[4][1] = M52 + -M54 + M58 + -M60 + M62 + -M76 + -M78 + -M80 + -M102
	C[5][1] = M48 + -M56 + M57 + M60 + -M64 + -M66 + M68 + -M82
	C[6][1] = M48 + M54 + -M64 + -M66 + M70 + -M84 + M86 + -M101
	C[7][1] = -M47 + -M55 + M72 + -M74 + M75 + -M88 + -M90 + -M100
	C[8][1] = M47 + M50 + M53 + M57 + -M60 + -M69 + M71 + -M73 + -M84 + M91 + -M92 + -M99
	C[9][1] = M47 + M55 + M67 + -M69 + M74 + M89
	C[10][1] = M50 + -M51 + M52 + -M53 + -M54 + M58 + -M61 + M62 + -M63 + -M65 + M72 + -M80 + M85 + -M87
	C[0][2] = M48 + -M49 + -M50 + -M56 + -M64 + M65 + M68 + -M72 + -M76 + -M82 + -M98
	C[1][2] = M48 + -M49 + -M55 + -M56 + -M58 + M67 + -M70 + -M73 + M79 + -M81 + -M83 + -M88 + -M97
	C[2][2] = M47 + -M52 + -M61 + M71 + -M77 + -M96
	C[3][2] = -M47 + -M53 + -M57 + -M59 + -M71 + -M91
	C[4][2] = -M47 + -M59 + -M67 + -M74 + -M86 + -M89 + -M92 + -M95
	C[5][2] = M51 + -M52 + M75 + -M85
	C[6][2] = M49 + -M59 + M63 + -M66 + -M75 + -M77 + -M78 + -M94
	C[7][2] = -M48 + -M51 + -M62 + -M69 + -M79 + -M90 + -M93
	C[8][2] = M50 + -M51 + -M53 + -M61 + -M63 + -M65 + -M81 + -M87
	C[9][2] = -M49 + -M50 + -M57 + -M68
	C[10][2] = -M49 + -M54 + -M55 + -M56 + -M70 + -M73 + -M83
	return (C, 103)