# Matrix multiplication: C = A @ B
# A: 3×5, B: 5×9, C: 3×9
# Using 105 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(3)] for _ in range(9)])
	M0 = (A[1][1] + -A[1][2] + A[2][2]) * (-B[2][1] + B[3][1] + B[4][1])
	M1 = (-A[1][2] + -A[1][4] + A[2][2]) * (B[2][3] + -B[4][1])
	M2 = (-A[0][2] + A[1][0] + -A[1][2]) * (-B[2][0] + B[3][0] + B[4][0])
	M3 = (A[0][2] + A[1][2] + A[1][4]) * (-B[2][3] + B[4][0])
	M4 = (-A[0][2] + -A[1][2] + -A[1][3]) * (-B[2][2] + -B[3][0])
	M5 = (-A[1][2] + -A[1][3]) * B[2][2]
	M6 = (A[1][2] + A[1][4]) * B[2][3]
	M7 = (A[0][1] + -A[0][2] + A[2][1]) * (B[1][0] + B[1][1] + -B[3][1] + -B[4][1])
	M8 = (-A[0][1] + -A[0][4] + -A[2][1]) * (B[1][3] + -B[3][3] + -B[4][1])
	M9 = (A[0][2] + A[1][1]) * (B[1][0] + B[1][1] + B[2][1] + -B[3][1] + -B[4][1])
	M10 = (A[0][0] + -A[2][1]) * (B[0][1] + B[1][0])
	M11 = (A[0][0] + A[2][0] + -A[2][2]) * (-B[0][0] + -B[0][1] + B[3][0] + B[4][0])
	M12 = (-A[1][0] + A[2][2]) * (-B[0][0] + -B[0][1] + -B[2][0] + B[3][0] + B[4][0])
	M13 = (-A[0][0] + -A[2][0] + -A[2][3]) * (-B[0][2] + -B[3][0] + B[4][2])
	M14 = (A[0][1] + A[0][4] + -A[1][2] + -A[1][4] + A[2][1] + A[2][2] + A[2][4]) * -B[4][1]
	M15 = (A[0][0] + A[0][2] + A[0][3] + A[1][2] + A[1][3] + A[2][0] + A[2][3]) * -B[3][0]
	M16 = (-A[0][0] + -A[0][2] + -A[0][4] + -A[1][2] + -A[1][4] + -A[2][0] + -A[2][4]) * B[4][0]
	M17 = (A[0][0] + A[2][0] + A[2][4]) * (-B[0][3] + B[4][0] + B[4][2])
	M18 = (-A[1][2] + -A[1][3] + A[2][2]) * (B[2][2] + -B[3][1])
	M19 = (-A[0][1] + -A[0][3] + -A[2][1]) * (B[1][2] + -B[3][1] + B[3][3])
	M20 = (-A[0][1] + -A[0][4] + A[1][1]) * (-B[1][3] + B[3][3])
	M21 = (-A[0][1] + -A[0][3] + A[1][1]) * (-B[1][2] + -B[3][3])
	M22 = (-A[0][0] + -A[0][4] + -A[1][0] + -A[1][4] + -2*A[2][0] + -2*A[2][4]) * B[4][2]
	M23 = -A[2][2] * (-B[0][0] + -B[0][1] + -B[2][0] + -B[2][1] + B[2][2] + B[2][3] + B[3][0] + B[4][0])
	M24 = -A[1][0] * (-B[0][0] + -B[2][0] + B[3][0] + B[4][0])
	M25 = A[2][1] * (B[0][1] + -B[1][1] + B[1][2] + B[1][3])
	M26 = -A[0][2] * (B[1][0] + B[1][1] + B[2][0] + B[2][1] + B[2][2] + -B[2][3] + -B[3][1] + -B[4][1])
	M27 = -A[1][1] * (-B[1][1] + -B[1][2] + -B[1][3] + -B[2][1] + B[3][1] + B[4][1])
	M28 = (-A[0][0] + -A[0][1] + -A[1][1]) * B[1][0]
	M29 = -A[2][3] * (-B[0][2] + -B[3][1] + B[3][2] + B[3][3] + B[4][2])
	M30 = A[0][0] * (-B[0][0] + -B[0][2] + B[0][3] + B[1][0])
	M31 = (-A[0][1] + -A[0][3] + A[1][1] + A[1][3]) * B[3][3]
	M32 = -A[2][4] * (-B[0][3] + -B[4][1] + B[4][3])
	M33 = A[0][3] * (B[1][2] + -B[3][0] + -B[3][2])
	M34 = A[0][4] * (B[1][3] + -B[3][3] + B[4][0] + B[4][2] + -B[4][3])
	M35 = (A[0][1] + A[0][3] + -A[1][2] + -A[1][3] + A[2][1] + A[2][2] + A[2][3]) * -B[3][1]
	M36 = (A[1][1] + A[1][3] + A[2][1] + A[2][3]) * B[3][3]
	M37 = (-A[2][0] + -A[2][4]) * -B[0][3]
	M38 = (-A[1][0] + -A[2][0] + -A[2][4]) * (B[0][3] + B[4][2])
	M39 = (A[0][1] + A[0][3]) * -B[1][2]
	M40 = A[1][3] * (B[2][2] + -B[3][2] + -B[3][3])
	M41 = A[1][1] * (-B[1][1] + -B[2][1] + B[3][1] + B[4][1])
	M42 = -A[1][0] * (-B[0][2] + -B[0][3])
	M43 = -A[1][4] * (-B[2][3] + B[4][2] + B[4][3])
	M44 = (A[1][0] + A[2][0] + A[2][3]) * (-B[0][2] + B[4][2])
	M45 = (-A[0][0] + -A[0][4] + -A[2][0] + -A[2][4]) * B[4][2]
	M46 = (-A[1][0] + A[2][0] + A[2][1]) * B[0][1]
	M47 = A[2][2] * (B[0][8] + B[2][4] + -B[2][6] + B[2][8])
	M48 = A[2][3] * (-B[0][8] + B[3][4] + -B[3][6] + B[3][8])
	M49 = (-A[1][0] + A[2][2]) * (-B[0][8] + B[2][7])
	M50 = (-A[0][0] + -A[2][3]) * (-B[0][8] + -B[3][5])
	M51 = -A[0][0] * (B[0][4] + -B[0][5] + B[0][6] + B[3][5])
	M52 = (-A[0][0] + -A[0][3] + A[1][3]) * (B[0][4] + -B[0][5] + B[0][6] + -B[0][7] + B[3][5])
	M53 = (A[0][1] + A[0][3] + -A[2][3]) * (-B[1][8] + -B[3][4])
	M54 = (A[1][2] + -A[1][4] + -A[2][2]) * (B[2][6] + B[4][8])
	M55 = (-A[2][0] + A[2][2] + -A[2][3]) * -B[0][8]
	M56 = (A[0][3] + -A[0][4] + -A[2][3]) * (B[3][6] + B[4][8])
	M57 = -A[1][0] * (B[0][4] + B[0][6] + -B[0][7] + -B[2][7])
	M58 = (-A[1][1] + -A[1][2] + A[2][2]) * (-B[1][8] + -B[2][4])
	M59 = (A[0][1] + A[0][3] + A[1][1] + A[1][2] + -A[2][1] + -A[2][2] + -A[2][3]) * -B[1][8]
	M60 = (-A[0][3] + A[0][4] + -A[1][2] + A[1][4] + A[2][2] + A[2][3] + -A[2][4]) * B[4][8]
	M61 = (A[1][2] + -A[1][3] + -A[2][2]) * (-B[1][8] + B[2][7] + B[2][8] + B[4][8])
	M62 = (-A[1][0] + A[2][0] + A[2][1]) * (B[0][4] + -B[1][7])
	M63 = (-A[2][0] + -A[2][1]) * B[0][4]
	M64 = (A[1][0] + -A[2][0] + -A[2][4]) * (-B[0][6] + B[4][7])
	M65 = (-A[2][0] + -A[2][4]) * -B[0][6]
	M66 = -A[1][3] * (-B[1][8] + B[2][7] + B[2][8] + -B[3][4] + -B[3][6] + B[3][7] + B[3][8] + B[4][8])
	M67 = (A[0][3] + -A[0][4] + -A[1][3]) * (B[3][6] + B[4][7])
	M68 = (A[0][1] + A[0][3] + -A[1][3]) * (B[1][7] + -B[3][4])
	M69 = (A[0][3] + -A[0][4] + A[1][0] + -A[1][3] + A[1][4] + -A[2][0] + -A[2][4]) * B[4][7]
	M70 = (A[0][2] + -A[1][3]) * (-B[1][8] + B[2][7] + B[2][8] + B[3][8] + B[4][8])
	M71 = (A[0][3] + -A[1][3]) * (B[0][4] + -B[0][5] + B[0][6] + -B[0][7] + -B[1][7] + B[3][5] + B[3][7] + B[4][7])
	M72 = (A[0][1] + A[0][3] + -A[1][0] + -A[1][1] + -A[1][3] + A[2][0] + A[2][1]) * B[1][7]
	M73 = (A[0][3] + -A[0][4]) * B[3][6]
	M74 = (A[0][2] + A[1][0] + -A[1][2]) * -B[2][7]
	M75 = (-A[0][0] + A[0][2] + -A[0][3]) * B[3][5]
	M76 = (A[0][1] + A[0][3]) * -B[3][4]
	M77 = (-A[1][1] + -A[1][2]) * B[2][4]
	M78 = A[2][2] * (B[2][4] + B[2][5] + -B[2][6] + B[2][8])
	M79 = A[2][3] * (-B[0][7] + -B[0][8] + B[1][7] + -B[3][4] + B[3][6] + -B[3][7] + -B[3][8] + B[4][7])
	M80 = A[0][2] * (-B[2][4] + B[2][5] + -B[2][6] + B[3][5])
	M81 = (A[0][2] + -A[1][2] + A[1][4]) * (-B[2][6] + B[4][4] + -B[4][5])
	M82 = (A[0][2] + -A[1][1] + -A[1][2]) * (B[1][5] + -B[1][6] + -B[2][4])
	M83 = (A[0][2] + -A[1][2]) * (B[0][4] + -B[0][5] + B[0][6] + -B[0][7] + B[1][5] + -B[1][6] + -B[2][5] + -B[2][7] + B[4][4] + -B[4][5])
	M84 = A[0][1] * (B[1][4] + -B[1][5] + B[1][6] + -B[3][4])
	M85 = (A[1][2] + -A[1][4]) * -B[2][6]
	M86 = (-A[0][0] + A[2][0] + A[2][4]) * (-B[0][6] + B[1][6] + -B[4][4] + B[4][5])
	M87 = (-A[0][0] + A[0][2] + -A[0][4] + -A[1][2] + A[1][4] + A[2][0] + A[2][4]) * (-B[1][6] + B[4][4] + -B[4][5])
	M88 = (-A[0][0] + A[2][0] + A[2][1]) * (B[0][4] + -B[1][5] + B[1][6] + -B[4][4])
	M89 = (A[0][1] + A[0][2] + -A[0][4] + -A[1][1] + -A[1][2] + A[1][4]) * (-B[1][6] + B[4][4])
	M90 = (A[0][1] + A[0][2] + -A[0][4] + -A[1][2] + A[1][4]) * -B[1][6]
	M91 = (A[0][2] + -A[0][3] + A[2][3]) * (-B[1][8] + B[3][5] + B[3][8] + B[4][8])
	M92 = A[0][2] * (-B[1][8] + B[2][8] + B[3][8] + B[4][8])
	M93 = (A[0][1] + A[0][2] + -A[0][4] + -A[1][1] + -A[1][2]) * B[4][4]
	M94 = -A[2][4] * (B[0][6] + -B[1][6] + -B[4][6] + B[4][8])
	M95 = (A[2][1] + -A[2][4]) * -B[1][6]
	M96 = A[1][4] * (-B[2][6] + B[4][4] + -B[4][6] + B[4][7])
	M97 = (-A[0][0] + -A[0][1] + -A[0][2] + A[1][1] + A[1][2] + A[2][0] + A[2][1]) * (B[1][5] + -B[1][6] + B[4][4])
	M98 = A[0][4] * (B[3][6] + B[4][4] + -B[4][5] + B[4][6])
	M99 = (-A[0][0] + A[0][2] + -A[0][3] + A[1][0] + -A[1][2] + A[1][3]) * (B[0][4] + -B[0][5] + B[0][6] + -B[0][7])
	M100 = -A[2][1] * (B[0][4] + -B[1][4] + -B[1][8] + -B[4][4])
	M101 = -A[1][1] * (B[1][4] + -B[1][6] + -B[1][7] + -B[2][4])
	M102 = (-A[1][0] + A[2][0] + -A[2][3]) * (-B[0][7] + -B[0][8] + B[1][7] + B[4][7])
	M103 = (-A[0][0] + A[2][0]) * (-B[0][5] + -B[0][8] + B[1][5] + B[4][5])
	M104 = (A[2][1] + -A[2][4]) * (-B[1][6] + B[4][4])

# Assemble result matrix
	C[0][0] = -M3 + -M4 + -M5 + -M6 + -M9 + -M13 + -M15 + -M16 + -M17 + -M26 + -M28 + -M30 + -2*M37 + -M38 + -M41 + -M42 + -M44
	C[1][0] = M2 + M3 + M4 + M5 + M6 + M9 + M24 + M26 + M41
	C[2][0] = -M10 + -M11 + -M12 + M13 + M17 + M24 + M30 + 2*M37 + M38 + M42 + M44 + -M46
	C[3][0] = M7 + M8 + M9 + M10 + M19 + M20 + M21 + M25 + M27 + M28 + 2*M41
	C[4][0] = M0 + M1 + -M5 + M6 + M12 + M18 + M23 + -M24 + -M41
	C[5][0] = M1 + -M5 + M6 + -M8 + M12 + -M14 + M18 + -M19 + -M20 + -M21 + M23 + -M24 + -M25 + -M27 + -M35 + -M41 + M46
	C[6][0] = M4 + M5 + M13 + M15 + -M33 + M37 + M38 + -M39 + M42 + M44 + -M45
	C[7][0] = -M5 + -M21 + -M22 + -M31 + M37 + M38 + -M39 + -M40 + M42 + M45
	C[8][0] = -M5 + M18 + -M19 + -M29 + M31 + -M35 + -M36 + -M37 + -M38 + M39 + -M42 + -M44
	C[0][1] = -M3 + -M6 + -M16 + -M17 + M20 + M21 + M27 + -M34 + -M37 + M39 + M41 + -M45
	C[1][1] = M6 + M21 + M22 + M27 + M31 + -M37 + -M38 + M39 + M41 + -M43 + -M45
	C[2][1] = M1 + M6 + -M8 + -M14 + -M20 + -M21 + -M27 + -M31 + -M32 + M36 + M37 + -M39 + -M41
	C[3][1] = -M63 + -M76 + -M77 + -M82 + M84 + -M88 + -M93 + -M97
	C[4][1] = -M62 + -M63 + M68 + -M72 + -M76 + -M77 + M89 + -M90 + -M93 + -M101
	C[5][1] = M53 + -M58 + -M59 + -M63 + -M76 + -M77 + M95 + M100 + -M104
	C[6][1] = M51 + -M63 + M65 + -M75 + -M77 + M80 + -M81 + -M82 + -M85 + M86 + M87 + -M88 + -M90 + -M93 + -M97
	C[7][1] = M52 + -M57 + -M74 + -M75 + -M77 + M80 + -M81 + -M82 + M83 + -M85 + M89 + -M90 + -M93 + -M99
	C[8][1] = -M47 + M50 + M51 + -M55 + -M63 + M65 + M78 + M86 + -M88 + -M103 + -M104
	C[0][2] = M65 + M73 + -M81 + -M85 + M86 + M87 + -M90 + M98
	C[1][2] = -M64 + M65 + -M67 + M69 + M73 + -M85 + M89 + -M90 + -M93 + -M96
	C[2][2] = -M54 + -M56 + -M60 + M65 + M73 + -M85 + M94 + -M95
	C[3][2] = -M51 + M52 + -M66 + -M67 + M68 + M70 + M71 + M73 + -M76 + -M92
	C[4][2] = M57 + -M62 + -M63 + -M64 + M65 + -M66 + -M67 + M68 + M69 + M70 + -M72 + M73 + M74 + -M76 + -M92
	C[5][2] = -M48 + M49 + -M55 + M57 + -M62 + -M63 + -M64 + M65 + -M79 + -M102
	C[6][2] = M48 + M50 + -M53 + -M56 + M73 + M75 + M76 + -M91 + M92
	C[7][2] = M47 + M49 + -M54 + M58 + M61 + -M70 + -M74 + M77 + -M85 + M92
	C[8][2] = M47 + M48 + -M53 + -M54 + M55 + -M56 + M58 + M59 + -M60 + M73 + M76 + M77 + -M85
	return (C, 105)