# Matrix multiplication: C = A @ B
# A: 3×9, B: 9×11, C: 3×11
# Using 225 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(3)] for _ in range(11)])
	M0 = (-A[0][0] + A[0][6] + -A[1][3] + A[1][6] + A[2][0] + -A[2][3]) * (-0.125*B[0][7] + -0.125*B[0][8] + -B[0][9] + 0.125*B[3][6] + B[3][9] + -0.125*B[3][10] + -B[6][5] + -0.125*B[6][6] + 0.125*B[6][8])
	M1 = (-A[0][1] + A[0][7] + -A[1][4] + A[1][7] + A[2][1] + -A[2][4]) * (-0.125*B[1][7] + -0.125*B[1][8] + -B[1][9] + 0.125*B[4][6] + B[4][9] + -0.125*B[4][10] + -B[7][5] + -0.125*B[7][6] + 0.125*B[7][8])
	M2 = (-A[0][2] + A[0][8] + -A[1][5] + A[1][8] + A[2][2] + -A[2][5]) * (-0.125*B[2][7] + -0.125*B[2][8] + -B[2][9] + 0.125*B[5][6] + B[5][9] + -0.125*B[5][10] + -B[8][5] + -0.125*B[8][6] + 0.125*B[8][8])
	M3 = (-A[0][0] + -A[0][6] + -A[1][3] + A[1][6] + A[2][0] + A[2][3]) * (-0.125*B[0][7] + 0.125*B[0][8] + B[0][9] + -0.125*B[3][6] + B[3][9] + -0.125*B[3][10] + -B[6][5] + 0.125*B[6][6] + 0.125*B[6][8])
	M4 = (-A[0][1] + -A[0][7] + -A[1][4] + A[1][7] + A[2][1] + A[2][4]) * (-0.125*B[1][7] + 0.125*B[1][8] + B[1][9] + -0.125*B[4][6] + B[4][9] + -0.125*B[4][10] + -B[7][5] + 0.125*B[7][6] + 0.125*B[7][8])
	M5 = (-A[0][2] + -A[0][8] + -A[1][5] + A[1][8] + A[2][2] + A[2][5]) * (-0.125*B[2][7] + 0.125*B[2][8] + B[2][9] + -0.125*B[5][6] + B[5][9] + -0.125*B[5][10] + -B[8][5] + 0.125*B[8][6] + 0.125*B[8][8])
	M6 = (-A[0][0] + -A[0][6] + -A[1][3] + -A[1][6] + -A[2][0] + A[2][3]) * (-0.125*B[0][7] + -0.125*B[0][8] + B[0][9] + 0.125*B[3][6] + -B[3][9] + -0.125*B[3][10] + -B[6][5] + 0.125*B[6][6] + -0.125*B[6][8])
	M7 = (-A[0][1] + -A[0][7] + -A[1][4] + -A[1][7] + -A[2][1] + A[2][4]) * (-0.125*B[1][7] + -0.125*B[1][8] + B[1][9] + 0.125*B[4][6] + -B[4][9] + -0.125*B[4][10] + -B[7][5] + 0.125*B[7][6] + -0.125*B[7][8])
	M8 = (-A[0][2] + -A[0][8] + -A[1][5] + -A[1][8] + -A[2][2] + A[2][5]) * (-0.125*B[2][7] + -0.125*B[2][8] + B[2][9] + 0.125*B[5][6] + -B[5][9] + -0.125*B[5][10] + -B[8][5] + 0.125*B[8][6] + -0.125*B[8][8])
	M9 = (-A[0][0] + A[0][6] + -A[1][3] + -A[1][6] + -A[2][0] + -A[2][3]) * (0.125*B[0][7] + -0.125*B[0][8] + B[0][9] + 0.125*B[3][6] + B[3][9] + 0.125*B[3][10] + B[6][5] + 0.125*B[6][6] + 0.125*B[6][8])
	M10 = (-A[0][1] + A[0][7] + -A[1][4] + -A[1][7] + -A[2][1] + -A[2][4]) * (0.125*B[1][7] + -0.125*B[1][8] + B[1][9] + 0.125*B[4][6] + B[4][9] + 0.125*B[4][10] + B[7][5] + 0.125*B[7][6] + 0.125*B[7][8])
	M11 = (-A[0][2] + A[0][8] + -A[1][5] + -A[1][8] + -A[2][2] + -A[2][5]) * (0.125*B[2][7] + -0.125*B[2][8] + B[2][9] + 0.125*B[5][6] + B[5][9] + 0.125*B[5][10] + B[8][5] + 0.125*B[8][6] + 0.125*B[8][8])
	M12 = (A[0][0] + A[0][6] + -A[1][3] + A[1][6] + -A[2][0] + -A[2][3]) * (-B[0][5] + 0.125*B[0][7] + -0.125*B[0][10] + -B[3][5] + 0.125*B[3][6] + 0.125*B[3][8] + -0.125*B[6][6] + B[6][9] + -0.125*B[6][10])
	M13 = (A[0][1] + A[0][7] + -A[1][4] + A[1][7] + -A[2][1] + -A[2][4]) * (-B[1][5] + 0.125*B[1][7] + -0.125*B[1][10] + -B[4][5] + 0.125*B[4][6] + 0.125*B[4][8] + -0.125*B[7][6] + B[7][9] + -0.125*B[7][10])
	M14 = (A[0][2] + A[0][8] + -A[1][5] + A[1][8] + -A[2][2] + -A[2][5]) * (-B[2][5] + 0.125*B[2][7] + -0.125*B[2][10] + -B[5][5] + 0.125*B[5][6] + 0.125*B[5][8] + -0.125*B[8][6] + B[8][9] + -0.125*B[8][10])
	M15 = (A[0][0] + A[0][6] + -A[1][3] + -A[1][6] + A[2][0] + -A[2][3]) * (-B[0][5] + 0.125*B[0][7] + 0.125*B[0][10] + B[3][5] + -0.125*B[3][6] + 0.125*B[3][8] + -0.125*B[6][6] + B[6][9] + 0.125*B[6][10])
	M16 = (A[0][1] + A[0][7] + -A[1][4] + -A[1][7] + A[2][1] + -A[2][4]) * (-B[1][5] + 0.125*B[1][7] + 0.125*B[1][10] + B[4][5] + -0.125*B[4][6] + 0.125*B[4][8] + -0.125*B[7][6] + B[7][9] + 0.125*B[7][10])
	M17 = (A[0][2] + A[0][8] + -A[1][5] + -A[1][8] + A[2][2] + -A[2][5]) * (-B[2][5] + 0.125*B[2][7] + 0.125*B[2][10] + B[5][5] + -0.125*B[5][6] + 0.125*B[5][8] + -0.125*B[8][6] + B[8][9] + 0.125*B[8][10])
	M18 = (A[0][0] + -A[0][6] + -A[1][3] + A[1][6] + -A[2][0] + A[2][3]) * (-B[0][5] + -0.125*B[0][7] + -0.125*B[0][10] + B[3][5] + 0.125*B[3][6] + -0.125*B[3][8] + -0.125*B[6][6] + -B[6][9] + 0.125*B[6][10])
	M19 = (A[0][1] + -A[0][7] + -A[1][4] + A[1][7] + -A[2][1] + A[2][4]) * (-B[1][5] + -0.125*B[1][7] + -0.125*B[1][10] + B[4][5] + 0.125*B[4][6] + -0.125*B[4][8] + -0.125*B[7][6] + -B[7][9] + 0.125*B[7][10])
	M20 = (A[0][2] + -A[0][8] + -A[1][5] + A[1][8] + -A[2][2] + A[2][5]) * (-B[2][5] + -0.125*B[2][7] + -0.125*B[2][10] + B[5][5] + 0.125*B[5][6] + -0.125*B[5][8] + -0.125*B[8][6] + -B[8][9] + 0.125*B[8][10])
	M21 = (A[0][0] + -A[0][6] + -A[1][3] + -A[1][6] + A[2][0] + A[2][3]) * (B[0][5] + 0.125*B[0][7] + -0.125*B[0][10] + B[3][5] + 0.125*B[3][6] + 0.125*B[3][8] + 0.125*B[6][6] + B[6][9] + 0.125*B[6][10])
	M22 = (A[0][1] + -A[0][7] + -A[1][4] + -A[1][7] + A[2][1] + A[2][4]) * (B[1][5] + 0.125*B[1][7] + -0.125*B[1][10] + B[4][5] + 0.125*B[4][6] + 0.125*B[4][8] + 0.125*B[7][6] + B[7][9] + 0.125*B[7][10])
	M23 = (A[0][2] + -A[0][8] + -A[1][5] + -A[1][8] + A[2][2] + A[2][5]) * (B[2][5] + 0.125*B[2][7] + -0.125*B[2][10] + B[5][5] + 0.125*B[5][6] + 0.125*B[5][8] + 0.125*B[8][6] + B[8][9] + 0.125*B[8][10])
	M24 = (A[0][0] + -A[0][6] + -A[1][3] + A[1][6] + A[2][0] + -A[2][3]) * (-B[0][5] + -0.125*B[0][6] + 0.125*B[0][8] + B[3][5] + 0.125*B[3][7] + 0.125*B[3][10] + -0.125*B[6][7] + -0.125*B[6][8] + -B[6][9])
	M25 = (A[0][1] + -A[0][7] + -A[1][4] + A[1][7] + A[2][1] + -A[2][4]) * (-B[1][5] + -0.125*B[1][6] + 0.125*B[1][8] + B[4][5] + 0.125*B[4][7] + 0.125*B[4][10] + -0.125*B[7][7] + -0.125*B[7][8] + -B[7][9])
	M26 = (A[0][2] + -A[0][8] + -A[1][5] + A[1][8] + A[2][2] + -A[2][5]) * (-B[2][5] + -0.125*B[2][6] + 0.125*B[2][8] + B[5][5] + 0.125*B[5][7] + 0.125*B[5][10] + -0.125*B[8][7] + -0.125*B[8][8] + -B[8][9])
	M27 = (A[0][0] + A[0][6] + -A[1][3] + -A[1][6] + -A[2][0] + A[2][3]) * (-B[0][5] + 0.125*B[0][6] + -0.125*B[0][8] + B[3][5] + -0.125*B[3][7] + -0.125*B[3][10] + -0.125*B[6][7] + -0.125*B[6][8] + B[6][9])
	M28 = (A[0][1] + A[0][7] + -A[1][4] + -A[1][7] + -A[2][1] + A[2][4]) * (-B[1][5] + 0.125*B[1][6] + -0.125*B[1][8] + B[4][5] + -0.125*B[4][7] + -0.125*B[4][10] + -0.125*B[7][7] + -0.125*B[7][8] + B[7][9])
	M29 = (A[0][2] + A[0][8] + -A[1][5] + -A[1][8] + -A[2][2] + A[2][5]) * (-B[2][5] + 0.125*B[2][6] + -0.125*B[2][8] + B[5][5] + -0.125*B[5][7] + -0.125*B[5][10] + -0.125*B[8][7] + -0.125*B[8][8] + B[8][9])
	M30 = (-A[0][0] + -A[0][6] + A[1][3] + -A[1][6] + -A[2][0] + -A[2][3]) * (-B[0][5] + 0.125*B[0][6] + 0.125*B[0][8] + -B[3][5] + 0.125*B[3][7] + -0.125*B[3][10] + -0.125*B[6][7] + 0.125*B[6][8] + B[6][9])
	M31 = (-A[0][1] + -A[0][7] + A[1][4] + -A[1][7] + -A[2][1] + -A[2][4]) * (-B[1][5] + 0.125*B[1][6] + 0.125*B[1][8] + -B[4][5] + 0.125*B[4][7] + -0.125*B[4][10] + -0.125*B[7][7] + 0.125*B[7][8] + B[7][9])
	M32 = (-A[0][2] + -A[0][8] + A[1][5] + -A[1][8] + -A[2][2] + -A[2][5]) * (-B[2][5] + 0.125*B[2][6] + 0.125*B[2][8] + -B[5][5] + 0.125*B[5][7] + -0.125*B[5][10] + -0.125*B[8][7] + 0.125*B[8][8] + B[8][9])
	M33 = (A[0][0] + -A[0][6] + -A[1][3] + -A[1][6] + -A[2][0] + -A[2][3]) * (B[0][5] + 0.125*B[0][6] + 0.125*B[0][8] + B[3][5] + 0.125*B[3][7] + -0.125*B[3][10] + 0.125*B[6][7] + -0.125*B[6][8] + B[6][9])
	M34 = (A[0][1] + -A[0][7] + -A[1][4] + -A[1][7] + -A[2][1] + -A[2][4]) * (B[1][5] + 0.125*B[1][6] + 0.125*B[1][8] + B[4][5] + 0.125*B[4][7] + -0.125*B[4][10] + 0.125*B[7][7] + -0.125*B[7][8] + B[7][9])
	M35 = (A[0][2] + -A[0][8] + -A[1][5] + -A[1][8] + -A[2][2] + -A[2][5]) * (B[2][5] + 0.125*B[2][6] + 0.125*B[2][8] + B[5][5] + 0.125*B[5][7] + -0.125*B[5][10] + 0.125*B[8][7] + -0.125*B[8][8] + B[8][9])
	M36 = (-A[0][0] + -A[0][6] + -A[1][3] + -A[1][6] + A[2][0] + -A[2][3]) * (-0.125*B[0][6] + B[0][9] + 0.125*B[0][10] + 0.125*B[3][7] + 0.125*B[3][8] + -B[3][9] + -B[6][5] + 0.125*B[6][7] + 0.125*B[6][10])
	M37 = (-A[0][1] + -A[0][7] + -A[1][4] + -A[1][7] + A[2][1] + -A[2][4]) * (-0.125*B[1][6] + B[1][9] + 0.125*B[1][10] + 0.125*B[4][7] + 0.125*B[4][8] + -B[4][9] + -B[7][5] + 0.125*B[7][7] + 0.125*B[7][10])
	M38 = (-A[0][2] + -A[0][8] + -A[1][5] + -A[1][8] + A[2][2] + -A[2][5]) * (-0.125*B[2][6] + B[2][9] + 0.125*B[2][10] + 0.125*B[5][7] + 0.125*B[5][8] + -B[5][9] + -B[8][5] + 0.125*B[8][7] + 0.125*B[8][10])
	M39 = (-A[0][0] + -A[0][6] + -A[1][3] + A[1][6] + -A[2][0] + -A[2][3]) * (0.125*B[0][6] + -B[0][9] + 0.125*B[0][10] + 0.125*B[3][7] + -0.125*B[3][8] + -B[3][9] + B[6][5] + -0.125*B[6][7] + 0.125*B[6][10])
	M40 = (-A[0][1] + -A[0][7] + -A[1][4] + A[1][7] + -A[2][1] + -A[2][4]) * (0.125*B[1][6] + -B[1][9] + 0.125*B[1][10] + 0.125*B[4][7] + -0.125*B[4][8] + -B[4][9] + B[7][5] + -0.125*B[7][7] + 0.125*B[7][10])
	M41 = (-A[0][2] + -A[0][8] + -A[1][5] + A[1][8] + -A[2][2] + -A[2][5]) * (0.125*B[2][6] + -B[2][9] + 0.125*B[2][10] + 0.125*B[5][7] + -0.125*B[5][8] + -B[5][9] + B[8][5] + -0.125*B[8][7] + 0.125*B[8][10])
	M42 = (A[0][0] + -A[0][6] + A[1][3] + A[1][6] + -A[2][0] + -A[2][3]) * (-0.125*B[0][6] + -B[0][9] + -0.125*B[0][10] + -0.125*B[3][7] + 0.125*B[3][8] + -B[3][9] + -B[6][5] + -0.125*B[6][7] + 0.125*B[6][10])
	M43 = (A[0][1] + -A[0][7] + A[1][4] + A[1][7] + -A[2][1] + -A[2][4]) * (-0.125*B[1][6] + -B[1][9] + -0.125*B[1][10] + -0.125*B[4][7] + 0.125*B[4][8] + -B[4][9] + -B[7][5] + -0.125*B[7][7] + 0.125*B[7][10])
	M44 = (A[0][2] + -A[0][8] + A[1][5] + A[1][8] + -A[2][2] + -A[2][5]) * (-0.125*B[2][6] + -B[2][9] + -0.125*B[2][10] + -0.125*B[5][7] + 0.125*B[5][8] + -B[5][9] + -B[8][5] + -0.125*B[8][7] + 0.125*B[8][10])
	M45 = (A[0][0] + -A[0][6] + A[1][3] + -A[1][6] + A[2][0] + -A[2][3]) * (-0.125*B[0][6] + -B[0][9] + 0.125*B[0][10] + 0.125*B[3][7] + 0.125*B[3][8] + B[3][9] + -B[6][5] + -0.125*B[6][7] + -0.125*B[6][10])
	M46 = (A[0][1] + -A[0][7] + A[1][4] + -A[1][7] + A[2][1] + -A[2][4]) * (-0.125*B[1][6] + -B[1][9] + 0.125*B[1][10] + 0.125*B[4][7] + 0.125*B[4][8] + B[4][9] + -B[7][5] + -0.125*B[7][7] + -0.125*B[7][10])
	M47 = (A[0][2] + -A[0][8] + A[1][5] + -A[1][8] + A[2][2] + -A[2][5]) * (-0.125*B[2][6] + -B[2][9] + 0.125*B[2][10] + 0.125*B[5][7] + 0.125*B[5][8] + B[5][9] + -B[8][5] + -0.125*B[8][7] + -0.125*B[8][10])
	M48 = (-A[0][0] + -A[0][6] + A[2][0] + A[2][6]) * (0.125*B[0][8] + 0.125*B[0][10] + -0.125*B[3][6] + 0.125*B[3][7] + -B[6][5] + 0.125*B[6][6] + 0.125*B[6][7] + 0.125*B[6][8] + -B[6][9] + 0.125*B[6][10])
	M49 = (-A[0][1] + -A[0][7] + A[2][1] + A[2][7]) * (0.125*B[1][8] + 0.125*B[1][10] + -0.125*B[4][6] + 0.125*B[4][7] + -B[7][5] + 0.125*B[7][6] + 0.125*B[7][7] + 0.125*B[7][8] + -B[7][9] + 0.125*B[7][10])
	M50 = (-A[0][2] + -A[0][8] + A[2][2] + A[2][8]) * (0.125*B[2][8] + 0.125*B[2][10] + -0.125*B[5][6] + 0.125*B[5][7] + -B[8][5] + 0.125*B[8][6] + 0.125*B[8][7] + 0.125*B[8][8] + -B[8][9] + 0.125*B[8][10])
	M51 = (A[0][0] + A[0][6] + A[2][0] + A[2][6]) * (0.125*B[0][8] + 0.125*B[0][10] + -0.125*B[3][6] + 0.125*B[3][7] + B[6][5] + -0.125*B[6][6] + -0.125*B[6][7] + 0.125*B[6][8] + B[6][9] + 0.125*B[6][10])
	M52 = (A[0][1] + A[0][7] + A[2][1] + A[2][7]) * (0.125*B[1][8] + 0.125*B[1][10] + -0.125*B[4][6] + 0.125*B[4][7] + B[7][5] + -0.125*B[7][6] + -0.125*B[7][7] + 0.125*B[7][8] + B[7][9] + 0.125*B[7][10])
	M53 = (A[0][2] + A[0][8] + A[2][2] + A[2][8]) * (0.125*B[2][8] + 0.125*B[2][10] + -0.125*B[5][6] + 0.125*B[5][7] + B[8][5] + -0.125*B[8][6] + -0.125*B[8][7] + 0.125*B[8][8] + B[8][9] + 0.125*B[8][10])
	M54 = (-A[0][0] + A[0][6] + -A[2][0] + A[2][6]) * (0.125*B[0][8] + 0.125*B[0][10] + -0.125*B[3][6] + 0.125*B[3][7] + -B[6][5] + -0.125*B[6][6] + -0.125*B[6][7] + -0.125*B[6][8] + -B[6][9] + -0.125*B[6][10])
	M55 = (-A[0][1] + A[0][7] + -A[2][1] + A[2][7]) * (0.125*B[1][8] + 0.125*B[1][10] + -0.125*B[4][6] + 0.125*B[4][7] + -B[7][5] + -0.125*B[7][6] + -0.125*B[7][7] + -0.125*B[7][8] + -B[7][9] + -0.125*B[7][10])
	M56 = (-A[0][2] + A[0][8] + -A[2][2] + A[2][8]) * (0.125*B[2][8] + 0.125*B[2][10] + -0.125*B[5][6] + 0.125*B[5][7] + -B[8][5] + -0.125*B[8][6] + -0.125*B[8][7] + -0.125*B[8][8] + -B[8][9] + -0.125*B[8][10])
	M57 = (-A[0][0] + A[0][6] + A[2][0] + -A[2][6]) * (0.125*B[0][8] + 0.125*B[0][10] + -0.125*B[3][6] + 0.125*B[3][7] + B[6][5] + 0.125*B[6][6] + 0.125*B[6][7] + -0.125*B[6][8] + B[6][9] + -0.125*B[6][10])
	M58 = (-A[0][1] + A[0][7] + A[2][1] + -A[2][7]) * (0.125*B[1][8] + 0.125*B[1][10] + -0.125*B[4][6] + 0.125*B[4][7] + B[7][5] + 0.125*B[7][6] + 0.125*B[7][7] + -0.125*B[7][8] + B[7][9] + -0.125*B[7][10])
	M59 = (-A[0][2] + A[0][8] + A[2][2] + -A[2][8]) * (0.125*B[2][8] + 0.125*B[2][10] + -0.125*B[5][6] + 0.125*B[5][7] + B[8][5] + 0.125*B[8][6] + 0.125*B[8][7] + -0.125*B[8][8] + B[8][9] + -0.125*B[8][10])
	M60 = (-A[0][0] + -A[0][3] + A[2][0] + A[2][3]) * (-B[0][5] + -B[0][9] + -B[3][5] + 0.125*B[3][6] + -0.125*B[3][7] + 0.125*B[3][8] + -B[3][9] + 0.125*B[3][10] + -0.125*B[6][6] + -0.125*B[6][7])
	M61 = (-A[0][1] + -A[0][4] + A[2][1] + A[2][4]) * (-B[1][5] + -B[1][9] + -B[4][5] + 0.125*B[4][6] + -0.125*B[4][7] + 0.125*B[4][8] + -B[4][9] + 0.125*B[4][10] + -0.125*B[7][6] + -0.125*B[7][7])
	M62 = (-A[0][2] + -A[0][5] + A[2][2] + A[2][5]) * (-B[2][5] + -B[2][9] + -B[5][5] + 0.125*B[5][6] + -0.125*B[5][7] + 0.125*B[5][8] + -B[5][9] + 0.125*B[5][10] + -0.125*B[8][6] + -0.125*B[8][7])
	M63 = (-A[0][0] + A[0][3] + -A[2][0] + A[2][3]) * (-B[0][5] + -B[0][9] + B[3][5] + -0.125*B[3][6] + 0.125*B[3][7] + 0.125*B[3][8] + B[3][9] + 0.125*B[3][10] + -0.125*B[6][6] + -0.125*B[6][7])
	M64 = (-A[0][1] + A[0][4] + -A[2][1] + A[2][4]) * (-B[1][5] + -B[1][9] + B[4][5] + -0.125*B[4][6] + 0.125*B[4][7] + 0.125*B[4][8] + B[4][9] + 0.125*B[4][10] + -0.125*B[7][6] + -0.125*B[7][7])
	M65 = (-A[0][2] + A[0][5] + -A[2][2] + A[2][5]) * (-B[2][5] + -B[2][9] + B[5][5] + -0.125*B[5][6] + 0.125*B[5][7] + 0.125*B[5][8] + B[5][9] + 0.125*B[5][10] + -0.125*B[8][6] + -0.125*B[8][7])
	M66 = (-A[0][0] + -A[0][3] + -A[2][0] + -A[2][3]) * (-B[0][5] + -B[0][9] + -B[3][5] + -0.125*B[3][6] + 0.125*B[3][7] + -0.125*B[3][8] + -B[3][9] + -0.125*B[3][10] + -0.125*B[6][6] + -0.125*B[6][7])
	M67 = (-A[0][1] + -A[0][4] + -A[2][1] + -A[2][4]) * (-B[1][5] + -B[1][9] + -B[4][5] + -0.125*B[4][6] + 0.125*B[4][7] + -0.125*B[4][8] + -B[4][9] + -0.125*B[4][10] + -0.125*B[7][6] + -0.125*B[7][7])
	M68 = (-A[0][2] + -A[0][5] + -A[2][2] + -A[2][5]) * (-B[2][5] + -B[2][9] + -B[5][5] + -0.125*B[5][6] + 0.125*B[5][7] + -0.125*B[5][8] + -B[5][9] + -0.125*B[5][10] + -0.125*B[8][6] + -0.125*B[8][7])
	M69 = (A[0][0] + -A[0][3] + -A[2][0] + A[2][3]) * (B[0][5] + B[0][9] + -B[3][5] + -0.125*B[3][6] + 0.125*B[3][7] + 0.125*B[3][8] + -B[3][9] + 0.125*B[3][10] + 0.125*B[6][6] + 0.125*B[6][7])
	M70 = (A[0][1] + -A[0][4] + -A[2][1] + A[2][4]) * (B[1][5] + B[1][9] + -B[4][5] + -0.125*B[4][6] + 0.125*B[4][7] + 0.125*B[4][8] + -B[4][9] + 0.125*B[4][10] + 0.125*B[7][6] + 0.125*B[7][7])
	M71 = (A[0][2] + -A[0][5] + -A[2][2] + A[2][5]) * (B[2][5] + B[2][9] + -B[5][5] + -0.125*B[5][6] + 0.125*B[5][7] + 0.125*B[5][8] + -B[5][9] + 0.125*B[5][10] + 0.125*B[8][6] + 0.125*B[8][7])
	M72 = (A[1][0] + A[1][3] + A[2][0] + A[2][3]) * (-B[0][5] + -0.125*B[0][6] + 0.125*B[0][7] + -0.125*B[0][8] + B[0][9] + -0.125*B[0][10] + -B[3][5] + B[3][9] + 0.125*B[6][8] + -0.125*B[6][10])
	M73 = (A[1][1] + A[1][4] + A[2][1] + A[2][4]) * (-B[1][5] + -0.125*B[1][6] + 0.125*B[1][7] + -0.125*B[1][8] + B[1][9] + -0.125*B[1][10] + -B[4][5] + B[4][9] + 0.125*B[7][8] + -0.125*B[7][10])
	M74 = (A[1][2] + A[1][5] + A[2][2] + A[2][5]) * (-B[2][5] + -0.125*B[2][6] + 0.125*B[2][7] + -0.125*B[2][8] + B[2][9] + -0.125*B[2][10] + -B[5][5] + B[5][9] + 0.125*B[8][8] + -0.125*B[8][10])
	M75 = (A[1][0] + -A[1][3] + A[2][0] + -A[2][3]) * (-B[0][5] + -0.125*B[0][6] + 0.125*B[0][7] + 0.125*B[0][8] + B[0][9] + 0.125*B[0][10] + B[3][5] + -B[3][9] + -0.125*B[6][8] + 0.125*B[6][10])
	M76 = (A[1][1] + -A[1][4] + A[2][1] + -A[2][4]) * (-B[1][5] + -0.125*B[1][6] + 0.125*B[1][7] + 0.125*B[1][8] + B[1][9] + 0.125*B[1][10] + B[4][5] + -B[4][9] + -0.125*B[7][8] + 0.125*B[7][10])
	M77 = (A[1][2] + -A[1][5] + A[2][2] + -A[2][5]) * (-B[2][5] + -0.125*B[2][6] + 0.125*B[2][7] + 0.125*B[2][8] + B[2][9] + 0.125*B[2][10] + B[5][5] + -B[5][9] + -0.125*B[8][8] + 0.125*B[8][10])
	M78 = (A[1][0] + -A[1][3] + -A[2][0] + A[2][3]) * (-B[0][5] + 0.125*B[0][6] + -0.125*B[0][7] + -0.125*B[0][8] + B[0][9] + -0.125*B[0][10] + B[3][5] + -B[3][9] + -0.125*B[6][8] + 0.125*B[6][10])
	M79 = (A[1][1] + -A[1][4] + -A[2][1] + A[2][4]) * (-B[1][5] + 0.125*B[1][6] + -0.125*B[1][7] + -0.125*B[1][8] + B[1][9] + -0.125*B[1][10] + B[4][5] + -B[4][9] + -0.125*B[7][8] + 0.125*B[7][10])
	M80 = (A[1][2] + -A[1][5] + -A[2][2] + A[2][5]) * (-B[2][5] + 0.125*B[2][6] + -0.125*B[2][7] + -0.125*B[2][8] + B[2][9] + -0.125*B[2][10] + B[5][5] + -B[5][9] + -0.125*B[8][8] + 0.125*B[8][10])
	M81 = (A[1][0] + A[1][3] + -A[2][0] + -A[2][3]) * (B[0][5] + -0.125*B[0][6] + 0.125*B[0][7] + -0.125*B[0][8] + -B[0][9] + -0.125*B[0][10] + B[3][5] + -B[3][9] + -0.125*B[6][8] + 0.125*B[6][10])
	M82 = (A[1][1] + A[1][4] + -A[2][1] + -A[2][4]) * (B[1][5] + -0.125*B[1][6] + 0.125*B[1][7] + -0.125*B[1][8] + -B[1][9] + -0.125*B[1][10] + B[4][5] + -B[4][9] + -0.125*B[7][8] + 0.125*B[7][10])
	M83 = (A[1][2] + A[1][5] + -A[2][2] + -A[2][5]) * (B[2][5] + -0.125*B[2][6] + 0.125*B[2][7] + -0.125*B[2][8] + -B[2][9] + -0.125*B[2][10] + B[5][5] + -B[5][9] + -0.125*B[8][8] + 0.125*B[8][10])
	M84 = (A[1][3] + -A[1][6] + A[2][3] + -A[2][6]) * (0.125*B[0][8] + 0.125*B[0][10] + -0.125*B[3][6] + 0.125*B[3][7] + B[6][5] + 0.125*B[6][6] + -0.125*B[6][7] + -0.125*B[6][8] + -B[6][9] + 0.125*B[6][10])
	M85 = (A[1][4] + -A[1][7] + A[2][4] + -A[2][7]) * (0.125*B[1][8] + 0.125*B[1][10] + -0.125*B[4][6] + 0.125*B[4][7] + B[7][5] + 0.125*B[7][6] + -0.125*B[7][7] + -0.125*B[7][8] + -B[7][9] + 0.125*B[7][10])
	M86 = (A[1][5] + -A[1][8] + A[2][5] + -A[2][8]) * (0.125*B[2][8] + 0.125*B[2][10] + -0.125*B[5][6] + 0.125*B[5][7] + B[8][5] + 0.125*B[8][6] + -0.125*B[8][7] + -0.125*B[8][8] + -B[8][9] + 0.125*B[8][10])
	M87 = (A[1][3] + A[1][6] + A[2][3] + A[2][6]) * (0.125*B[0][8] + 0.125*B[0][10] + -0.125*B[3][6] + 0.125*B[3][7] + -B[6][5] + -0.125*B[6][6] + 0.125*B[6][7] + -0.125*B[6][8] + B[6][9] + 0.125*B[6][10])
	M88 = (A[1][4] + A[1][7] + A[2][4] + A[2][7]) * (0.125*B[1][8] + 0.125*B[1][10] + -0.125*B[4][6] + 0.125*B[4][7] + -B[7][5] + -0.125*B[7][6] + 0.125*B[7][7] + -0.125*B[7][8] + B[7][9] + 0.125*B[7][10])
	M89 = (A[1][5] + A[1][8] + A[2][5] + A[2][8]) * (0.125*B[2][8] + 0.125*B[2][10] + -0.125*B[5][6] + 0.125*B[5][7] + -B[8][5] + -0.125*B[8][6] + 0.125*B[8][7] + -0.125*B[8][8] + B[8][9] + 0.125*B[8][10])
	M90 = (A[1][3] + A[1][6] + -A[2][3] + -A[2][6]) * (0.125*B[0][8] + 0.125*B[0][10] + -0.125*B[3][6] + 0.125*B[3][7] + B[6][5] + -0.125*B[6][6] + 0.125*B[6][7] + 0.125*B[6][8] + -B[6][9] + -0.125*B[6][10])
	M91 = (A[1][4] + A[1][7] + -A[2][4] + -A[2][7]) * (0.125*B[1][8] + 0.125*B[1][10] + -0.125*B[4][6] + 0.125*B[4][7] + B[7][5] + -0.125*B[7][6] + 0.125*B[7][7] + 0.125*B[7][8] + -B[7][9] + -0.125*B[7][10])
	M92 = (A[1][5] + A[1][8] + -A[2][5] + -A[2][8]) * (0.125*B[2][8] + 0.125*B[2][10] + -0.125*B[5][6] + 0.125*B[5][7] + B[8][5] + -0.125*B[8][6] + 0.125*B[8][7] + 0.125*B[8][8] + -B[8][9] + -0.125*B[8][10])
	M93 = (-A[1][3] + A[1][6] + A[2][3] + -A[2][6]) * (0.125*B[0][8] + 0.125*B[0][10] + -0.125*B[3][6] + 0.125*B[3][7] + -B[6][5] + 0.125*B[6][6] + -0.125*B[6][7] + 0.125*B[6][8] + B[6][9] + -0.125*B[6][10])
	M94 = (-A[1][4] + A[1][7] + A[2][4] + -A[2][7]) * (0.125*B[1][8] + 0.125*B[1][10] + -0.125*B[4][6] + 0.125*B[4][7] + -B[7][5] + 0.125*B[7][6] + -0.125*B[7][7] + 0.125*B[7][8] + B[7][9] + -0.125*B[7][10])
	M95 = (-A[1][5] + A[1][8] + A[2][5] + -A[2][8]) * (0.125*B[2][8] + 0.125*B[2][10] + -0.125*B[5][6] + 0.125*B[5][7] + -B[8][5] + 0.125*B[8][6] + -0.125*B[8][7] + 0.125*B[8][8] + B[8][9] + -0.125*B[8][10])
	M96 = (-A[0][3] + -A[0][6] + -A[1][3] + -A[1][6]) * (B[0][5] + B[0][9] + B[3][5] + 0.125*B[3][6] + 0.125*B[3][7] + 0.125*B[3][8] + -B[3][9] + -0.125*B[3][10] + 0.125*B[6][6] + 0.125*B[6][7])
	M97 = (-A[0][4] + -A[0][7] + -A[1][4] + -A[1][7]) * (B[1][5] + B[1][9] + B[4][5] + 0.125*B[4][6] + 0.125*B[4][7] + 0.125*B[4][8] + -B[4][9] + -0.125*B[4][10] + 0.125*B[7][6] + 0.125*B[7][7])
	M98 = (-A[0][5] + -A[0][8] + -A[1][5] + -A[1][8]) * (B[2][5] + B[2][9] + B[5][5] + 0.125*B[5][6] + 0.125*B[5][7] + 0.125*B[5][8] + -B[5][9] + -0.125*B[5][10] + 0.125*B[8][6] + 0.125*B[8][7])
	M99 = (A[0][3] + -A[0][6] + -A[1][3] + A[1][6]) * (-B[0][5] + -B[0][9] + B[3][5] + 0.125*B[3][6] + 0.125*B[3][7] + -0.125*B[3][8] + -B[3][9] + 0.125*B[3][10] + -0.125*B[6][6] + -0.125*B[6][7])
	M100 = (A[0][4] + -A[0][7] + -A[1][4] + A[1][7]) * (-B[1][5] + -B[1][9] + B[4][5] + 0.125*B[4][6] + 0.125*B[4][7] + -0.125*B[4][8] + -B[4][9] + 0.125*B[4][10] + -0.125*B[7][6] + -0.125*B[7][7])
	M101 = (A[0][5] + -A[0][8] + -A[1][5] + A[1][8]) * (-B[2][5] + -B[2][9] + B[5][5] + 0.125*B[5][6] + 0.125*B[5][7] + -0.125*B[5][8] + -B[5][9] + 0.125*B[5][10] + -0.125*B[8][6] + -0.125*B[8][7])
	M102 = (-A[0][3] + A[0][6] + -A[1][3] + A[1][6]) * (-B[0][5] + -B[0][9] + -B[3][5] + 0.125*B[3][6] + 0.125*B[3][7] + 0.125*B[3][8] + B[3][9] + -0.125*B[3][10] + -0.125*B[6][6] + -0.125*B[6][7])
	M103 = (-A[0][4] + A[0][7] + -A[1][4] + A[1][7]) * (-B[1][5] + -B[1][9] + -B[4][5] + 0.125*B[4][6] + 0.125*B[4][7] + 0.125*B[4][8] + B[4][9] + -0.125*B[4][10] + -0.125*B[7][6] + -0.125*B[7][7])
	M104 = (-A[0][5] + A[0][8] + -A[1][5] + A[1][8]) * (-B[2][5] + -B[2][9] + -B[5][5] + 0.125*B[5][6] + 0.125*B[5][7] + 0.125*B[5][8] + B[5][9] + -0.125*B[5][10] + -0.125*B[8][6] + -0.125*B[8][7])
	M105 = (A[0][3] + A[0][6] + -A[1][3] + -A[1][6]) * (B[0][5] + B[0][9] + -B[3][5] + 0.125*B[3][6] + 0.125*B[3][7] + -0.125*B[3][8] + B[3][9] + 0.125*B[3][10] + 0.125*B[6][6] + 0.125*B[6][7])
	M106 = (A[0][4] + A[0][7] + -A[1][4] + -A[1][7]) * (B[1][5] + B[1][9] + -B[4][5] + 0.125*B[4][6] + 0.125*B[4][7] + -0.125*B[4][8] + B[4][9] + 0.125*B[4][10] + 0.125*B[7][6] + 0.125*B[7][7])
	M107 = (A[0][5] + A[0][8] + -A[1][5] + -A[1][8]) * (B[2][5] + B[2][9] + -B[5][5] + 0.125*B[5][6] + 0.125*B[5][7] + -0.125*B[5][8] + B[5][9] + 0.125*B[5][10] + 0.125*B[8][6] + 0.125*B[8][7])
	M108 = (A[0][0] + -A[0][6] + -A[1][0] + A[1][6]) * (B[0][5] + 0.125*B[0][6] + 0.125*B[0][7] + -0.125*B[0][8] + B[0][9] + 0.125*B[0][10] + -B[3][5] + B[3][9] + 0.125*B[6][8] + -0.125*B[6][10])
	M109 = (A[0][1] + -A[0][7] + -A[1][1] + A[1][7]) * (B[1][5] + 0.125*B[1][6] + 0.125*B[1][7] + -0.125*B[1][8] + B[1][9] + 0.125*B[1][10] + -B[4][5] + B[4][9] + 0.125*B[7][8] + -0.125*B[7][10])
	M110 = (A[0][2] + -A[0][8] + -A[1][2] + A[1][8]) * (B[2][5] + 0.125*B[2][6] + 0.125*B[2][7] + -0.125*B[2][8] + B[2][9] + 0.125*B[2][10] + -B[5][5] + B[5][9] + 0.125*B[8][8] + -0.125*B[8][10])
	M111 = (A[0][0] + A[0][6] + A[1][0] + A[1][6]) * (B[0][5] + -0.125*B[0][6] + -0.125*B[0][7] + -0.125*B[0][8] + B[0][9] + 0.125*B[0][10] + B[3][5] + -B[3][9] + -0.125*B[6][8] + 0.125*B[6][10])
	M112 = (A[0][1] + A[0][7] + A[1][1] + A[1][7]) * (B[1][5] + -0.125*B[1][6] + -0.125*B[1][7] + -0.125*B[1][8] + B[1][9] + 0.125*B[1][10] + B[4][5] + -B[4][9] + -0.125*B[7][8] + 0.125*B[7][10])
	M113 = (A[0][2] + A[0][8] + A[1][2] + A[1][8]) * (B[2][5] + -0.125*B[2][6] + -0.125*B[2][7] + -0.125*B[2][8] + B[2][9] + 0.125*B[2][10] + B[5][5] + -B[5][9] + -0.125*B[8][8] + 0.125*B[8][10])
	M114 = (-A[0][0] + A[0][6] + -A[1][0] + A[1][6]) * (B[0][5] + 0.125*B[0][6] + 0.125*B[0][7] + 0.125*B[0][8] + B[0][9] + -0.125*B[0][10] + B[3][5] + -B[3][9] + -0.125*B[6][8] + 0.125*B[6][10])
	M115 = (-A[0][1] + A[0][7] + -A[1][1] + A[1][7]) * (B[1][5] + 0.125*B[1][6] + 0.125*B[1][7] + 0.125*B[1][8] + B[1][9] + -0.125*B[1][10] + B[4][5] + -B[4][9] + -0.125*B[7][8] + 0.125*B[7][10])
	M116 = (-A[0][2] + A[0][8] + -A[1][2] + A[1][8]) * (B[2][5] + 0.125*B[2][6] + 0.125*B[2][7] + 0.125*B[2][8] + B[2][9] + -0.125*B[2][10] + B[5][5] + -B[5][9] + -0.125*B[8][8] + 0.125*B[8][10])
	M117 = (A[0][0] + A[0][6] + -A[1][0] + -A[1][6]) * (-B[0][5] + 0.125*B[0][6] + 0.125*B[0][7] + -0.125*B[0][8] + -B[0][9] + 0.125*B[0][10] + B[3][5] + -B[3][9] + -0.125*B[6][8] + 0.125*B[6][10])
	M118 = (A[0][1] + A[0][7] + -A[1][1] + -A[1][7]) * (-B[1][5] + 0.125*B[1][6] + 0.125*B[1][7] + -0.125*B[1][8] + -B[1][9] + 0.125*B[1][10] + B[4][5] + -B[4][9] + -0.125*B[7][8] + 0.125*B[7][10])
	M119 = (A[0][2] + A[0][8] + -A[1][2] + -A[1][8]) * (-B[2][5] + 0.125*B[2][6] + 0.125*B[2][7] + -0.125*B[2][8] + -B[2][9] + 0.125*B[2][10] + B[5][5] + -B[5][9] + -0.125*B[8][8] + 0.125*B[8][10])
	M120 = -A[1][1] * (-B[1][2] + B[1][3] + B[1][4])
	M121 = (-A[1][1] + -A[2][1] + -A[2][3]) * (-B[1][4] + B[3][2])
	M122 = -A[1][0] * (-B[0][2] + B[0][3] + B[0][4])
	M123 = (A[0][0] + A[0][3] + -A[1][0]) * (B[0][4] + -B[3][2])
	M124 = (A[0][0] + -A[0][2] + -A[1][0]) * (-B[0][3] + -B[2][2])
	M125 = (A[0][0] + -A[0][2] + -A[1][0] + A[1][1] + A[1][2] + A[2][1] + A[2][2]) * B[2][2]
	M126 = (A[0][0] + A[0][3] + -A[1][0] + -A[1][1] + -A[1][3] + -A[2][1] + -A[2][3]) * B[3][2]
	M127 = -A[0][1] * (B[0][1] + B[1][1] + -B[1][3] + -B[1][4])
	M128 = (-A[0][1] + A[2][1] + A[2][3]) * (-B[1][4] + B[3][1] + -B[3][3])
	M129 = (A[0][0] + -A[0][1] + -A[1][0]) * (B[0][1] + B[1][1] + B[1][2] + -B[1][3] + -B[1][4])
	M130 = (-A[0][1] + A[2][0]) * (B[0][1] + B[1][0])
	M131 = A[2][0] * (-B[0][0] + B[0][3] + B[0][4] + -B[1][0])
	M132 = (-A[1][1] + A[2][0] + -A[2][1]) * (-B[0][0] + -B[0][2] + B[0][3] + B[0][4] + -B[1][0])
	M133 = (A[0][0] + -A[0][2] + -A[2][0]) * (-B[0][3] + -B[2][0] + B[2][4])
	M134 = (A[2][1] + A[2][3]) * -B[1][4]
	M135 = (A[0][0] + -A[0][2]) * -B[0][3]
	M136 = (A[0][0] + A[0][3]) * B[0][4]
	M137 = (A[0][0] + A[0][3] + -A[2][0]) * (B[0][4] + B[2][4] + -B[3][0])
	M138 = (-A[1][1] + -A[2][1] + -A[2][2]) * (-B[1][3] + B[2][2])
	M139 = (-A[0][1] + A[2][1] + A[2][2]) * (-B[1][3] + B[2][1] + B[3][3])
	M140 = (-A[0][1] + -A[0][3] + A[2][1] + A[2][3]) * (-B[3][1] + B[3][3])
	M141 = (-A[0][1] + -A[0][3] + A[1][2] + -A[1][3] + A[2][1] + A[2][3]) * (-B[2][1] + -B[3][3])
	M142 = (A[1][2] + -A[1][3]) * B[2][4]
	M143 = (-A[1][1] + -A[2][1]) * (-B[0][0] + -B[0][2] + B[0][3] + B[0][4] + -B[1][0] + -B[1][2] + B[2][2] + B[3][2])
	M144 = (-A[1][0] + A[1][1] + -A[2][0] + A[2][1]) * (-B[0][0] + -B[0][2] + B[0][3] + B[0][4])
	M145 = (-A[0][1] + A[2][1]) * (B[1][0] + -B[1][1] + B[2][1] + B[3][1])
	M146 = (A[0][0] + -A[1][0]) * (B[0][1] + B[0][2] + B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + B[2][2] + -B[3][2])
	M147 = (-A[0][1] + -A[0][3] + -A[1][3] + A[2][1] + A[2][3]) * (-B[1][1] + -B[1][2] + B[1][3] + B[1][4] + -B[2][1] + -B[3][1])
	M148 = (A[0][0] + -A[0][1]) * B[0][1]
	M149 = A[2][2] * (-B[1][3] + -B[2][0] + B[2][3] + B[2][4] + B[3][3])
	M150 = (A[0][0] + -A[2][0]) * (-B[0][0] + B[0][1] + -B[2][0] + B[3][0])
	M151 = (A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * B[3][3]
	M152 = A[2][3] * (-B[1][4] + -B[3][0] + B[3][4])
	M153 = A[0][2] * (-B[0][3] + B[2][1] + -B[2][3])
	M154 = A[0][3] * (B[0][4] + B[2][4] + B[3][1] + -B[3][3] + -B[3][4])
	M155 = (A[2][1] + A[2][2]) * -B[1][3]
	M156 = (A[2][2] + -A[2][3]) * B[3][3]
	M157 = (2.0*A[0][0] + -A[0][2] + A[0][3] + -A[1][2] + A[1][3] + -2.0*A[2][0] + A[2][2] + -A[2][3]) * -B[3][0]
	M158 = (A[0][0] + -A[0][2] + -A[1][2] + A[1][3] + -A[2][0] + A[2][2]) * (B[2][4] + B[3][0])
	M159 = (A[0][2] + -A[0][3] + A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * -B[2][1]
	M160 = A[1][2] * (B[2][2] + -B[2][3] + -B[3][3])
	M161 = (A[0][0] + -2.0*A[0][1] + -A[0][3] + -A[1][0] + A[1][1] + -A[1][3] + A[2][1] + A[2][3]) * (-B[1][1] + -B[1][2] + B[1][3] + B[1][4])
	M162 = (A[0][0] + -A[0][2] + -A[1][2] + -A[2][0] + A[2][2]) * (-B[2][0] + -B[3][0])
	M163 = A[1][3] * (B[2][4] + -B[3][2] + B[3][4])
	M164 = (A[0][0] + -A[0][2] + -A[2][0] + A[2][2]) * (-B[2][0] + B[2][4])
	M165 = (A[0][2] + A[0][3] + -A[1][2] + A[1][3]) * B[2][4]
	M166 = (A[2][0] + -A[2][1]) * B[1][0]
	M167 = (-A[1][8] + A[2][5] + -A[2][8]) * (B[4][2] + -B[6][2] + B[8][0] + B[8][2])
	M168 = (-A[0][8] + A[2][7] + -A[2][8]) * (B[4][3] + -B[6][3] + -B[8][0] + B[8][3])
	M169 = (-A[1][8] + -A[2][7]) * (B[7][2] + -B[8][0])
	M170 = (-A[0][8] + -A[2][5]) * (-B[5][3] + -B[8][0])
	M171 = (-A[0][5] + A[0][7] + -A[2][5]) * (B[4][0] + -B[5][0] + B[5][3] + B[6][0])
	M172 = (-A[0][7] + -A[1][5]) * (B[4][0] + -B[5][0] + B[5][3] + B[6][0] + -B[7][0])
	M173 = (A[0][8] + -A[2][4] + A[2][8]) * (-B[4][3] + -B[8][1])
	M174 = (A[1][8] + A[2][6] + A[2][8]) * (B[6][2] + B[8][4])
	M175 = (A[2][5] + A[2][7] + -A[2][8]) * -B[8][0]
	M176 = (A[0][8] + A[2][6] + A[2][8]) * (B[6][3] + B[8][4])
	M177 = (A[1][5] + -A[1][7] + -A[2][7]) * (B[4][0] + B[6][0] + -B[7][0] + -B[7][2])
	M178 = (-A[1][8] + A[2][4] + -A[2][8]) * (-B[4][2] + -B[8][1])
	M179 = (A[2][4] + -A[2][8]) * -B[8][1]
	M180 = (A[2][6] + A[2][8]) * B[8][4]
	M181 = -A[1][8] * (B[7][2] + -B[8][1] + B[8][2] + B[8][4])
	M182 = (A[1][4] + A[1][7] + A[2][7]) * (B[4][0] + -B[7][1])
	M183 = (A[0][4] + A[0][5] + A[1][4] + A[1][7] + A[2][4] + A[2][5] + A[2][7]) * B[4][0]
	M184 = (A[1][6] + A[1][7] + A[2][7]) * (-B[6][0] + B[7][4])
	M185 = (-A[0][5] + -A[0][6] + -A[1][6] + -A[1][7] + -A[2][5] + -A[2][6] + -A[2][7]) * -B[6][0]
	M186 = (A[0][7] + A[1][7]) * (-B[4][3] + -B[6][3] + B[7][2] + B[7][3] + -B[8][1] + B[8][2] + B[8][3] + B[8][4])
	M187 = (A[0][7] + A[1][6] + A[1][7]) * (B[6][3] + B[7][4])
	M188 = (-A[0][7] + -A[1][4] + -A[1][7]) * (-B[4][3] + B[7][1])
	M189 = (-A[1][6] + -A[1][7]) * B[7][4]
	M190 = (-A[0][7] + -A[1][7] + A[1][8]) * (B[7][2] + -B[8][1] + B[8][2] + B[8][3] + B[8][4])
	M191 = -A[0][7] * (B[4][0] + -B[5][0] + B[5][3] + B[6][0] + -B[7][0] + -B[7][1] + B[7][3] + B[7][4])
	M192 = (A[1][4] + A[1][7]) * B[7][1]
	M193 = (-A[0][6] + -A[0][7] + -A[0][8] + -A[1][6] + -A[1][7] + -A[2][6] + -A[2][8]) * B[6][3]
	M194 = (A[1][5] + -A[1][7] + A[1][8]) * -B[7][2]
	M195 = (A[0][5] + -A[0][8] + A[1][5]) * B[5][3]
	M196 = (A[0][4] + A[0][7] + -A[0][8] + A[1][4] + A[1][7] + A[2][4] + -A[2][8]) * -B[4][3]
	M197 = (A[0][4] + A[0][5] + A[1][4] + A[1][5] + -A[1][8] + A[2][4] + -A[2][8]) * B[4][2]
	M198 = -A[2][5] * (B[4][2] + B[5][2] + -B[6][2] + B[8][2])
	M199 = A[2][7] * (-B[4][3] + B[6][3] + -B[7][0] + B[7][1] + -B[7][3] + B[7][4] + -B[8][0] + -B[8][3])
	M200 = (-A[0][5] + -A[1][5]) * (-B[4][2] + B[5][2] + B[5][3] + -B[6][2])
	M201 = (A[0][5] + A[0][6] + A[1][5]) * (B[4][4] + -B[5][4] + -B[6][2])
	M202 = (A[0][4] + A[0][5] + A[1][5]) * (-B[4][2] + B[5][1] + -B[6][1])
	M203 = -A[1][5] * (B[4][0] + B[4][4] + -B[5][0] + B[5][1] + -B[5][2] + -B[5][4] + B[6][0] + -B[6][1] + -B[7][0] + -B[7][2])
	M204 = -A[0][4] * (B[4][1] + -B[4][3] + -B[5][1] + B[6][1])
	M205 = (A[0][5] + A[0][6] + A[1][5] + A[1][6] + A[1][8] + A[2][6] + A[2][8]) * -B[6][2]
	M206 = (-A[0][5] + -A[0][6] + -A[2][5]) * (-B[4][4] + B[5][4] + -B[6][0] + B[6][1])
	M207 = (-A[0][5] + -A[0][6]) * (B[4][4] + -B[5][4] + -B[6][1])
	M208 = (A[0][4] + A[0][5] + A[2][5]) * (B[4][0] + -B[4][4] + -B[5][1] + B[6][1])
	M209 = (-A[1][4] + -A[1][5] + -A[1][6]) * (B[4][4] + -B[6][1])
	M210 = (A[0][5] + A[0][6] + A[1][4] + A[1][5] + A[1][6]) * -B[6][1]
	M211 = A[0][8] * (B[5][3] + -B[8][1] + B[8][3] + B[8][4])
	M212 = (A[0][7] + -A[0][8] + A[1][7] + -A[1][8]) * (-B[8][1] + B[8][2] + B[8][3] + B[8][4])
	M213 = (A[0][4] + A[0][5] + A[1][4] + A[1][5] + A[1][6]) * B[4][4]
	M214 = -A[2][6] * (B[6][0] + -B[6][1] + -B[6][4] + B[8][4])
	M215 = (-A[2][4] + A[2][6]) * -B[6][1]
	M216 = A[1][6] * (B[4][4] + -B[6][2] + -B[6][4] + B[7][4])
	M217 = (A[0][4] + A[0][5]) * (B[4][4] + B[5][1] + -B[6][1])
	M218 = -A[0][6] * (B[4][4] + -B[5][4] + B[6][3] + B[6][4])
	M219 = A[1][5] * (B[4][0] + -B[5][0] + B[6][0] + -B[7][0])
	M220 = -A[2][4] * (B[4][0] + -B[4][1] + -B[4][4] + -B[8][1])
	M221 = A[1][4] * (B[4][1] + -B[4][2] + -B[6][1] + -B[7][1])
	M222 = A[2][7] * (-B[7][0] + B[7][1] + B[7][4] + -B[8][0])
	M223 = A[2][5] * (-B[5][0] + B[5][1] + B[5][4] + -B[8][0])
	M224 = (A[2][4] + A[2][5]) * (B[4][4] + -B[6][1])

# Assemble result matrix
	C[0][0] = -M130 + -M131 + M133 + -M135 + M136 + -M137 + M142 + M148 + -M150 + M165 + M170 + M171 + M172 + M195 + M206 + M207 + M208 + M217 + M219 + M223
	C[1][0] = -M122 + M132 + M142 + M144 + M158 + M162 + -M164 + M166 + M169 + M177 + M182 + -M184 + -M189 + M192 + -M194 + -M219 + M222
	C[2][0] = -M131 + M133 + -M135 + M136 + -M137 + 2.0*M142 + M157 + M158 + -M164 + M165 + -M166 + M175 + -M182 + M183 + M184 + M185 + M189 + -M192 + -M206 + -M207 + -M208 + -M217 + -M222 + -M223
	C[3][0] = -M127 + M128 + -M134 + M139 + M140 + M141 + M148 + M151 + -M155 + -M159 + -M173 + -M179 + -M188 + -M192 + -M196 + -M204 + -M209 + -M210 + -M213 + M217
	C[4][0] = -M120 + -M129 + -M140 + -M141 + M147 + M148 + -M151 + -M156 + -M161 + M178 + -M179 + M192 + M197 + M202 + M209 + M213 + -M217 + M221
	C[5][0] = -M127 + M128 + M130 + -M134 + M139 + -M145 + -M155 + -M156 + -M166 + M179 + -M182 + M183 + -M192 + -M208 + -M215 + -M217 + M220 + -M224
	C[6][0] = M122 + -M123 + M124 + M127 + -M129 + -M135 + M136 + M146 + -M190 + -M194 + -M195 + -M200 + -M201 + -M202 + -M203 + -M207 + -M209 + -M210 + -M211 + -M212 + -M213 + M217 + -M219
	C[7][0] = M120 + M121 + M122 + -M123 + M124 + M125 + -M126 + M134 + -M135 + M136 + M138 + M155 + -M174 + M178 + -M179 + M180 + -M181 + M194 + M197 + M201 + M202 + M203 + -M205 + M207 + M209 + M210 + M213 + -M217 + M219
	C[8][0] = -M120 + -M121 + M131 + -M132 + -M134 + -M138 + M143 + -M155 + -M167 + -M169 + M174 + -M175 + -M178 + M179 + -M180 + M181 + -M198
	C[9][0] = -M135 + M139 + M141 + M151 + -M153 + -M155 + -M159 + M172 + -M173 + -M176 + -M179 + M180 + -M187 + -M188 + -M189 + -M191 + -M192 + -M193 + M195 + -M196 + M211 + M219
	C[10][0] = M124 + M125 + -M135 + M138 + -M151 + M155 + -M156 + -M160 + -M172 + M181 + M186 + M187 + M188 + M189 + M190 + M191 + M192 + -M219
	C[0][1] = M133 + -M135 + M149 + -M155 + -M156 + -M164 + -M168 + M170 + M173 + M175 + M176 + M179 + -M180 + -M199 + -M211 + M222
	C[1][1] = M128 + -M134 + M136 + M140 + M142 + -M154 + M165 + M176 + -M180 + M187 + M189 + M193 + M207 + M209 + M210 + M213 + -M218
	C[2][1] = M121 + -M123 + -M126 + M134 + M136 + M142 + M163 + M174 + -M180 + -M189 + -M201 + M205 + -M207 + -M209 + -M210 + -M216
	C[3][1] = -M134 + M136 + -M137 + 2.0*M142 + M152 + M157 + M158 + M165 + M180 + M184 + M185 + M189 + -M206 + -M207 + M214 + M215 + M224
	C[4][1] = -0.125*M0 + -0.125*M1 + -0.125*M2 + 0.125*M3 + 0.125*M4 + 0.125*M5 + 0.125*M6 + 0.125*M7 + 0.125*M8 + 0.125*M9 + 0.125*M10 + 0.125*M11 + 0.125*M36 + 0.125*M37 + 0.125*M38 + -0.125*M39 + -0.125*M40 + -0.125*M41 + 0.125*M42 + 0.125*M43 + 0.125*M44 + 0.125*M45 + 0.125*M46 + 0.125*M47 + 0.125*M60 + 0.125*M61 + 0.125*M62 + 0.125*M63 + 0.125*M64 + 0.125*M65 + 0.125*M66 + 0.125*M67 + 0.125*M68 + 0.125*M69 + 0.125*M70 + 0.125*M71 + 0.125*M72 + 0.125*M73 + 0.125*M74 + -0.125*M75 + -0.125*M76 + -0.125*M77 + -0.125*M78 + -0.125*M79 + -0.125*M80 + -0.125*M81 + -0.125*M82 + -0.125*M83 + -0.125*M96 + -0.125*M97 + -0.125*M98 + 0.125*M99 + 0.125*M100 + 0.125*M101 + 0.125*M102 + 0.125*M103 + 0.125*M104 + -0.125*M105 + -0.125*M106 + -0.125*M107 + 0.125*M108 + 0.125*M109 + 0.125*M110 + 0.125*M111 + 0.125*M112 + 0.125*M113 + -0.125*M114 + -0.125*M115 + -0.125*M116 + -0.125*M117 + -0.125*M118 + -0.125*M119
	C[5][1] = -0.125*M0 + -0.125*M1 + -0.125*M2 + -0.125*M3 + -0.125*M4 + -0.125*M5 + 0.125*M6 + 0.125*M7 + 0.125*M8 + -0.125*M9 + -0.125*M10 + -0.125*M11 + 0.125*M36 + 0.125*M37 + 0.125*M38 + 0.125*M39 + 0.125*M40 + 0.125*M41 + -0.125*M42 + -0.125*M43 + -0.125*M44 + 0.125*M45 + 0.125*M46 + 0.125*M47 + -0.125*M60 + -0.125*M61 + -0.125*M62 + 0.125*M63 + 0.125*M64 + 0.125*M65 + -0.125*M66 + -0.125*M67 + -0.125*M68 + 0.125*M69 + 0.125*M70 + 0.125*M71 + -0.125*M72 + -0.125*M73 + -0.125*M74 + -0.125*M75 + -0.125*M76 + -0.125*M77 + -0.125*M78 + -0.125*M79 + -0.125*M80 + 0.125*M81 + 0.125*M82 + 0.125*M83 + -0.125*M96 + -0.125*M97 + -0.125*M98 + -0.125*M99 + -0.125*M100 + -0.125*M101 + 0.125*M102 + 0.125*M103 + 0.125*M104 + 0.125*M105 + 0.125*M106 + 0.125*M107 + -0.125*M108 + -0.125*M109 + -0.125*M110 + 0.125*M111 + 0.125*M112 + 0.125*M113 + -0.125*M114 + -0.125*M115 + -0.125*M116 + 0.125*M117 + 0.125*M118 + 0.125*M119
	C[6][1] = 0.125*M12 + 0.125*M13 + 0.125*M14 + -0.125*M15 + -0.125*M16 + -0.125*M17 + 0.125*M18 + 0.125*M19 + 0.125*M20 + 0.125*M21 + 0.125*M22 + 0.125*M23 + -0.125*M24 + -0.125*M25 + -0.125*M26 + 0.125*M27 + 0.125*M28 + 0.125*M29 + 0.125*M30 + 0.125*M31 + 0.125*M32 + -0.125*M33 + -0.125*M34 + -0.125*M35 + -0.125*M48 + -0.125*M49 + -0.125*M50 + 0.125*M51 + 0.125*M52 + 0.125*M53 + -0.125*M54 + -0.125*M55 + -0.125*M56 + -0.125*M57 + -0.125*M58 + -0.125*M59 + -0.125*M84 + -0.125*M85 + -0.125*M86 + -0.125*M87 + -0.125*M88 + -0.125*M89 + -0.125*M90 + -0.125*M91 + -0.125*M92 + 0.125*M93 + 0.125*M94 + 0.125*M95
	C[7][1] = -M24 + -M25 + -M26 + M27 + M28 + M29 + -M30 + -M31 + -M32 + M33 + M34 + M35 + M36 + M37 + M38 + -M39 + -M40 + -M41 + -M42 + -M43 + -M44 + -M45 + -M46 + -M47 + -M48 + -M49 + -M50 + -M51 + -M52 + -M53 + -M54 + -M55 + -M56 + M57 + M58 + M59 + -M60 + -M61 + -M62 + -M63 + -M64 + -M65 + M66 + M67 + M68 + M69 + M70 + M71 + -M84 + -M85 + -M86 + M87 + M88 + M89 + -M90 + -M91 + -M92 + -M93 + -M94 + -M95 + -M96 + -M97 + -M98 + M99 + M100 + M101 + -M102 + -M103 + -M104 + M105 + M106 + M107
	C[8][1] = -M0 + -M1 + -M2 + M3 + M4 + M5 + -M6 + -M7 + -M8 + -M9 + -M10 + -M11 + -M12 + -M13 + -M14 + M15 + M16 + M17 + -M18 + -M19 + -M20 + -M21 + -M22 + -M23 + -M72 + -M73 + -M74 + -M75 + -M76 + -M77 + M78 + M79 + M80 + -M81 + -M82 + -M83 + -M108 + -M109 + -M110 + -M111 + -M112 + -M113 + -M114 + -M115 + -M116 + -M117 + -M118 + -M119
	C[9][1] = -M24 + -M25 + -M26 + -M27 + -M28 + -M29 + -M30 + -M31 + -M32 + -M33 + -M34 + -M35 + -M36 + -M37 + -M38 + -M39 + -M40 + -M41 + M42 + M43 + M44 + -M45 + -M46 + -M47 + M48 + M49 + M50 + -M51 + -M52 + -M53 + -M54 + -M55 + -M56 + -M57 + -M58 + -M59 + M60 + M61 + M62 + -M63 + -M64 + -M65 + M66 + M67 + M68 + -M69 + -M70 + -M71 + -M84 + -M85 + -M86 + -M87 + -M88 + -M89 + M90 + M91 + M92 + -M93 + -M94 + -M95 + M96 + M97 + M98 + M99 + M100 + M101 + -M102 + -M103 + -M104 + -M105 + -M106 + -M107
	C[10][1] = M0 + M1 + M2 + M3 + M4 + M5 + M6 + M7 + M8 + -M9 + -M10 + -M11 + M12 + M13 + M14 + M15 + M16 + M17 + -M18 + -M19 + -M20 + M21 + M22 + M23 + -M48 + -M49 + -M50 + -M51 + -M52 + -M53 + -M54 + -M55 + -M56 + M57 + M58 + M59 + M60 + M61 + M62 + M63 + M64 + M65 + -M66 + -M67 + -M68 + -M69 + -M70 + -M71 + -M84 + -M85 + -M86 + M87 + M88 + M89 + -M90 + -M91 + -M92 + -M93 + -M94 + -M95 + -M96 + -M97 + -M98 + M99 + M100 + M101 + -M102 + -M103 + -M104 + M105 + M106 + M107
	C[0][2] = -M24 + -M25 + -M26 + M27 + M28 + M29 + M30 + M31 + M32 + -M33 + -M34 + -M35 + -M36 + -M37 + -M38 + -M39 + -M40 + -M41 + -M42 + -M43 + -M44 + M45 + M46 + M47 + M72 + M73 + M74 + M75 + M76 + M77 + -M78 + -M79 + -M80 + M81 + M82 + M83 + -M108 + -M109 + -M110 + -M111 + -M112 + -M113 + -M114 + -M115 + -M116 + -M117 + -M118 + -M119
	C[1][2] = -M0 + -M1 + -M2 + -M3 + -M4 + -M5 + M6 + M7 + M8 + -M9 + -M10 + -M11 + -M12 + -M13 + -M14 + M15 + M16 + M17 + M18 + M19 + M20 + M21 + M22 + M23 + M48 + M49 + M50 + -M51 + -M52 + -M53 + -M54 + -M55 + -M56 + -M57 + -M58 + -M59 + -M60 + -M61 + -M62 + M63 + M64 + M65 + -M66 + -M67 + -M68 + M69 + M70 + M71 + M84 + M85 + M86 + M87 + M88 + M89 + -M90 + -M91 + -M92 + M93 + M94 + M95 + -M96 + -M97 + -M98 + -M99 + -M100 + -M101 + M102 + M103 + M104 + M105 + M106 + M107
	C[2][2] = M0 + M1 + M2 + -M3 + -M4 + -M5 + M6 + M7 + M8 + M9 + M10 + M11 + M24 + M25 + M26 + -M27 + -M28 + -M29 + -M30 + -M31 + -M32 + M33 + M34 + M35 + -M60 + -M61 + -M62 + M63 + M64 + M65 + M66 + M67 + M68 + -M69 + -M70 + -M71 + -M96 + -M97 + -M98 + -M99 + -M100 + -M101 + -M102 + -M103 + -M104 + -M105 + -M106 + -M107
	C[3][2] = -M12 + -M13 + -M14 + -M15 + -M16 + -M17 + M18 + M19 + M20 + -M21 + -M22 + -M23 + -M36 + -M37 + -M38 + M39 + M40 + M41 + M42 + M43 + M44 + M45 + M46 + M47 + M48 + M49 + M50 + M51 + M52 + M53 + M54 + M55 + M56 + -M57 + -M58 + -M59 + -M72 + -M73 + -M74 + M75 + M76 + M77 + -M78 + -M79 + -M80 + -M81 + -M82 + -M83 + M84 + M85 + M86 + -M87 + -M88 + -M89 + M90 + M91 + M92 + M93 + M94 + M95 + M108 + M109 + M110 + -M111 + -M112 + -M113 + -M114 + -M115 + -M116 + M117 + M118 + M119
	C[4][2] = -M12 + -M13 + -M14 + -M15 + -M16 + -M17 + -M18 + -M19 + -M20 + M21 + M22 + M23 + -M36 + -M37 + -M38 + M39 + M40 + M41 + -M42 + -M43 + -M44 + -M45 + -M46 + -M47 + M48 + M49 + M50 + M51 + M52 + M53 + -M54 + -M55 + -M56 + M57 + M58 + M59 + -M72 + -M73 + -M74 + M75 + M76 + M77 + M78 + M79 + M80 + M81 + M82 + M83 + M84 + M85 + M86 + -M87 + -M88 + -M89 + -M90 + -M91 + -M92 + -M93 + -M94 + -M95 + -M108 + -M109 + -M110 + -M111 + -M112 + -M113 + M114 + M115 + M116 + M117 + M118 + M119
	C[5][2] = 0.125*M12 + 0.125*M13 + 0.125*M14 + 0.125*M15 + 0.125*M16 + 0.125*M17 + 0.125*M18 + 0.125*M19 + 0.125*M20 + -0.125*M21 + -0.125*M22 + -0.125*M23 + 0.125*M24 + 0.125*M25 + 0.125*M26 + 0.125*M27 + 0.125*M28 + 0.125*M29 + -0.125*M30 + -0.125*M31 + -0.125*M32 + -0.125*M33 + -0.125*M34 + -0.125*M35 + 0.125*M60 + 0.125*M61 + 0.125*M62 + 0.125*M63 + 0.125*M64 + 0.125*M65 + 0.125*M66 + 0.125*M67 + 0.125*M68 + 0.125*M69 + 0.125*M70 + 0.125*M71 + 0.125*M72 + 0.125*M73 + 0.125*M74 + -0.125*M75 + -0.125*M76 + -0.125*M77 + -0.125*M78 + -0.125*M79 + -0.125*M80 + -0.125*M81 + -0.125*M82 + -0.125*M83 + 0.125*M96 + 0.125*M97 + 0.125*M98 + -0.125*M99 + -0.125*M100 + -0.125*M101 + -0.125*M102 + -0.125*M103 + -0.125*M104 + 0.125*M105 + 0.125*M106 + 0.125*M107 + 0.125*M108 + 0.125*M109 + 0.125*M110 + 0.125*M111 + 0.125*M112 + 0.125*M113 + -0.125*M114 + -0.125*M115 + -0.125*M116 + -0.125*M117 + -0.125*M118 + -0.125*M119
	C[6][2] = 0.125*M12 + 0.125*M13 + 0.125*M14 + -0.125*M15 + -0.125*M16 + -0.125*M17 + -0.125*M18 + -0.125*M19 + -0.125*M20 + -0.125*M21 + -0.125*M22 + -0.125*M23 + -0.125*M24 + -0.125*M25 + -0.125*M26 + -0.125*M27 + -0.125*M28 + -0.125*M29 + -0.125*M30 + -0.125*M31 + -0.125*M32 + -0.125*M33 + -0.125*M34 + -0.125*M35 + 0.125*M60 + 0.125*M61 + 0.125*M62 + -0.125*M63 + -0.125*M64 + -0.125*M65 + 0.125*M66 + 0.125*M67 + 0.125*M68 + -0.125*M69 + -0.125*M70 + -0.125*M71 + 0.125*M72 + 0.125*M73 + 0.125*M74 + 0.125*M75 + 0.125*M76 + 0.125*M77 + 0.125*M78 + 0.125*M79 + 0.125*M80 + -0.125*M81 + -0.125*M82 + -0.125*M83 + 0.125*M96 + 0.125*M97 + 0.125*M98 + 0.125*M99 + 0.125*M100 + 0.125*M101 + -0.125*M102 + -0.125*M103 + -0.125*M104 + -0.125*M105 + -0.125*M106 + -0.125*M107 + -0.125*M108 + -0.125*M109 + -0.125*M110 + 0.125*M111 + 0.125*M112 + 0.125*M113 + -0.125*M114 + -0.125*M115 + -0.125*M116 + 0.125*M117 + 0.125*M118 + 0.125*M119
	C[7][2] = -0.125*M0 + -0.125*M1 + -0.125*M2 + 0.125*M3 + 0.125*M4 + 0.125*M5 + -0.125*M6 + -0.125*M7 + -0.125*M8 + -0.125*M9 + -0.125*M10 + -0.125*M11 + 0.125*M36 + 0.125*M37 + 0.125*M38 + 0.125*M39 + 0.125*M40 + 0.125*M41 + 0.125*M42 + 0.125*M43 + 0.125*M44 + -0.125*M45 + -0.125*M46 + -0.125*M47 + -0.125*M48 + -0.125*M49 + -0.125*M50 + 0.125*M51 + 0.125*M52 + 0.125*M53 + -0.125*M54 + -0.125*M55 + -0.125*M56 + -0.125*M57 + -0.125*M58 + -0.125*M59 + 0.125*M84 + 0.125*M85 + 0.125*M86 + 0.125*M87 + 0.125*M88 + 0.125*M89 + 0.125*M90 + 0.125*M91 + 0.125*M92 + -0.125*M93 + -0.125*M94 + -0.125*M95
	C[8][2] = -M12 + -M13 + -M14 + M15 + M16 + M17 + -M18 + -M19 + -M20 + -M21 + -M22 + -M23 + -M36 + -M37 + -M38 + -M39 + -M40 + -M41 + -M42 + -M43 + -M44 + M45 + M46 + M47 + -M60 + -M61 + -M62 + M63 + M64 + M65 + M66 + M67 + M68 + -M69 + -M70 + -M71 + M96 + M97 + M98 + M99 + M100 + M101 + M102 + M103 + M104 + M105 + M106 + M107
	C[9][2] = M0 + M1 + M2 + M3 + M4 + M5 + M6 + M7 + M8 + -M9 + -M10 + -M11 + -M24 + -M25 + -M26 + M27 + M28 + M29 + -M30 + -M31 + -M32 + M33 + M34 + M35 + -M48 + -M49 + -M50 + -M51 + -M52 + -M53 + -M54 + -M55 + -M56 + M57 + M58 + M59 + -M72 + -M73 + -M74 + M75 + M76 + M77 + -M78 + -M79 + -M80 + -M81 + -M82 + -M83 + -M84 + -M85 + -M86 + M87 + M88 + M89 + -M90 + -M91 + -M92 + -M93 + -M94 + -M95 + -M108 + -M109 + -M110 + M111 + M112 + M113 + M114 + M115 + M116 + -M117 + -M118 + -M119
	C[10][2] = M0 + M1 + M2 + -M3 + -M4 + -M5 + -M6 + -M7 + -M8 + -M9 + -M10 + -M11 + -M24 + -M25 + -M26 + -M27 + -M28 + -M29 + M30 + M31 + M32 + M33 + M34 + M35 + M48 + M49 + M50 + M51 + M52 + M53 + -M54 + -M55 + -M56 + M57 + M58 + M59 + -M72 + -M73 + -M74 + M75 + M76 + M77 + M78 + M79 + M80 + M81 + M82 + M83 + -M84 + -M85 + -M86 + M87 + M88 + M89 + M90 + M91 + M92 + M93 + M94 + M95 + -M108 + -M109 + -M110 + -M111 + -M112 + -M113 + M114 + M115 + M116 + M117 + M118 + M119
	return (C, 225)