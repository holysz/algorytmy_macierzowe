# Matrix multiplication: C = A @ B
# A: 4×5, B: 5×10, C: 4×10
# Using 152 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(4)] for _ in range(10)])
	M0 = A[2][1] * (-B[1][1] + -B[1][3] + B[1][6] + B[1][8] + B[3][1] + -B[3][6])
	M1 = (A[0][1] + -A[0][2] + -A[2][2]) * (B[1][3] + -B[1][8] + -B[2][1] + B[2][6])
	M2 = (-A[2][4] + -A[3][1] + -A[3][4]) * (-B[1][3] + B[1][8] + -B[4][1] + B[4][6])
	M3 = (-A[0][4] + -A[3][1] + -A[3][4]) * (B[1][0] + -B[1][5] + B[4][1] + -B[4][6])
	M4 = (A[0][0] + -A[1][0] + A[1][1]) * (-B[0][1] + B[0][6] + B[1][0] + -B[1][5])
	M5 = (-A[0][3] + -A[2][1] + -A[2][3]) * (B[1][0] + -B[1][5] + B[3][1] + -B[3][6])
	M6 = (-A[1][4] + -A[3][1] + -A[3][4]) * (-B[1][4] + B[1][9] + B[4][1] + -B[4][6])
	M7 = (A[1][3] + -A[2][1] + -A[2][3]) * (-B[1][4] + B[1][9] + B[3][1] + -B[3][6])
	M8 = (A[3][1] + A[3][4]) * (B[4][1] + -B[4][6])
	M9 = (-A[0][1] + A[0][2] + -A[1][2]) * (-B[1][4] + B[1][9] + -B[2][1] + B[2][6])
	M10 = (-A[1][0] + A[1][1] + A[2][0]) * (-B[0][1] + B[0][6] + B[1][3] + -B[1][8])
	M11 = (A[1][0] + -A[1][1] + A[3][0]) * (B[0][1] + -B[0][6] + B[1][2] + -B[1][7])
	M12 = (-A[1][0] + A[1][1]) * (-B[0][1] + B[0][6])
	M13 = (A[0][1] + -A[0][2]) * (-B[2][1] + B[2][6])
	M14 = (A[2][1] + A[2][3]) * (-B[3][1] + B[3][6])
	M15 = -A[3][2] * (B[2][1] + -B[2][2] + -B[2][6] + B[2][7] + -B[4][2] + B[4][7])
	M16 = A[3][3] * (-B[3][1] + B[3][2] + B[3][6] + -B[3][7] + B[4][2] + -B[4][7])
	M17 = (-A[3][2] + -A[3][3] + A[3][4]) * (-B[4][2] + B[4][7])
	M18 = (-A[1][3] + -A[2][2] + A[2][3]) * (B[2][1] + B[2][3] + -B[2][4] + -B[2][6] + -B[2][8] + B[2][9] + B[3][3] + -B[3][8])
	M19 = -A[2][0] * (-B[0][1] + -B[0][3] + B[0][6] + B[0][8] + B[3][3] + -B[3][8])
	M20 = (-A[2][0] + A[2][2] + -A[2][3]) * (-B[3][3] + B[3][8])
	M21 = A[2][2] * (B[2][1] + B[2][3] + -B[2][6] + -B[2][8] + B[3][3] + -B[3][8])
	M22 = (-A[0][0] + A[0][2] + A[3][2]) * (-B[0][0] + -B[0][1] + B[0][2] + B[0][5] + B[0][6] + -B[0][7] + -B[2][0] + B[2][5])
	M23 = A[0][4] * (-B[2][0] + B[2][5] + -B[4][0] + -B[4][1] + B[4][5] + B[4][6])
	M24 = A[0][0] * (-B[0][0] + -B[0][1] + B[0][5] + B[0][6] + -B[2][0] + B[2][5])
	M25 = (-A[1][0] + A[1][4] + A[2][0]) * (-B[0][4] + B[0][9] + B[4][1] + B[4][3] + -B[4][4] + -B[4][6] + -B[4][8] + B[4][9])
	M26 = (-A[0][0] + A[0][2] + -A[0][4]) * (-B[2][0] + B[2][5])
	M27 = A[1][4] * (-B[0][4] + B[0][9] + B[4][1] + -B[4][4] + -B[4][6] + B[4][9])
	M28 = -A[1][3] * (-B[0][4] + B[0][9] + B[3][1] + -B[3][4] + -B[3][6] + B[3][9])
	M29 = (-A[0][4] + A[3][3] + -A[3][4]) * (-B[3][0] + -B[3][1] + B[3][2] + B[3][5] + B[3][6] + -B[3][7] + B[4][2] + -B[4][7])
	M30 = (-A[1][0] + A[1][3] + A[1][4]) * (B[0][4] + -B[0][9])
	M31 = -A[2][4] * (-B[4][1] + -B[4][3] + B[4][6] + B[4][8])
	M32 = A[1][2] * (B[2][1] + -B[2][4] + -B[2][6] + B[2][9])
	M33 = (-A[1][0] + A[1][3] + -A[3][0]) * (B[0][4] + -B[0][9] + -B[3][1] + B[3][2] + B[3][4] + B[3][6] + -B[3][7] + -B[3][9] + B[4][2] + -B[4][7])
	M34 = (A[1][0] + -A[1][3] + A[1][4] + A[3][0] + -A[3][2] + -A[3][3] + A[3][4]) * (B[2][1] + -B[2][2] + -B[2][4] + -B[2][6] + B[2][7] + B[2][9] + -B[4][2] + B[4][7])
	M35 = (-A[0][0] + A[1][0] + -A[1][3] + -A[1][4]) * (-B[0][4] + B[0][9] + B[3][0] + B[3][1] + -B[3][4] + -B[3][5] + -B[3][6] + B[3][9])
	M36 = -A[0][3] * (B[3][0] + B[3][1] + -B[3][5] + -B[3][6])
	M37 = (A[0][2] + -A[0][4] + -A[1][2]) * (B[2][0] + -B[2][5] + -B[3][0] + -B[3][1] + B[3][4] + B[3][5] + B[3][6] + -B[3][9] + B[4][0] + B[4][1] + -B[4][4] + -B[4][5] + -B[4][6] + B[4][9])
	M38 = (-A[0][3] + -A[2][0] + -A[2][3]) * (B[0][0] + B[0][1] + B[0][3] + -B[0][5] + -B[0][6] + -B[0][8] + -B[3][3] + B[3][8] + -B[4][0] + -B[4][1] + -B[4][3] + B[4][5] + B[4][6] + B[4][8])
	M39 = (A[0][0] + -A[0][2] + A[0][4] + -A[2][2]) * (B[2][0] + -B[2][5] + B[4][0] + B[4][1] + B[4][3] + -B[4][5] + -B[4][6] + -B[4][8])
	M40 = (A[2][0] + -A[2][2] + A[2][3] + A[3][3]) * (B[0][1] + -B[0][2] + B[0][3] + -B[0][6] + B[0][7] + -B[0][8] + -B[3][3] + B[3][8])
	M41 = (-A[2][4] + A[3][2] + -A[3][4]) * (B[0][1] + -B[0][2] + B[0][3] + -B[0][6] + B[0][7] + -B[0][8] + B[2][1] + -B[2][2] + B[2][3] + -B[2][6] + B[2][7] + -B[2][8] + -B[4][2] + B[4][7])
	M42 = A[1][1] * (-B[0][1] + B[0][6] + -B[1][1] + B[1][4] + B[1][6] + -B[1][9])
	M43 = A[0][1] * (B[1][0] + B[1][1] + -B[1][5] + -B[1][6] + B[2][1] + -B[2][6])
	M44 = (A[0][1] + -A[0][2] + -A[1][1] + A[1][2] + -A[1][3] + -A[1][4] + A[2][1] + A[2][3] + -A[3][1] + -A[3][4]) * (-B[1][4] + B[1][9])
	M45 = A[3][1] * (-B[1][1] + B[1][2] + B[1][6] + -B[1][7] + B[4][1] + -B[4][6])
	M46 = (-A[0][0] + A[0][1] + A[0][3] + A[0][4] + A[1][0] + -A[1][1] + A[2][1] + A[2][3] + A[3][1] + A[3][4]) * (B[1][0] + -B[1][5])
	M47 = (A[1][3] + -A[2][3]) * (B[1][4] + -B[1][9] + B[2][1] + B[2][3] + -B[2][4] + -B[2][6] + -B[2][8] + B[2][9] + B[3][3] + -B[3][4] + -B[3][8] + B[3][9])
	M48 = (A[1][0] + -A[1][4] + -A[2][0] + A[2][4]) * (B[4][1] + B[4][3] + -B[4][4] + -B[4][6] + -B[4][8] + B[4][9])
	M49 = (-A[0][2] + A[0][4] + A[1][2] + -A[1][4]) * (-B[3][0] + -B[3][1] + B[3][4] + B[3][5] + B[3][6] + -B[3][9] + B[4][0] + B[4][1] + -B[4][4] + -B[4][5] + -B[4][6] + B[4][9])
	M50 = (-A[1][0] + A[2][0]) * (-B[0][3] + B[0][4] + B[0][8] + -B[0][9] + -B[1][3] + B[1][8] + -B[4][1] + -B[4][3] + B[4][4] + B[4][6] + B[4][8] + -B[4][9])
	M51 = (A[0][0] + -A[0][2] + A[0][3] + A[0][4] + A[2][0] + -A[2][2] + A[2][3] + A[2][4]) * (-B[4][0] + -B[4][1] + -B[4][3] + B[4][5] + B[4][6] + B[4][8])
	M52 = (A[0][3] + A[2][3]) * (B[0][0] + B[0][1] + B[0][3] + -B[0][5] + -B[0][6] + -B[0][8] + B[1][0] + -B[1][5] + -B[3][0] + -B[3][3] + B[3][5] + B[3][8])
	M53 = (-A[1][2] + A[1][3] + A[2][2] + -A[2][3]) * (-B[2][1] + -B[2][3] + B[2][4] + B[2][6] + B[2][8] + -B[2][9])
	M54 = (A[1][4] + A[3][4]) * (-B[1][4] + B[1][9] + -B[2][1] + B[2][2] + B[2][4] + B[2][6] + -B[2][7] + -B[2][9] + B[4][2] + B[4][4] + -B[4][7] + -B[4][9])
	M55 = (A[2][2] + -A[2][3] + -A[2][4] + A[3][2] + -A[3][3] + -A[3][4]) * (B[0][1] + -B[0][2] + B[0][3] + -B[0][6] + B[0][7] + -B[0][8] + B[2][1] + -B[2][2] + B[2][3] + -B[2][6] + B[2][7] + -B[2][8])
	M56 = (-A[0][2] + A[1][2]) * (B[1][4] + -B[1][9] + -B[2][0] + B[2][4] + B[2][5] + -B[2][9] + -B[4][0] + -B[4][1] + B[4][4] + B[4][5] + B[4][6] + -B[4][9])
	M57 = (-A[1][0] + A[1][3] + -A[3][0] + A[3][3]) * (-B[2][1] + B[2][2] + B[2][4] + B[2][6] + -B[2][7] + -B[2][9] + B[3][1] + -B[3][2] + -B[3][4] + -B[3][6] + B[3][7] + B[3][9])
	M58 = (A[0][2] + A[2][2]) * (-B[0][0] + -B[0][1] + -B[0][3] + B[0][5] + B[0][6] + B[0][8] + -B[1][3] + B[1][8] + -B[2][0] + -B[2][3] + B[2][5] + B[2][8])
	M59 = (A[0][0] + -A[0][2] + A[0][3] + A[2][0] + -A[2][2] + A[2][3]) * (-B[0][0] + -B[0][1] + -B[0][3] + B[0][5] + B[0][6] + B[0][8] + B[4][0] + B[4][1] + B[4][3] + -B[4][5] + -B[4][6] + -B[4][8])
	M60 = (-A[0][4] + -A[3][4]) * (-B[1][0] + B[1][5] + B[3][0] + B[3][1] + -B[3][2] + -B[3][5] + -B[3][6] + B[3][7] + B[4][0] + -B[4][2] + -B[4][5] + B[4][7])
	M61 = (-A[0][2] + -A[0][3] + A[0][4] + -A[3][2] + -A[3][3] + A[3][4]) * (-B[3][0] + -B[3][1] + B[3][2] + B[3][5] + B[3][6] + -B[3][7])
	M62 = (-A[0][2] + -A[3][2]) * (B[0][0] + B[0][1] + -B[0][2] + -B[0][5] + -B[0][6] + B[0][7] + -B[1][2] + B[1][7] + B[2][0] + -B[2][2] + -B[2][5] + B[2][7] + -B[3][0] + -B[3][1] + B[3][2] + B[3][5] + B[3][6] + -B[3][7])
	M63 = (-A[0][0] + A[0][2] + -A[3][0] + A[3][2]) * (-B[0][0] + -B[0][1] + B[0][2] + B[0][5] + B[0][6] + -B[0][7])
	M64 = (-A[2][0] + A[2][2] + -A[2][3] + -A[2][4] + -A[3][0] + A[3][2] + -A[3][3] + -A[3][4]) * (-B[0][1] + B[0][2] + -B[0][3] + B[0][6] + -B[0][7] + B[0][8] + B[1][3] + -B[1][8] + -B[2][1] + B[2][2] + -B[2][3] + B[2][6] + -B[2][7] + B[2][8] + B[4][2] + -B[4][3] + -B[4][7] + B[4][8])
	M65 = A[3][0] * (B[0][1] + -B[0][2] + -B[0][6] + B[0][7])
	M66 = (-A[2][1] + -A[2][3] + -A[3][3]) * (B[1][2] + -B[1][7] + -B[3][1] + B[3][6])
	M67 = (-A[0][1] + A[0][2] + A[1][0] + -A[1][1] + -A[2][1] + -A[2][3] + A[3][0] + -A[3][1] + A[3][2] + -A[3][3]) * (B[1][2] + -B[1][7])
	M68 = (-A[0][0] + A[1][0]) * (B[0][0] + -B[0][4] + -B[0][5] + B[0][9] + B[1][0] + -B[1][5] + B[3][0] + B[3][1] + -B[3][4] + -B[3][5] + -B[3][6] + B[3][9])
	M69 = (A[1][0] + A[3][0]) * (B[0][2] + B[0][4] + -B[0][7] + -B[0][9] + B[1][2] + -B[1][7] + B[2][1] + -B[2][2] + -B[2][4] + -B[2][6] + B[2][7] + B[2][9] + -B[3][1] + B[3][2] + B[3][4] + B[3][6] + -B[3][7] + -B[3][9])
	M70 = (-A[0][1] + A[0][2] + -A[1][0] + A[1][1] + A[2][0] + -A[2][1] + A[2][2] + -A[2][4] + -A[3][1] + -A[3][4]) * (B[1][3] + -B[1][8])
	M71 = (-A[0][1] + A[0][2] + A[3][2]) * (-B[1][2] + B[1][7] + -B[2][1] + B[2][6])
	M72 = (-A[1][2] + -A[1][3] + A[1][4] + -A[3][2] + -A[3][3] + A[3][4]) * (-B[2][1] + B[2][2] + B[2][4] + B[2][6] + -B[2][7] + -B[2][9])
	M73 = (-A[2][3] + -A[3][3]) * (B[1][2] + -B[1][7] + B[2][1] + -B[2][2] + B[2][3] + -B[2][6] + B[2][7] + -B[2][8] + -B[3][2] + B[3][3] + B[3][7] + -B[3][8])
	M74 = (-A[2][0] + A[2][2] + -A[2][3] + -A[3][0] + A[3][2] + -A[3][3]) * (B[1][3] + -B[1][8] + -B[2][1] + B[2][2] + -B[2][3] + B[2][6] + -B[2][7] + B[2][8] + B[4][2] + -B[4][3] + -B[4][7] + B[4][8])
	M75 = (-A[0][0] + -A[0][2] + A[0][3] + A[0][4] + A[1][0] + A[1][2] + -A[1][3] + -A[1][4]) * (-B[3][0] + -B[3][1] + B[3][4] + B[3][5] + B[3][6] + -B[3][9])
	M76 = -A[2][1] * (-B[1][1] + -B[1][3] + B[3][1])
	M77 = (-A[0][1] + A[0][2] + A[2][2]) * (B[1][3] + -B[2][1])
	M78 = (A[2][4] + A[3][1] + A[3][4]) * (-B[1][3] + -B[4][1])
	M79 = (A[0][4] + A[3][1] + A[3][4]) * (B[1][0] + B[4][1])
	M80 = (-A[0][0] + A[1][0] + -A[1][1]) * (-B[0][1] + B[1][0])
	M81 = (A[0][3] + A[2][1] + A[2][3]) * (B[1][0] + B[3][1])
	M82 = (A[1][4] + A[3][1] + A[3][4]) * (-B[1][4] + B[4][1])
	M83 = (-A[1][3] + A[2][1] + A[2][3]) * (-B[1][4] + B[3][1])
	M84 = (-A[3][1] + -A[3][4]) * B[4][1]
	M85 = (A[0][1] + -A[0][2] + A[1][2]) * (-B[1][4] + -B[2][1])
	M86 = (A[1][0] + -A[1][1] + -A[2][0]) * (-B[0][1] + B[1][3])
	M87 = (-A[1][0] + A[1][1] + -A[3][0]) * (B[0][1] + B[1][2])
	M88 = (A[1][0] + -A[1][1]) * -B[0][1]
	M89 = (-A[0][1] + A[0][2]) * -B[2][1]
	M90 = (-A[2][1] + -A[2][3]) * -B[3][1]
	M91 = A[3][2] * (B[2][1] + -B[2][2] + -B[4][2])
	M92 = -A[3][3] * (-B[3][1] + B[3][2] + B[4][2])
	M93 = (A[3][2] + A[3][3] + -A[3][4]) * -B[4][2]
	M94 = (A[1][3] + A[2][2] + -A[2][3]) * (B[2][1] + B[2][3] + -B[2][4] + B[3][3])
	M95 = A[2][0] * (-B[0][1] + -B[0][3] + B[3][3])
	M96 = (A[2][0] + -A[2][2] + A[2][3]) * -B[3][3]
	M97 = -A[2][2] * (B[2][1] + B[2][3] + B[3][3])
	M98 = (A[0][0] + -A[0][2] + -A[3][2]) * (-B[0][0] + -B[0][1] + B[0][2] + -B[2][0])
	M99 = -A[0][4] * (-B[2][0] + -B[4][0] + -B[4][1])
	M100 = -A[0][0] * (-B[0][0] + -B[0][1] + -B[2][0])
	M101 = (A[1][0] + -A[1][4] + -A[2][0]) * (-B[0][4] + B[4][1] + B[4][3] + -B[4][4])
	M102 = (A[0][0] + -A[0][2] + A[0][4]) * -B[2][0]
	M103 = -A[1][4] * (-B[0][4] + B[4][1] + -B[4][4])
	M104 = A[1][3] * (-B[0][4] + B[3][1] + -B[3][4])
	M105 = (A[0][4] + -A[3][3] + A[3][4]) * (-B[3][0] + -B[3][1] + B[3][2] + B[4][2])
	M106 = (A[1][0] + -A[1][3] + -A[1][4]) * B[0][4]
	M107 = A[2][4] * (-B[4][1] + -B[4][3])
	M108 = -A[1][2] * (B[2][1] + -B[2][4])
	M109 = (A[1][0] + -A[1][3] + A[3][0]) * (B[0][4] + -B[3][1] + B[3][2] + B[3][4] + B[4][2])
	M110 = (-A[1][0] + A[1][3] + -A[1][4] + -A[3][0] + A[3][2] + A[3][3] + -A[3][4]) * (B[2][1] + -B[2][2] + -B[2][4] + -B[4][2])
	M111 = (A[0][0] + -A[1][0] + A[1][3] + A[1][4]) * (-B[0][4] + B[3][0] + B[3][1] + -B[3][4])
	M112 = A[0][3] * (B[3][0] + B[3][1])
	M113 = (-A[0][2] + A[0][4] + A[1][2]) * (B[2][0] + -B[3][0] + -B[3][1] + B[3][4] + B[4][0] + B[4][1] + -B[4][4])
	M114 = (A[0][3] + A[2][0] + A[2][3]) * (B[0][0] + B[0][1] + B[0][3] + -B[3][3] + -B[4][0] + -B[4][1] + -B[4][3])
	M115 = (-A[0][0] + A[0][2] + -A[0][4] + A[2][2]) * (B[2][0] + B[4][0] + B[4][1] + B[4][3])
	M116 = (-A[2][0] + A[2][2] + -A[2][3] + -A[3][3]) * (B[0][1] + -B[0][2] + B[0][3] + -B[3][3])
	M117 = (A[2][4] + -A[3][2] + A[3][4]) * (B[0][1] + -B[0][2] + B[0][3] + B[2][1] + -B[2][2] + B[2][3] + -B[4][2])
	M118 = -A[1][1] * (-B[0][1] + -B[1][1] + B[1][4])
	M119 = -A[0][1] * (B[1][0] + B[1][1] + B[2][1])
	M120 = (-A[0][1] + A[0][2] + A[1][1] + -A[1][2] + A[1][3] + A[1][4] + -A[2][1] + -A[2][3] + A[3][1] + A[3][4]) * -B[1][4]
	M121 = -A[3][1] * (-B[1][1] + B[1][2] + B[4][1])
	M122 = (A[0][0] + -A[0][1] + -A[0][3] + -A[0][4] + -A[1][0] + A[1][1] + -A[2][1] + -A[2][3] + -A[3][1] + -A[3][4]) * B[1][0]
	M123 = (-A[1][3] + A[2][3]) * (B[1][4] + B[2][1] + B[2][3] + -B[2][4] + B[3][3] + -B[3][4])
	M124 = (-A[1][0] + A[1][4] + A[2][0] + -A[2][4]) * (B[4][1] + B[4][3] + -B[4][4])
	M125 = (A[0][2] + -A[0][4] + -A[1][2] + A[1][4]) * (-B[3][0] + -B[3][1] + B[3][4] + B[4][0] + B[4][1] + -B[4][4])
	M126 = (A[1][0] + -A[2][0]) * (-B[0][3] + B[0][4] + -B[1][3] + -B[4][1] + -B[4][3] + B[4][4])
	M127 = (-A[0][0] + A[0][2] + -A[0][3] + -A[0][4] + -A[2][0] + A[2][2] + -A[2][3] + -A[2][4]) * (-B[4][0] + -B[4][1] + -B[4][3])
	M128 = (-A[0][3] + -A[2][3]) * (B[0][0] + B[0][1] + B[0][3] + B[1][0] + -B[3][0] + -B[3][3])
	M129 = (A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * (-B[2][1] + -B[2][3] + B[2][4])
	M130 = (-A[1][4] + -A[3][4]) * (-B[1][4] + -B[2][1] + B[2][2] + B[2][4] + B[4][2] + B[4][4])
	M131 = (-A[2][2] + A[2][3] + A[2][4] + -A[3][2] + A[3][3] + A[3][4]) * (B[0][1] + -B[0][2] + B[0][3] + B[2][1] + -B[2][2] + B[2][3])
	M132 = (A[0][2] + -A[1][2]) * (B[1][4] + -B[2][0] + B[2][4] + -B[4][0] + -B[4][1] + B[4][4])
	M133 = (A[1][0] + -A[1][3] + A[3][0] + -A[3][3]) * (-B[2][1] + B[2][2] + B[2][4] + B[3][1] + -B[3][2] + -B[3][4])
	M134 = (-A[0][2] + -A[2][2]) * (-B[0][0] + -B[0][1] + -B[0][3] + -B[1][3] + -B[2][0] + -B[2][3])
	M135 = (-A[0][0] + A[0][2] + -A[0][3] + -A[2][0] + A[2][2] + -A[2][3]) * (-B[0][0] + -B[0][1] + -B[0][3] + B[4][0] + B[4][1] + B[4][3])
	M136 = (A[0][4] + A[3][4]) * (-B[1][0] + B[3][0] + B[3][1] + -B[3][2] + B[4][0] + -B[4][2])
	M137 = (A[0][2] + A[0][3] + -A[0][4] + A[3][2] + A[3][3] + -A[3][4]) * (-B[3][0] + -B[3][1] + B[3][2])
	M138 = (A[0][2] + A[3][2]) * (B[0][0] + B[0][1] + -B[0][2] + -B[1][2] + B[2][0] + -B[2][2] + -B[3][0] + -B[3][1] + B[3][2])
	M139 = (A[0][0] + -A[0][2] + A[3][0] + -A[3][2]) * (-B[0][0] + -B[0][1] + B[0][2])
	M140 = (A[2][0] + -A[2][2] + A[2][3] + A[2][4] + A[3][0] + -A[3][2] + A[3][3] + A[3][4]) * (-B[0][1] + B[0][2] + -B[0][3] + B[1][3] + -B[2][1] + B[2][2] + -B[2][3] + B[4][2] + -B[4][3])
	M141 = -A[3][0] * (B[0][1] + -B[0][2])
	M142 = (A[2][1] + A[2][3] + A[3][3]) * (B[1][2] + -B[3][1])
	M143 = (A[0][1] + -A[0][2] + -A[1][0] + A[1][1] + A[2][1] + A[2][3] + -A[3][0] + A[3][1] + -A[3][2] + A[3][3]) * B[1][2]
	M144 = (A[0][0] + -A[1][0]) * (B[0][0] + -B[0][4] + B[1][0] + B[3][0] + B[3][1] + -B[3][4])
	M145 = (-A[1][0] + -A[3][0]) * (B[0][2] + B[0][4] + B[1][2] + B[2][1] + -B[2][2] + -B[2][4] + -B[3][1] + B[3][2] + B[3][4])
	M146 = (A[0][1] + -A[0][2] + A[1][0] + -A[1][1] + -A[2][0] + A[2][1] + -A[2][2] + A[2][4] + A[3][1] + A[3][4]) * B[1][3]
	M147 = (A[0][1] + -A[0][2] + -A[3][2]) * (-B[1][2] + -B[2][1])
	M148 = (A[1][2] + A[1][3] + -A[1][4] + A[3][2] + A[3][3] + -A[3][4]) * (-B[2][1] + B[2][2] + B[2][4])
	M149 = (A[2][3] + A[3][3]) * (B[1][2] + B[2][1] + -B[2][2] + B[2][3] + -B[3][2] + B[3][3])
	M150 = (A[2][0] + -A[2][2] + A[2][3] + A[3][0] + -A[3][2] + A[3][3]) * (B[1][3] + -B[2][1] + B[2][2] + -B[2][3] + B[4][2] + -B[4][3])
	M151 = (A[0][0] + A[0][2] + -A[0][3] + -A[0][4] + -A[1][0] + -A[1][2] + A[1][3] + A[1][4]) * (-B[3][0] + -B[3][1] + B[3][4])

# Assemble result matrix
	C[0][0] = -M79 + -M80 + -M81 + -M84 + M88 + M90 + M99 + M100 + M102 + M112 + -M122
	C[1][0] = -M80 + M88 + M100 + M102 + M103 + -M104 + M111 + M113 + M125 + -M144
	C[2][0] = M81 + -M90 + M95 + -M102 + M107 + -M112 + M114 + M115 + M127 + M128
	C[3][0] = M79 + M84 + -M92 + M98 + -M99 + -M102 + M105 + M136 + -M139 + M141
	C[4][0] = M79 + M80 + M81 + M84 + -M88 + -M89 + -M90 + -M119 + M122
	C[5][0] = M82 + -M83 + M84 + -M85 + -M88 + -M89 + M90 + M118 + -M120
	C[6][0] = M76 + -M77 + -M78 + M84 + M86 + -M88 + M89 + M90 + -M146
	C[7][0] = -M84 + -M87 + M88 + M89 + -M90 + M121 + -M142 + M143 + M147
	C[8][0] = -M89 + M91 + -M93 + M98 + M100 + M105 + M112 + M137 + -M138 + -M147
	C[9][0] = M87 + -M88 + -M93 + M104 + -M108 + -M109 + M110 + -M141 + -M145 + M148
	C[0][1] = M90 + M92 + -M93 + -M95 + -M97 + M116 + -M117 + M131 + M142 + -M149
	C[1][1] = -M87 + M88 + M89 + -M90 + -M91 + -M92 + M93 + M141 + -M142 + M143 + M147
	C[2][1] = -M77 + M89 + M96 + M97 + -M99 + -M100 + -M114 + -M115 + M134 + M135
	C[3][1] = -M86 + M88 + M94 + -M95 + -M96 + -M101 + M103 + M108 + -M126 + -M129
	C[4][1] = M77 + M78 + -M84 + -M86 + M88 + -M89 + -M95 + -M96 + -M97 + -M107 + M146
	C[5][1] = -M78 + M84 + -M91 + M96 + M107 + M116 + -M117 + -M140 + M141 + M150
	C[6][1] = -M85 + -M89 + M99 + M106 + M108 + -M111 + M112 + -M113 + M132 + -M151
	C[7][1] = M82 + -M83 + M84 + -M85 + -M89 + M90 + M103 + -M104 + M106 + M108 + -M120
	C[8][1] = -M83 + M90 + -M94 + -M97 + M101 + -M104 + M106 + -M107 + -M123 + M124
	C[9][1] = -M82 + -M84 + M91 + M92 + -M103 + -M106 + M109 + -M110 + -M130 + M133
	C[0][2] = -M3 + -M4 + -M5 + -M8 + M12 + M14 + M23 + M24 + M26 + M36 + -M46 + -M79 + -M80 + -M81 + -M84 + M88 + M90 + M99 + M100 + M102 + M112 + -M122
	C[1][2] = -M4 + M12 + M24 + M26 + M27 + -M28 + M35 + M37 + M49 + -M68 + -M80 + M88 + M100 + M102 + M103 + -M104 + M111 + M113 + M125 + -M144
	C[2][2] = M5 + -M14 + M19 + -M26 + M31 + -M36 + M38 + M39 + M51 + M52 + M81 + -M90 + M95 + -M102 + M107 + -M112 + M114 + M115 + M127 + M128
	C[3][2] = M3 + M8 + -M16 + M22 + -M23 + -M26 + M29 + M60 + -M63 + M65 + M79 + M84 + -M92 + M98 + -M99 + -M102 + M105 + M136 + -M139 + M141
	C[4][2] = M3 + M4 + M5 + M8 + -M12 + -M13 + -M14 + -M43 + M46 + M79 + M80 + M81 + M84 + -M88 + -M89 + -M90 + -M119 + M122
	C[5][2] = M6 + -M7 + M8 + -M9 + -M12 + -M13 + M14 + M42 + -M44 + M82 + -M83 + M84 + -M85 + -M88 + -M89 + M90 + M118 + -M120
	C[6][2] = M0 + -M1 + -M2 + M8 + M10 + -M12 + M13 + M14 + -M70 + M76 + -M77 + -M78 + M84 + M86 + -M88 + M89 + M90 + -M146
	C[7][2] = -M8 + -M11 + M12 + M13 + -M14 + M45 + -M66 + M67 + M71 + -M84 + -M87 + M88 + M89 + -M90 + M121 + -M142 + M143 + M147
	C[8][2] = -M13 + M15 + -M17 + M22 + M24 + M29 + M36 + M61 + -M62 + -M71 + -M89 + M91 + -M93 + M98 + M100 + M105 + M112 + M137 + -M138 + -M147
	C[9][2] = M11 + -M12 + -M17 + M28 + -M32 + -M33 + M34 + -M65 + -M69 + M72 + M87 + -M88 + -M93 + M104 + -M108 + -M109 + M110 + -M141 + -M145 + M148
	C[0][3] = M14 + M16 + -M17 + -M19 + -M21 + M40 + -M41 + M55 + M66 + -M73 + M90 + M92 + -M93 + -M95 + -M97 + M116 + -M117 + M131 + M142 + -M149
	C[1][3] = -M11 + M12 + M13 + -M14 + -M15 + -M16 + M17 + M65 + -M66 + M67 + M71 + -M87 + M88 + M89 + -M90 + -M91 + -M92 + M93 + M141 + -M142 + M143 + M147
	C[2][3] = -M1 + M13 + M20 + M21 + -M23 + -M24 + -M38 + -M39 + M58 + M59 + -M77 + M89 + M96 + M97 + -M99 + -M100 + -M114 + -M115 + M134 + M135
	C[3][3] = -M10 + M12 + M18 + -M19 + -M20 + -M25 + M27 + M32 + -M50 + -M53 + -M86 + M88 + M94 + -M95 + -M96 + -M101 + M103 + M108 + -M126 + -M129
	C[4][3] = M1 + M2 + -M8 + -M10 + M12 + -M13 + -M19 + -M20 + -M21 + -M31 + M70 + M77 + M78 + -M84 + -M86 + M88 + -M89 + -M95 + -M96 + -M97 + -M107 + M146
	C[5][3] = -M2 + M8 + -M15 + M20 + M31 + M40 + -M41 + -M64 + M65 + M74 + -M78 + M84 + -M91 + M96 + M107 + M116 + -M117 + -M140 + M141 + M150
	C[6][3] = -M9 + -M13 + M23 + M30 + M32 + -M35 + M36 + -M37 + M56 + -M75 + -M85 + -M89 + M99 + M106 + M108 + -M111 + M112 + -M113 + M132 + -M151
	C[7][3] = M6 + -M7 + M8 + -M9 + -M13 + M14 + M27 + -M28 + M30 + M32 + -M44 + M82 + -M83 + M84 + -M85 + -M89 + M90 + M103 + -M104 + M106 + M108 + -M120
	C[8][3] = -M7 + M14 + -M18 + -M21 + M25 + -M28 + M30 + -M31 + -M47 + M48 + -M83 + M90 + -M94 + -M97 + M101 + -M104 + M106 + -M107 + -M123 + M124
	C[9][3] = -M6 + -M8 + M15 + M16 + -M27 + -M30 + M33 + -M34 + -M54 + M57 + -M82 + -M84 + M91 + M92 + -M103 + -M106 + M109 + -M110 + -M130 + M133
	return (C, 152)