# Matrix multiplication: C = A @ B
# A: 3×4, B: 4×5, C: 3×5
# Using 47 multiplications (Strassen-like algorithm)

from multiply import Matrix

def multiply(A, B):
	C = Matrix([[0 for _ in range(3)] for _ in range(5)])
	M0 = -A[1][1] * (B[1][2] + -B[1][3] + -B[1][4])
	M1 = (-A[1][1] + -A[2][1] + -A[2][3]) * (B[1][4] + -B[3][2])
	M2 = -A[1][0] * (B[0][2] + -B[0][3] + -B[0][4])
	M3 = (A[0][0] + A[0][3] + -A[1][0]) * (-B[0][4] + B[3][2])
	M4 = (A[0][0] + -A[0][2] + -A[1][0]) * (B[0][3] + B[2][2])
	M5 = (A[0][0] + -A[0][2] + -A[1][0] + A[1][1] + A[1][2] + A[2][1] + A[2][2]) * -B[2][2]
	M6 = (A[0][0] + A[0][3] + -A[1][0] + -A[1][1] + -A[1][3] + -A[2][1] + -A[2][3]) * -B[3][2]
	M7 = -A[0][1] * (-B[0][1] + -B[1][1] + B[1][3] + B[1][4])
	M8 = (-A[0][1] + A[2][1] + A[2][3]) * (B[1][4] + -B[3][1] + B[3][3])
	M9 = (A[0][0] + -A[0][1] + -A[1][0]) * (-B[0][1] + -B[1][1] + -B[1][2] + B[1][3] + B[1][4])
	M10 = (-A[0][1] + A[2][0]) * (-B[0][1] + -B[1][0])
	M11 = A[2][0] * (B[0][0] + -B[0][3] + -B[0][4] + B[1][0])
	M12 = (-A[1][1] + A[2][0] + -A[2][1]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + B[1][0])
	M13 = (A[0][0] + -A[0][2] + -A[2][0]) * (B[0][3] + B[2][0] + -B[2][4])
	M14 = (A[2][1] + A[2][3]) * B[1][4]
	M15 = (A[0][0] + -A[0][2]) * B[0][3]
	M16 = (A[0][0] + A[0][3]) * -B[0][4]
	M17 = (A[0][0] + A[0][3] + -A[2][0]) * (-B[0][4] + -B[2][4] + B[3][0])
	M18 = (-A[1][1] + -A[2][1] + -A[2][2]) * (B[1][3] + -B[2][2])
	M19 = (-A[0][1] + A[2][1] + A[2][2]) * (B[1][3] + -B[2][1] + -B[3][3])
	M20 = (-A[0][1] + -A[0][3] + A[2][1] + A[2][3]) * (B[3][1] + -B[3][3])
	M21 = (-A[0][1] + -A[0][3] + A[1][2] + -A[1][3] + A[2][1] + A[2][3]) * (B[2][1] + B[3][3])
	M22 = (A[1][2] + -A[1][3]) * -B[2][4]
	M23 = (-A[1][1] + -A[2][1]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4] + B[1][0] + B[1][2] + -B[2][2] + -B[3][2])
	M24 = (-A[1][0] + A[1][1] + -A[2][0] + A[2][1]) * (B[0][0] + B[0][2] + -B[0][3] + -B[0][4])
	M25 = (-A[0][1] + A[2][1]) * (-B[1][0] + B[1][1] + -B[2][1] + -B[3][1])
	M26 = (A[0][0] + -A[1][0]) * (-B[0][1] + -B[0][2] + -B[1][1] + -B[1][2] + B[1][3] + B[1][4] + -B[2][2] + B[3][2])
	M27 = (-A[0][1] + -A[0][3] + -A[1][3] + A[2][1] + A[2][3]) * (B[1][1] + B[1][2] + -B[1][3] + -B[1][4] + B[2][1] + B[3][1])
	M28 = (A[0][0] + -A[0][1]) * -B[0][1]
	M29 = A[2][2] * (B[1][3] + B[2][0] + -B[2][3] + -B[2][4] + -B[3][3])
	M30 = (A[0][0] + -A[2][0]) * (B[0][0] + -B[0][1] + B[2][0] + -B[3][0])
	M31 = (A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * -B[3][3]
	M32 = A[2][3] * (B[1][4] + B[3][0] + -B[3][4])
	M33 = A[0][2] * (B[0][3] + -B[2][1] + B[2][3])
	M34 = A[0][3] * (-B[0][4] + -B[2][4] + -B[3][1] + B[3][3] + B[3][4])
	M35 = (A[2][1] + A[2][2]) * B[1][3]
	M36 = (A[2][2] + -A[2][3]) * -B[3][3]
	M37 = (2*A[0][0] + -A[0][2] + A[0][3] + -A[1][2] + A[1][3] + -2*A[2][0] + A[2][2] + -A[2][3]) * B[3][0]
	M38 = (A[0][0] + -A[0][2] + -A[1][2] + A[1][3] + -A[2][0] + A[2][2]) * (-B[2][4] + -B[3][0])
	M39 = (A[0][2] + -A[0][3] + A[1][2] + -A[1][3] + -A[2][2] + A[2][3]) * B[2][1]
	M40 = A[1][2] * (-B[2][2] + B[2][3] + B[3][3])
	M41 = (A[0][0] + -2*A[0][1] + -A[0][3] + -A[1][0] + A[1][1] + -A[1][3] + A[2][1] + A[2][3]) * (B[1][1] + B[1][2] + -B[1][3] + -B[1][4])
	M42 = (A[0][0] + -A[0][2] + -A[1][2] + -A[2][0] + A[2][2]) * (B[2][0] + B[3][0])
	M43 = A[1][3] * (-B[2][4] + B[3][2] + -B[3][4])
	M44 = (A[0][0] + -A[0][2] + -A[2][0] + A[2][2]) * (B[2][0] + -B[2][4])
	M45 = (A[0][2] + A[0][3] + -A[1][2] + A[1][3]) * -B[2][4]
	M46 = (A[2][0] + -A[2][1]) * -B[1][0]

# Assemble result matrix
	C[0][0] = M10 + M11 + -M13 + M15 + -M16 + M17 + -M22 + -M28 + M30 + -M45
	C[1][0] = M2 + -M12 + -M22 + -M24 + -M38 + -M42 + M44 + -M46
	C[2][0] = M11 + -M13 + M15 + -M16 + M17 + -2*M22 + -M37 + -M38 + M44 + -M45 + M46
	C[3][0] = M7 + -M8 + M14 + -M19 + -M20 + -M21 + -M28 + -M31 + M35 + M39
	C[4][0] = M0 + M9 + M20 + M21 + -M27 + -M28 + M31 + M36 + M41
	C[0][1] = M7 + -M8 + -M10 + M14 + -M19 + M25 + M35 + M36 + M46
	C[1][1] = -M2 + M3 + -M4 + -M7 + M9 + M15 + -M16 + -M26
	C[2][1] = -M0 + -M1 + -M2 + M3 + -M4 + -M5 + M6 + -M14 + M15 + -M16 + -M18 + -M35
	C[3][1] = M0 + M1 + -M11 + M12 + M14 + M18 + -M23 + M35
	C[4][1] = M15 + -M19 + -M21 + -M31 + M33 + M35 + M39
	C[0][2] = -M4 + -M5 + M15 + -M18 + M31 + -M35 + M36 + M40
	C[1][2] = -M13 + M15 + -M29 + M35 + M36 + M44
	C[2][2] = -M8 + M14 + -M16 + -M20 + -M22 + M34 + -M45
	C[3][2] = -M1 + M3 + M6 + -M14 + -M16 + -M22 + -M43
	C[4][2] = M14 + -M16 + M17 + -2*M22 + -M32 + -M37 + -M38 + -M45
	return (C, 47)